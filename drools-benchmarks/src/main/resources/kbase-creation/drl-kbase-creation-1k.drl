package org.drools.benchmarks.bre;

import java.util.Date;

import org.drools.benchmarks.domain.Account;
import org.drools.benchmarks.domain.Address;
import org.drools.benchmarks.domain.Customer;
import org.drools.benchmarks.domain.event.NewCustomerEvent;
import org.drools.benchmarks.domain.Transaction;
import org.drools.benchmarks.domain.event.TransactionCreatedEvent;

global java.util.ArrayList list;


rule "accountBalance0"
when 
	$account : Account(balance < 0 || > 0)
then
    modify ($account) { setBalance(0) };
    list.add(drools.getRule().getName());
end


rule "accountBalance1"
when 
	$account : Account(balance < 2 || > 3)
then
    modify ($account) { setBalance(3) };
    list.add(drools.getRule().getName());
end


rule "accountBalance2"
when 
	$account : Account(balance < 4 || > 6)
then
    modify ($account) { setBalance(6) };
    list.add(drools.getRule().getName());
end


rule "accountBalance3"
when 
	$account : Account(balance < 6 || > 9)
then
    modify ($account) { setBalance(9) };
    list.add(drools.getRule().getName());
end


rule "accountBalance4"
when 
	$account : Account(balance < 8 || > 12)
then
    modify ($account) { setBalance(12) };
    list.add(drools.getRule().getName());
end


rule "accountBalance5"
when 
	$account : Account(balance < 10 || > 15)
then
    modify ($account) { setBalance(15) };
    list.add(drools.getRule().getName());
end


rule "accountBalance6"
when 
	$account : Account(balance < 12 || > 18)
then
    modify ($account) { setBalance(18) };
    list.add(drools.getRule().getName());
end


rule "accountBalance7"
when 
	$account : Account(balance < 14 || > 21)
then
    modify ($account) { setBalance(21) };
    list.add(drools.getRule().getName());
end


rule "accountBalance8"
when 
	$account : Account(balance < 16 || > 24)
then
    modify ($account) { setBalance(24) };
    list.add(drools.getRule().getName());
end


rule "accountBalance9"
when 
	$account : Account(balance < 18 || > 27)
then
    modify ($account) { setBalance(27) };
    list.add(drools.getRule().getName());
end


rule "accountBalance10"
when 
	$account : Account(balance < 20 || > 30)
then
    modify ($account) { setBalance(30) };
    list.add(drools.getRule().getName());
end


rule "accountBalance11"
when 
	$account : Account(balance < 22 || > 33)
then
    modify ($account) { setBalance(33) };
    list.add(drools.getRule().getName());
end


rule "accountBalance12"
when 
	$account : Account(balance < 24 || > 36)
then
    modify ($account) { setBalance(36) };
    list.add(drools.getRule().getName());
end


rule "accountBalance13"
when 
	$account : Account(balance < 26 || > 39)
then
    modify ($account) { setBalance(39) };
    list.add(drools.getRule().getName());
end


rule "accountBalance14"
when 
	$account : Account(balance < 28 || > 42)
then
    modify ($account) { setBalance(42) };
    list.add(drools.getRule().getName());
end


rule "accountBalance15"
when 
	$account : Account(balance < 30 || > 45)
then
    modify ($account) { setBalance(45) };
    list.add(drools.getRule().getName());
end


rule "accountBalance16"
when 
	$account : Account(balance < 32 || > 48)
then
    modify ($account) { setBalance(48) };
    list.add(drools.getRule().getName());
end


rule "accountBalance17"
when 
	$account : Account(balance < 34 || > 51)
then
    modify ($account) { setBalance(51) };
    list.add(drools.getRule().getName());
end


rule "accountBalance18"
when 
	$account : Account(balance < 36 || > 54)
then
    modify ($account) { setBalance(54) };
    list.add(drools.getRule().getName());
end


rule "accountBalance19"
when 
	$account : Account(balance < 38 || > 57)
then
    modify ($account) { setBalance(57) };
    list.add(drools.getRule().getName());
end


rule "accountBalance20"
when 
	$account : Account(balance < 40 || > 60)
then
    modify ($account) { setBalance(60) };
    list.add(drools.getRule().getName());
end


rule "accountBalance21"
when 
	$account : Account(balance < 42 || > 63)
then
    modify ($account) { setBalance(63) };
    list.add(drools.getRule().getName());
end


rule "accountBalance22"
when 
	$account : Account(balance < 44 || > 66)
then
    modify ($account) { setBalance(66) };
    list.add(drools.getRule().getName());
end


rule "accountBalance23"
when 
	$account : Account(balance < 46 || > 69)
then
    modify ($account) { setBalance(69) };
    list.add(drools.getRule().getName());
end


rule "accountBalance24"
when 
	$account : Account(balance < 48 || > 72)
then
    modify ($account) { setBalance(72) };
    list.add(drools.getRule().getName());
end


rule "accountBalance25"
when 
	$account : Account(balance < 50 || > 75)
then
    modify ($account) { setBalance(75) };
    list.add(drools.getRule().getName());
end


rule "accountBalance26"
when 
	$account : Account(balance < 52 || > 78)
then
    modify ($account) { setBalance(78) };
    list.add(drools.getRule().getName());
end


rule "accountBalance27"
when 
	$account : Account(balance < 54 || > 81)
then
    modify ($account) { setBalance(81) };
    list.add(drools.getRule().getName());
end


rule "accountBalance28"
when 
	$account : Account(balance < 56 || > 84)
then
    modify ($account) { setBalance(84) };
    list.add(drools.getRule().getName());
end


rule "accountBalance29"
when 
	$account : Account(balance < 58 || > 87)
then
    modify ($account) { setBalance(87) };
    list.add(drools.getRule().getName());
end


rule "accountBalance30"
when 
	$account : Account(balance < 60 || > 90)
then
    modify ($account) { setBalance(90) };
    list.add(drools.getRule().getName());
end


rule "accountBalance31"
when 
	$account : Account(balance < 62 || > 93)
then
    modify ($account) { setBalance(93) };
    list.add(drools.getRule().getName());
end


rule "accountBalance32"
when 
	$account : Account(balance < 64 || > 96)
then
    modify ($account) { setBalance(96) };
    list.add(drools.getRule().getName());
end


rule "accountBalance33"
when 
	$account : Account(balance < 66 || > 99)
then
    modify ($account) { setBalance(99) };
    list.add(drools.getRule().getName());
end


rule "accountBalance34"
when 
	$account : Account(balance < 68 || > 102)
then
    modify ($account) { setBalance(102) };
    list.add(drools.getRule().getName());
end


rule "accountBalance35"
when 
	$account : Account(balance < 70 || > 105)
then
    modify ($account) { setBalance(105) };
    list.add(drools.getRule().getName());
end


rule "accountBalance36"
when 
	$account : Account(balance < 72 || > 108)
then
    modify ($account) { setBalance(108) };
    list.add(drools.getRule().getName());
end


rule "accountBalance37"
when 
	$account : Account(balance < 74 || > 111)
then
    modify ($account) { setBalance(111) };
    list.add(drools.getRule().getName());
end


rule "accountBalance38"
when 
	$account : Account(balance < 76 || > 114)
then
    modify ($account) { setBalance(114) };
    list.add(drools.getRule().getName());
end


rule "accountBalance39"
when 
	$account : Account(balance < 78 || > 117)
then
    modify ($account) { setBalance(117) };
    list.add(drools.getRule().getName());
end


rule "accountBalance40"
when 
	$account : Account(balance < 80 || > 120)
then
    modify ($account) { setBalance(120) };
    list.add(drools.getRule().getName());
end


rule "accountBalance41"
when 
	$account : Account(balance < 82 || > 123)
then
    modify ($account) { setBalance(123) };
    list.add(drools.getRule().getName());
end


rule "accountBalance42"
when 
	$account : Account(balance < 84 || > 126)
then
    modify ($account) { setBalance(126) };
    list.add(drools.getRule().getName());
end


rule "accountBalance43"
when 
	$account : Account(balance < 86 || > 129)
then
    modify ($account) { setBalance(129) };
    list.add(drools.getRule().getName());
end


rule "accountBalance44"
when 
	$account : Account(balance < 88 || > 132)
then
    modify ($account) { setBalance(132) };
    list.add(drools.getRule().getName());
end

rule "accountBalance2_0"
when 
	$account : Account(balance >= 0 && <= 0)
then
	modify ($account) { setBalance(0) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_1"
when 
	$account : Account(balance >= 2 && <= 3)
then
	modify ($account) { setBalance(3) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_2"
when 
	$account : Account(balance >= 4 && <= 6)
then
	modify ($account) { setBalance(6) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_3"
when 
	$account : Account(balance >= 6 && <= 9)
then
	modify ($account) { setBalance(9) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_4"
when 
	$account : Account(balance >= 8 && <= 12)
then
	modify ($account) { setBalance(12) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_5"
when 
	$account : Account(balance >= 10 && <= 15)
then
	modify ($account) { setBalance(15) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_6"
when 
	$account : Account(balance >= 12 && <= 18)
then
	modify ($account) { setBalance(18) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_7"
when 
	$account : Account(balance >= 14 && <= 21)
then
	modify ($account) { setBalance(21) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_8"
when 
	$account : Account(balance >= 16 && <= 24)
then
	modify ($account) { setBalance(24) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_9"
when 
	$account : Account(balance >= 18 && <= 27)
then
	modify ($account) { setBalance(27) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_10"
when 
	$account : Account(balance >= 20 && <= 30)
then
	modify ($account) { setBalance(30) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_11"
when 
	$account : Account(balance >= 22 && <= 33)
then
	modify ($account) { setBalance(33) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_12"
when 
	$account : Account(balance >= 24 && <= 36)
then
	modify ($account) { setBalance(36) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_13"
when 
	$account : Account(balance >= 26 && <= 39)
then
	modify ($account) { setBalance(39) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_14"
when 
	$account : Account(balance >= 28 && <= 42)
then
	modify ($account) { setBalance(42) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_15"
when 
	$account : Account(balance >= 30 && <= 45)
then
	modify ($account) { setBalance(45) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_16"
when 
	$account : Account(balance >= 32 && <= 48)
then
	modify ($account) { setBalance(48) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_17"
when 
	$account : Account(balance >= 34 && <= 51)
then
	modify ($account) { setBalance(51) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_18"
when 
	$account : Account(balance >= 36 && <= 54)
then
	modify ($account) { setBalance(54) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_19"
when 
	$account : Account(balance >= 38 && <= 57)
then
	modify ($account) { setBalance(57) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_20"
when 
	$account : Account(balance >= 40 && <= 60)
then
	modify ($account) { setBalance(60) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_21"
when 
	$account : Account(balance >= 42 && <= 63)
then
	modify ($account) { setBalance(63) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_22"
when 
	$account : Account(balance >= 44 && <= 66)
then
	modify ($account) { setBalance(66) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_23"
when 
	$account : Account(balance >= 46 && <= 69)
then
	modify ($account) { setBalance(69) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_24"
when 
	$account : Account(balance >= 48 && <= 72)
then
	modify ($account) { setBalance(72) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_25"
when 
	$account : Account(balance >= 50 && <= 75)
then
	modify ($account) { setBalance(75) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_26"
when 
	$account : Account(balance >= 52 && <= 78)
then
	modify ($account) { setBalance(78) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_27"
when 
	$account : Account(balance >= 54 && <= 81)
then
	modify ($account) { setBalance(81) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_28"
when 
	$account : Account(balance >= 56 && <= 84)
then
	modify ($account) { setBalance(84) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_29"
when 
	$account : Account(balance >= 58 && <= 87)
then
	modify ($account) { setBalance(87) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_30"
when 
	$account : Account(balance >= 60 && <= 90)
then
	modify ($account) { setBalance(90) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_31"
when 
	$account : Account(balance >= 62 && <= 93)
then
	modify ($account) { setBalance(93) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_32"
when 
	$account : Account(balance >= 64 && <= 96)
then
	modify ($account) { setBalance(96) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_33"
when 
	$account : Account(balance >= 66 && <= 99)
then
	modify ($account) { setBalance(99) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_34"
when 
	$account : Account(balance >= 68 && <= 102)
then
	modify ($account) { setBalance(102) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_35"
when 
	$account : Account(balance >= 70 && <= 105)
then
	modify ($account) { setBalance(105) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_36"
when 
	$account : Account(balance >= 72 && <= 108)
then
	modify ($account) { setBalance(108) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_37"
when 
	$account : Account(balance >= 74 && <= 111)
then
	modify ($account) { setBalance(111) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_38"
when 
	$account : Account(balance >= 76 && <= 114)
then
	modify ($account) { setBalance(114) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_39"
when 
	$account : Account(balance >= 78 && <= 117)
then
	modify ($account) { setBalance(117) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_40"
when 
	$account : Account(balance >= 80 && <= 120)
then
	modify ($account) { setBalance(120) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_41"
when 
	$account : Account(balance >= 82 && <= 123)
then
	modify ($account) { setBalance(123) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_42"
when 
	$account : Account(balance >= 84 && <= 126)
then
	modify ($account) { setBalance(126) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_43"
when 
	$account : Account(balance >= 86 && <= 129)
then
	modify ($account) { setBalance(129) };
	list.add(drools.getRule().getName());
end

rule "accountBalance2_44"
when 
	$account : Account(balance >= 88 && <= 132)
then
	modify ($account) { setBalance(132) };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix0"
when 
	$address : Address(postCode not matches "0.*")
then
	modify ($address) { setPostCode("0") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix1"
when 
	$address : Address(postCode not matches "2.*")
then
	modify ($address) { setPostCode("2") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix2"
when 
	$address : Address(postCode not matches "4.*")
then
	modify ($address) { setPostCode("4") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix3"
when 
	$address : Address(postCode not matches "6.*")
then
	modify ($address) { setPostCode("6") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix4"
when 
	$address : Address(postCode not matches "8.*")
then
	modify ($address) { setPostCode("8") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix5"
when 
	$address : Address(postCode not matches "10.*")
then
	modify ($address) { setPostCode("10") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix6"
when 
	$address : Address(postCode not matches "12.*")
then
	modify ($address) { setPostCode("12") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix7"
when 
	$address : Address(postCode not matches "14.*")
then
	modify ($address) { setPostCode("14") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix8"
when 
	$address : Address(postCode not matches "16.*")
then
	modify ($address) { setPostCode("16") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix9"
when 
	$address : Address(postCode not matches "18.*")
then
	modify ($address) { setPostCode("18") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix10"
when 
	$address : Address(postCode not matches "20.*")
then
	modify ($address) { setPostCode("20") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix11"
when 
	$address : Address(postCode not matches "22.*")
then
	modify ($address) { setPostCode("22") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix12"
when 
	$address : Address(postCode not matches "24.*")
then
	modify ($address) { setPostCode("24") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix13"
when 
	$address : Address(postCode not matches "26.*")
then
	modify ($address) { setPostCode("26") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix14"
when 
	$address : Address(postCode not matches "28.*")
then
	modify ($address) { setPostCode("28") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix15"
when 
	$address : Address(postCode not matches "30.*")
then
	modify ($address) { setPostCode("30") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix16"
when 
	$address : Address(postCode not matches "32.*")
then
	modify ($address) { setPostCode("32") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix17"
when 
	$address : Address(postCode not matches "34.*")
then
	modify ($address) { setPostCode("34") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix18"
when 
	$address : Address(postCode not matches "36.*")
then
	modify ($address) { setPostCode("36") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix19"
when 
	$address : Address(postCode not matches "38.*")
then
	modify ($address) { setPostCode("38") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix20"
when 
	$address : Address(postCode not matches "40.*")
then
	modify ($address) { setPostCode("40") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix21"
when 
	$address : Address(postCode not matches "42.*")
then
	modify ($address) { setPostCode("42") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix22"
when 
	$address : Address(postCode not matches "44.*")
then
	modify ($address) { setPostCode("44") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix23"
when 
	$address : Address(postCode not matches "46.*")
then
	modify ($address) { setPostCode("46") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix24"
when 
	$address : Address(postCode not matches "48.*")
then
	modify ($address) { setPostCode("48") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix25"
when 
	$address : Address(postCode not matches "50.*")
then
	modify ($address) { setPostCode("50") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix26"
when 
	$address : Address(postCode not matches "52.*")
then
	modify ($address) { setPostCode("52") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix27"
when 
	$address : Address(postCode not matches "54.*")
then
	modify ($address) { setPostCode("54") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix28"
when 
	$address : Address(postCode not matches "56.*")
then
	modify ($address) { setPostCode("56") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix29"
when 
	$address : Address(postCode not matches "58.*")
then
	modify ($address) { setPostCode("58") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix30"
when 
	$address : Address(postCode not matches "60.*")
then
	modify ($address) { setPostCode("60") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix31"
when 
	$address : Address(postCode not matches "62.*")
then
	modify ($address) { setPostCode("62") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix32"
when 
	$address : Address(postCode not matches "64.*")
then
	modify ($address) { setPostCode("64") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix33"
when 
	$address : Address(postCode not matches "66.*")
then
	modify ($address) { setPostCode("66") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix34"
when 
	$address : Address(postCode not matches "68.*")
then
	modify ($address) { setPostCode("68") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix35"
when 
	$address : Address(postCode not matches "70.*")
then
	modify ($address) { setPostCode("70") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix36"
when 
	$address : Address(postCode not matches "72.*")
then
	modify ($address) { setPostCode("72") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix37"
when 
	$address : Address(postCode not matches "74.*")
then
	modify ($address) { setPostCode("74") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix38"
when 
	$address : Address(postCode not matches "76.*")
then
	modify ($address) { setPostCode("76") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix39"
when 
	$address : Address(postCode not matches "78.*")
then
	modify ($address) { setPostCode("78") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix40"
when 
	$address : Address(postCode not matches "80.*")
then
	modify ($address) { setPostCode("80") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix41"
when 
	$address : Address(postCode not matches "82.*")
then
	modify ($address) { setPostCode("82") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix42"
when 
	$address : Address(postCode not matches "84.*")
then
	modify ($address) { setPostCode("84") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix43"
when 
	$address : Address(postCode not matches "86.*")
then
	modify ($address) { setPostCode("86") };
	list.add(drools.getRule().getName());
end

rule "notMatchesPostalCodeWithPrefix44"
when 
	$address : Address(postCode not matches "88.*")
then
	modify ($address) { setPostCode("88") };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance0"
when 
	$account : Account(balance > 0)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(0) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance1"
when 
	$account : Account(balance > 2)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(2) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance2"
when 
	$account : Account(balance > 4)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(4) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance3"
when 
	$account : Account(balance > 6)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(6) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance4"
when 
	$account : Account(balance > 8)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(8) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance5"
when 
	$account : Account(balance > 10)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(10) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance6"
when 
	$account : Account(balance > 12)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(12) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance7"
when 
	$account : Account(balance > 14)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(14) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance8"
when 
	$account : Account(balance > 16)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(16) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance9"
when 
	$account : Account(balance > 18)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(18) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance10"
when 
	$account : Account(balance > 20)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(20) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance11"
when 
	$account : Account(balance > 22)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(22) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance12"
when 
	$account : Account(balance > 24)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(24) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance13"
when 
	$account : Account(balance > 26)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(26) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance14"
when 
	$account : Account(balance > 28)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(28) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance15"
when 
	$account : Account(balance > 30)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(30) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance16"
when 
	$account : Account(balance > 32)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(32) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance17"
when 
	$account : Account(balance > 34)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(34) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance18"
when 
	$account : Account(balance > 36)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(36) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance19"
when 
	$account : Account(balance > 38)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(38) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance20"
when 
	$account : Account(balance > 40)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(40) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance21"
when 
	$account : Account(balance > 42)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(42) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance22"
when 
	$account : Account(balance > 44)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(44) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance23"
when 
	$account : Account(balance > 46)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(46) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance24"
when 
	$account : Account(balance > 48)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(48) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance25"
when 
	$account : Account(balance > 50)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(50) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance26"
when 
	$account : Account(balance > 52)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(52) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance27"
when 
	$account : Account(balance > 54)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(54) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance28"
when 
	$account : Account(balance > 56)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(56) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance29"
when 
	$account : Account(balance > 58)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(58) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance30"
when 
	$account : Account(balance > 60)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(60) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance31"
when 
	$account : Account(balance > 62)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(62) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance32"
when 
	$account : Account(balance > 64)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(64) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance33"
when 
	$account : Account(balance > 66)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(66) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance34"
when 
	$account : Account(balance > 68)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(68) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance35"
when 
	$account : Account(balance > 70)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(70) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance36"
when 
	$account : Account(balance > 72)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(72) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance37"
when 
	$account : Account(balance > 74)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(74) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance38"
when 
	$account : Account(balance > 76)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(76) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance39"
when 
	$account : Account(balance > 78)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(78) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance40"
when 
	$account : Account(balance > 80)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(80) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance41"
when 
	$account : Account(balance > 82)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(82) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance42"
when 
	$account : Account(balance > 84)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(84) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance43"
when 
	$account : Account(balance > 86)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(86) };
	list.add(drools.getRule().getName());
end

rule "notContainsAccountWithHighBalance44"
when 
	$account : Account(balance > 88)
	$customer : Customer (this == $account.owner, accounts not contains $account)
then
	modify ($account) { setBalance(88) };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava0"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "0"))
then
	modify ($address) { setCity("0") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava1"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "2"))
then
	modify ($address) { setCity("2") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava2"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "4"))
then
	modify ($address) { setCity("4") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava3"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "6"))
then
	modify ($address) { setCity("6") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava4"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "8"))
then
	modify ($address) { setCity("8") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava5"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "10"))
then
	modify ($address) { setCity("10") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava6"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "12"))
then
	modify ($address) { setCity("12") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava7"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "14"))
then
	modify ($address) { setCity("14") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava8"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "16"))
then
	modify ($address) { setCity("16") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava9"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "18"))
then
	modify ($address) { setCity("18") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava10"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "20"))
then
	modify ($address) { setCity("20") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava11"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "22"))
then
	modify ($address) { setCity("22") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava12"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "24"))
then
	modify ($address) { setCity("24") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava13"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "26"))
then
	modify ($address) { setCity("26") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava14"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "28"))
then
	modify ($address) { setCity("28") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava15"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "30"))
then
	modify ($address) { setCity("30") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava16"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "32"))
then
	modify ($address) { setCity("32") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava17"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "34"))
then
	modify ($address) { setCity("34") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava18"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "36"))
then
	modify ($address) { setCity("36") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava19"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "38"))
then
	modify ($address) { setCity("38") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava20"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "40"))
then
	modify ($address) { setCity("40") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava21"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "42"))
then
	modify ($address) { setCity("42") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava22"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "44"))
then
	modify ($address) { setCity("44") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava23"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "46"))
then
	modify ($address) { setCity("46") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava24"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "48"))
then
	modify ($address) { setCity("48") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava25"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "50"))
then
	modify ($address) { setCity("50") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava26"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "52"))
then
	modify ($address) { setCity("52") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava27"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "54"))
then
	modify ($address) { setCity("54") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava28"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "56"))
then
	modify ($address) { setCity("56") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava29"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "58"))
then
	modify ($address) { setCity("58") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava30"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "60"))
then
	modify ($address) { setCity("60") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava31"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "62"))
then
	modify ($address) { setCity("62") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava32"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "64"))
then
	modify ($address) { setCity("64") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava33"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "66"))
then
	modify ($address) { setCity("66") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava34"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "68"))
then
	modify ($address) { setCity("68") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava35"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "70"))
then
	modify ($address) { setCity("70") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava36"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "72"))
then
	modify ($address) { setCity("72") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava37"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "74"))
then
	modify ($address) { setCity("74") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava38"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "76"))
then
	modify ($address) { setCity("76") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava39"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "78"))
then
	modify ($address) { setCity("78") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava40"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "80"))
then
	modify ($address) { setCity("80") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava41"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "82"))
then
	modify ($address) { setCity("82") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava42"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "84"))
then
	modify ($address) { setCity("84") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava43"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "86"))
then
	modify ($address) { setCity("86") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstrava44"
when 
	$address : Address(city in ("Brno", "Praha", "Ostrava", "88"))
then
	modify ($address) { setCity("88") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov0"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "0"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("0") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov1"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "2"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("2") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov2"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "4"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("4") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov3"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "6"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("6") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov4"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "8"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("8") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov5"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "10"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("10") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov6"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "12"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("12") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov7"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "14"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("14") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov8"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "16"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("16") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov9"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "18"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("18") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov10"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "20"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("20") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov11"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "22"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("22") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov12"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "24"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("24") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov13"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "26"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("26") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov14"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "28"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("28") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov15"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "30"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("30") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov16"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "32"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("32") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov17"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "34"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("34") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov18"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "36"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("36") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov19"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "38"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("38") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov20"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "40"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("40") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov21"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "42"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("42") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov22"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "44"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("44") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov23"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "46"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("46") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov24"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "48"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("48") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov25"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "50"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("50") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov26"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "52"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("52") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov27"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "54"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("54") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov28"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "56"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("56") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov29"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "58"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("58") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov30"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "60"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("60") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov31"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "62"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("62") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov32"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "64"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("64") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov33"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "66"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("66") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov34"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "68"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("68") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov35"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "70"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("70") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov36"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "72"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("72") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov37"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "74"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("74") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov38"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "76"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("76") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov39"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "78"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("78") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov40"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "80"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("80") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov41"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "82"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("82") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov42"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "84"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("84") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov43"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "86"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("86") };
	list.add(drools.getRule().getName());
end

rule "BrnoPrahaOstravaAndZlinPrerov44"
when 
	$address : Address($postCode : postCode, city in ("Brno", "Praha", "Ostrava", "88"))
	$address1 : Address(this != $address, postCode == $postCode, city in ("Zlin", "Prerov", $address.city))
	
then
	modify ($address) { setCity("88") };
	list.add(drools.getRule().getName());
end

rule "exists0"
when 
	exists Customer(firstName == "Jake0")
then
	list.add(drools.getRule().getName());
end

rule "exists1"
when 
	exists Customer(firstName == "Jake2")
then
	list.add(drools.getRule().getName());
end

rule "exists2"
when 
	exists Customer(firstName == "Jake4")
then
	list.add(drools.getRule().getName());
end

rule "exists3"
when 
	exists Customer(firstName == "Jake6")
then
	list.add(drools.getRule().getName());
end

rule "exists4"
when 
	exists Customer(firstName == "Jake8")
then
	list.add(drools.getRule().getName());
end

rule "exists5"
when 
	exists Customer(firstName == "Jake10")
then
	list.add(drools.getRule().getName());
end

rule "exists6"
when 
	exists Customer(firstName == "Jake12")
then
	list.add(drools.getRule().getName());
end

rule "exists7"
when 
	exists Customer(firstName == "Jake14")
then
	list.add(drools.getRule().getName());
end

rule "exists8"
when 
	exists Customer(firstName == "Jake16")
then
	list.add(drools.getRule().getName());
end

rule "exists9"
when 
	exists Customer(firstName == "Jake18")
then
	list.add(drools.getRule().getName());
end

rule "exists10"
when 
	exists Customer(firstName == "Jake20")
then
	list.add(drools.getRule().getName());
end

rule "exists11"
when 
	exists Customer(firstName == "Jake22")
then
	list.add(drools.getRule().getName());
end

rule "exists12"
when 
	exists Customer(firstName == "Jake24")
then
	list.add(drools.getRule().getName());
end

rule "exists13"
when 
	exists Customer(firstName == "Jake26")
then
	list.add(drools.getRule().getName());
end

rule "exists14"
when 
	exists Customer(firstName == "Jake28")
then
	list.add(drools.getRule().getName());
end

rule "exists15"
when 
	exists Customer(firstName == "Jake30")
then
	list.add(drools.getRule().getName());
end

rule "exists16"
when 
	exists Customer(firstName == "Jake32")
then
	list.add(drools.getRule().getName());
end

rule "exists17"
when 
	exists Customer(firstName == "Jake34")
then
	list.add(drools.getRule().getName());
end

rule "exists18"
when 
	exists Customer(firstName == "Jake36")
then
	list.add(drools.getRule().getName());
end

rule "exists19"
when 
	exists Customer(firstName == "Jake38")
then
	list.add(drools.getRule().getName());
end

rule "exists20"
when 
	exists Customer(firstName == "Jake40")
then
	list.add(drools.getRule().getName());
end

rule "exists21"
when 
	exists Customer(firstName == "Jake42")
then
	list.add(drools.getRule().getName());
end

rule "exists22"
when 
	exists Customer(firstName == "Jake44")
then
	list.add(drools.getRule().getName());
end

rule "exists23"
when 
	exists Customer(firstName == "Jake46")
then
	list.add(drools.getRule().getName());
end

rule "exists24"
when 
	exists Customer(firstName == "Jake48")
then
	list.add(drools.getRule().getName());
end

rule "exists25"
when 
	exists Customer(firstName == "Jake50")
then
	list.add(drools.getRule().getName());
end

rule "exists26"
when 
	exists Customer(firstName == "Jake52")
then
	list.add(drools.getRule().getName());
end

rule "exists27"
when 
	exists Customer(firstName == "Jake54")
then
	list.add(drools.getRule().getName());
end

rule "exists28"
when 
	exists Customer(firstName == "Jake56")
then
	list.add(drools.getRule().getName());
end

rule "exists29"
when 
	exists Customer(firstName == "Jake58")
then
	list.add(drools.getRule().getName());
end

rule "exists30"
when 
	exists Customer(firstName == "Jake60")
then
	list.add(drools.getRule().getName());
end

rule "exists31"
when 
	exists Customer(firstName == "Jake62")
then
	list.add(drools.getRule().getName());
end

rule "exists32"
when 
	exists Customer(firstName == "Jake64")
then
	list.add(drools.getRule().getName());
end

rule "exists33"
when 
	exists Customer(firstName == "Jake66")
then
	list.add(drools.getRule().getName());
end

rule "exists34"
when 
	exists Customer(firstName == "Jake68")
then
	list.add(drools.getRule().getName());
end

rule "exists35"
when 
	exists Customer(firstName == "Jake70")
then
	list.add(drools.getRule().getName());
end

rule "exists36"
when 
	exists Customer(firstName == "Jake72")
then
	list.add(drools.getRule().getName());
end

rule "exists37"
when 
	exists Customer(firstName == "Jake74")
then
	list.add(drools.getRule().getName());
end

rule "exists38"
when 
	exists Customer(firstName == "Jake76")
then
	list.add(drools.getRule().getName());
end

rule "exists39"
when 
	exists Customer(firstName == "Jake78")
then
	list.add(drools.getRule().getName());
end

rule "exists40"
when 
	exists Customer(firstName == "Jake80")
then
	list.add(drools.getRule().getName());
end

rule "exists41"
when 
	exists Customer(firstName == "Jake82")
then
	list.add(drools.getRule().getName());
end

rule "exists42"
when 
	exists Customer(firstName == "Jake84")
then
	list.add(drools.getRule().getName());
end

rule "exists43"
when 
	exists Customer(firstName == "Jake86")
then
	list.add(drools.getRule().getName());
end

rule "exists44"
when 
	exists Customer(firstName == "Jake88")
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus0"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus1"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus2"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus3"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus4"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus5"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus6"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus7"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus8"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus9"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus10"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus11"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus12"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus13"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus14"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus15"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus16"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus17"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus18"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus19"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus20"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus21"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus22"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus23"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus24"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus25"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus26"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus27"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus28"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus29"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus30"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus31"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus32"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus33"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus34"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus35"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus36"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus37"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus38"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus39"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus40"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus41"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus42"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus43"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "forallTransactionsWithPendingStatus44"
when 
	not (
		forall ($t : Transaction(status == Status.PENDING)
				     Transaction(this == $t, description != null))
	)
then
	list.add(drools.getRule().getName());
end

rule "accumulate0"
when
    $customer : Customer(firstName == "0")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 0;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("0") };
    list.add(drools.getRule().getName());
end

rule "accumulate1"
when
    $customer : Customer(firstName == "2")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 3;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("2") };
    list.add(drools.getRule().getName());
end

rule "accumulate2"
when
    $customer : Customer(firstName == "4")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 6;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("4") };
    list.add(drools.getRule().getName());
end

rule "accumulate3"
when
    $customer : Customer(firstName == "6")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 9;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("6") };
    list.add(drools.getRule().getName());
end

rule "accumulate4"
when
    $customer : Customer(firstName == "8")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 12;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("8") };
    list.add(drools.getRule().getName());
end

rule "accumulate5"
when
    $customer : Customer(firstName == "10")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 15;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("10") };
    list.add(drools.getRule().getName());
end

rule "accumulate6"
when
    $customer : Customer(firstName == "12")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 18;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("12") };
    list.add(drools.getRule().getName());
end

rule "accumulate7"
when
    $customer : Customer(firstName == "14")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 21;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("14") };
    list.add(drools.getRule().getName());
end

rule "accumulate8"
when
    $customer : Customer(firstName == "16")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 24;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("16") };
    list.add(drools.getRule().getName());
end

rule "accumulate9"
when
    $customer : Customer(firstName == "18")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 27;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("18") };
    list.add(drools.getRule().getName());
end

rule "accumulate10"
when
    $customer : Customer(firstName == "20")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 30;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("20") };
    list.add(drools.getRule().getName());
end

rule "accumulate11"
when
    $customer : Customer(firstName == "22")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 33;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("22") };
    list.add(drools.getRule().getName());
end

rule "accumulate12"
when
    $customer : Customer(firstName == "24")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 36;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("24") };
    list.add(drools.getRule().getName());
end

rule "accumulate13"
when
    $customer : Customer(firstName == "26")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 39;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("26") };
    list.add(drools.getRule().getName());
end

rule "accumulate14"
when
    $customer : Customer(firstName == "28")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 42;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("28") };
    list.add(drools.getRule().getName());
end

rule "accumulate15"
when
    $customer : Customer(firstName == "30")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 45;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("30") };
    list.add(drools.getRule().getName());
end

rule "accumulate16"
when
    $customer : Customer(firstName == "32")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 48;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("32") };
    list.add(drools.getRule().getName());
end

rule "accumulate17"
when
    $customer : Customer(firstName == "34")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 51;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("34") };
    list.add(drools.getRule().getName());
end

rule "accumulate18"
when
    $customer : Customer(firstName == "36")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 54;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("36") };
    list.add(drools.getRule().getName());
end

rule "accumulate19"
when
    $customer : Customer(firstName == "38")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 57;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("38") };
    list.add(drools.getRule().getName());
end

rule "accumulate20"
when
    $customer : Customer(firstName == "40")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 60;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("40") };
    list.add(drools.getRule().getName());
end

rule "accumulate21"
when
    $customer : Customer(firstName == "42")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 63;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("42") };
    list.add(drools.getRule().getName());
end

rule "accumulate22"
when
    $customer : Customer(firstName == "44")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 66;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("44") };
    list.add(drools.getRule().getName());
end

rule "accumulate23"
when
    $customer : Customer(firstName == "46")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 69;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("46") };
    list.add(drools.getRule().getName());
end

rule "accumulate24"
when
    $customer : Customer(firstName == "48")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 72;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("48") };
    list.add(drools.getRule().getName());
end

rule "accumulate25"
when
    $customer : Customer(firstName == "50")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 75;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("50") };
    list.add(drools.getRule().getName());
end

rule "accumulate26"
when
    $customer : Customer(firstName == "52")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 78;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("52") };
    list.add(drools.getRule().getName());
end

rule "accumulate27"
when
    $customer : Customer(firstName == "54")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 81;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("54") };
    list.add(drools.getRule().getName());
end

rule "accumulate28"
when
    $customer : Customer(firstName == "56")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 84;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("56") };
    list.add(drools.getRule().getName());
end

rule "accumulate29"
when
    $customer : Customer(firstName == "58")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 87;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("58") };
    list.add(drools.getRule().getName());
end

rule "accumulate30"
when
    $customer : Customer(firstName == "60")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 90;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("60") };
    list.add(drools.getRule().getName());
end

rule "accumulate31"
when
    $customer : Customer(firstName == "62")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 93;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("62") };
    list.add(drools.getRule().getName());
end

rule "accumulate32"
when
    $customer : Customer(firstName == "64")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 96;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("64") };
    list.add(drools.getRule().getName());
end

rule "accumulate33"
when
    $customer : Customer(firstName == "66")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 99;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("66") };
    list.add(drools.getRule().getName());
end

rule "accumulate34"
when
    $customer : Customer(firstName == "68")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 102;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("68") };
    list.add(drools.getRule().getName());
end

rule "accumulate35"
when
    $customer : Customer(firstName == "70")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 105;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("70") };
    list.add(drools.getRule().getName());
end

rule "accumulate36"
when
    $customer : Customer(firstName == "72")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 108;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("72") };
    list.add(drools.getRule().getName());
end

rule "accumulate37"
when
    $customer : Customer(firstName == "74")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 111;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("74") };
    list.add(drools.getRule().getName());
end

rule "accumulate38"
when
    $customer : Customer(firstName == "76")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 114;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("76") };
    list.add(drools.getRule().getName());
end

rule "accumulate39"
when
    $customer : Customer(firstName == "78")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 117;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("78") };
    list.add(drools.getRule().getName());
end

rule "accumulate40"
when
    $customer : Customer(firstName == "80")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 120;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("80") };
    list.add(drools.getRule().getName());
end

rule "accumulate41"
when
    $customer : Customer(firstName == "82")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 123;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("82") };
    list.add(drools.getRule().getName());
end

rule "accumulate42"
when
    $customer : Customer(firstName == "84")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 126;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("84") };
    list.add(drools.getRule().getName());
end

rule "accumulate43"
when
    $customer : Customer(firstName == "86")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 129;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("86") };
    list.add(drools.getRule().getName());
end

rule "accumulate44"
when
    $customer : Customer(firstName == "88")
    $totalBalance : Number() 
             from accumulate(Account(owner == $customer, $balance : balance ),
                              init(double total = 132;),
                              action(total += $balance;),
                              reverse(total -= $balance;),
                              result(total))
then
	modify ($customer) { setFirstName("88") };
    list.add(drools.getRule().getName());
end

rule "fromCollect0"
when 
	$account : Account()
    $accounts : ArrayList(size >= 0 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(0) };
	list.add(drools.getRule().getName());
end

rule "fromCollect1"
when 
	$account : Account()
    $accounts : ArrayList(size >= 2 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(2) };
	list.add(drools.getRule().getName());
end

rule "fromCollect2"
when 
	$account : Account()
    $accounts : ArrayList(size >= 4 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(4) };
	list.add(drools.getRule().getName());
end

rule "fromCollect3"
when 
	$account : Account()
    $accounts : ArrayList(size >= 6 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(6) };
	list.add(drools.getRule().getName());
end

rule "fromCollect4"
when 
	$account : Account()
    $accounts : ArrayList(size >= 8 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(8) };
	list.add(drools.getRule().getName());
end

rule "fromCollect5"
when 
	$account : Account()
    $accounts : ArrayList(size >= 10 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(10) };
	list.add(drools.getRule().getName());
end

rule "fromCollect6"
when 
	$account : Account()
    $accounts : ArrayList(size >= 12 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(12) };
	list.add(drools.getRule().getName());
end

rule "fromCollect7"
when 
	$account : Account()
    $accounts : ArrayList(size >= 14 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(14) };
	list.add(drools.getRule().getName());
end

rule "fromCollect8"
when 
	$account : Account()
    $accounts : ArrayList(size >= 16 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(16) };
	list.add(drools.getRule().getName());
end

rule "fromCollect9"
when 
	$account : Account()
    $accounts : ArrayList(size >= 18 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(18) };
	list.add(drools.getRule().getName());
end

rule "fromCollect10"
when 
	$account : Account()
    $accounts : ArrayList(size >= 20 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(20) };
	list.add(drools.getRule().getName());
end

rule "fromCollect11"
when 
	$account : Account()
    $accounts : ArrayList(size >= 22 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(22) };
	list.add(drools.getRule().getName());
end

rule "fromCollect12"
when 
	$account : Account()
    $accounts : ArrayList(size >= 24 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(24) };
	list.add(drools.getRule().getName());
end

rule "fromCollect13"
when 
	$account : Account()
    $accounts : ArrayList(size >= 26 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(26) };
	list.add(drools.getRule().getName());
end

rule "fromCollect14"
when 
	$account : Account()
    $accounts : ArrayList(size >= 28 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(28) };
	list.add(drools.getRule().getName());
end

rule "fromCollect15"
when 
	$account : Account()
    $accounts : ArrayList(size >= 30 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(30) };
	list.add(drools.getRule().getName());
end

rule "fromCollect16"
when 
	$account : Account()
    $accounts : ArrayList(size >= 32 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(32) };
	list.add(drools.getRule().getName());
end

rule "fromCollect17"
when 
	$account : Account()
    $accounts : ArrayList(size >= 34 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(34) };
	list.add(drools.getRule().getName());
end

rule "fromCollect18"
when 
	$account : Account()
    $accounts : ArrayList(size >= 36 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(36) };
	list.add(drools.getRule().getName());
end

rule "fromCollect19"
when 
	$account : Account()
    $accounts : ArrayList(size >= 38 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(38) };
	list.add(drools.getRule().getName());
end

rule "fromCollect20"
when 
	$account : Account()
    $accounts : ArrayList(size >= 40 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(40) };
	list.add(drools.getRule().getName());
end

rule "fromCollect21"
when 
	$account : Account()
    $accounts : ArrayList(size >= 42 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(42) };
	list.add(drools.getRule().getName());
end

rule "fromCollect22"
when 
	$account : Account()
    $accounts : ArrayList(size >= 44 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(44) };
	list.add(drools.getRule().getName());
end

rule "fromCollect23"
when 
	$account : Account()
    $accounts : ArrayList(size >= 46 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(46) };
	list.add(drools.getRule().getName());
end

rule "fromCollect24"
when 
	$account : Account()
    $accounts : ArrayList(size >= 48 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(48) };
	list.add(drools.getRule().getName());
end

rule "fromCollect25"
when 
	$account : Account()
    $accounts : ArrayList(size >= 50 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(50) };
	list.add(drools.getRule().getName());
end

rule "fromCollect26"
when 
	$account : Account()
    $accounts : ArrayList(size >= 52 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(52) };
	list.add(drools.getRule().getName());
end

rule "fromCollect27"
when 
	$account : Account()
    $accounts : ArrayList(size >= 54 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(54) };
	list.add(drools.getRule().getName());
end

rule "fromCollect28"
when 
	$account : Account()
    $accounts : ArrayList(size >= 56 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(56) };
	list.add(drools.getRule().getName());
end

rule "fromCollect29"
when 
	$account : Account()
    $accounts : ArrayList(size >= 58 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(58) };
	list.add(drools.getRule().getName());
end

rule "fromCollect30"
when 
	$account : Account()
    $accounts : ArrayList(size >= 60 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(60) };
	list.add(drools.getRule().getName());
end

rule "fromCollect31"
when 
	$account : Account()
    $accounts : ArrayList(size >= 62 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(62) };
	list.add(drools.getRule().getName());
end

rule "fromCollect32"
when 
	$account : Account()
    $accounts : ArrayList(size >= 64 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(64) };
	list.add(drools.getRule().getName());
end

rule "fromCollect33"
when 
	$account : Account()
    $accounts : ArrayList(size >= 66 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(66) };
	list.add(drools.getRule().getName());
end

rule "fromCollect34"
when 
	$account : Account()
    $accounts : ArrayList(size >= 68 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(68) };
	list.add(drools.getRule().getName());
end

rule "fromCollect35"
when 
	$account : Account()
    $accounts : ArrayList(size >= 70 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(70) };
	list.add(drools.getRule().getName());
end

rule "fromCollect36"
when 
	$account : Account()
    $accounts : ArrayList(size >= 72 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(72) };
	list.add(drools.getRule().getName());
end

rule "fromCollect37"
when 
	$account : Account()
    $accounts : ArrayList(size >= 74 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(74) };
	list.add(drools.getRule().getName());
end

rule "fromCollect38"
when 
	$account : Account()
    $accounts : ArrayList(size >= 76 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(76) };
	list.add(drools.getRule().getName());
end

rule "fromCollect39"
when 
	$account : Account()
    $accounts : ArrayList(size >= 78 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(78) };
	list.add(drools.getRule().getName());
end

rule "fromCollect40"
when 
	$account : Account()
    $accounts : ArrayList(size >= 80 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(80) };
	list.add(drools.getRule().getName());
end

rule "fromCollect41"
when 
	$account : Account()
    $accounts : ArrayList(size >= 82 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(82) };
	list.add(drools.getRule().getName());
end

rule "fromCollect42"
when 
	$account : Account()
    $accounts : ArrayList(size >= 84 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(84) };
	list.add(drools.getRule().getName());
end

rule "fromCollect43"
when 
	$account : Account()
    $accounts : ArrayList(size >= 86 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(86) };
	list.add(drools.getRule().getName());
end

rule "fromCollect44"
when 
	$account : Account()
    $accounts : ArrayList(size >= 88 )
              from collect(Transaction(accountFrom == $account))
then
	modify ($account) { setBalance(88) };
	list.add(drools.getRule().getName());
end

rule "after0"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[0s, 0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "after1"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[2s, 3s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "after2"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[4s, 6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "after3"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[6s, 9s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "after4"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[8s, 12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "after5"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[10s, 15s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "after6"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[12s, 18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "after7"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[14s, 21s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "after8"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[16s, 24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "after9"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[18s, 27s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "after10"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[20s, 30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "after11"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[22s, 33s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "after12"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[24s, 36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "after13"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[26s, 39s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "after14"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[28s, 42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "after15"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[30s, 45s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "after16"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[32s, 48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "after17"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[34s, 51s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "after18"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[36s, 54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "after19"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[38s, 57s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "after20"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[40s, 60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "after21"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[42s, 63s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "after22"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[44s, 66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "after23"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[46s, 69s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "after24"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[48s, 72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "after25"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[50s, 75s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "after26"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[52s, 78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "after27"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[54s, 81s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "after28"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[56s, 84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "after29"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[58s, 87s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "after30"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[60s, 90s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "after31"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[62s, 93s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "after32"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[64s, 96s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "after33"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[66s, 99s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "after34"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[68s, 102s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "after35"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[70s, 105s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "after36"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[72s, 108s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "after37"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[74s, 111s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "after38"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[76s, 114s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "after39"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[78s, 117s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "after40"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[80s, 120s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "after41"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[82s, 123s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "after42"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[84s, 126s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "after43"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[86s, 129s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "after44"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this after[88s, 132s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "before0"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[0s, 0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "before1"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[2s, 3s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "before2"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[4s, 6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "before3"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[6s, 9s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "before4"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[8s, 12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "before5"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[10s, 15s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "before6"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[12s, 18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "before7"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[14s, 21s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "before8"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[16s, 24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "before9"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[18s, 27s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "before10"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[20s, 30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "before11"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[22s, 33s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "before12"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[24s, 36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "before13"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[26s, 39s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "before14"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[28s, 42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "before15"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[30s, 45s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "before16"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[32s, 48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "before17"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[34s, 51s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "before18"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[36s, 54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "before19"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[38s, 57s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "before20"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[40s, 60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "before21"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[42s, 63s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "before22"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[44s, 66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "before23"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[46s, 69s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "before24"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[48s, 72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "before25"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[50s, 75s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "before26"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[52s, 78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "before27"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[54s, 81s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "before28"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[56s, 84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "before29"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[58s, 87s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "before30"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[60s, 90s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "before31"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[62s, 93s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "before32"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[64s, 96s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "before33"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[66s, 99s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "before34"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[68s, 102s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "before35"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[70s, 105s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "before36"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[72s, 108s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "before37"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[74s, 111s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "before38"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[76s, 114s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "before39"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[78s, 117s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "before40"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[80s, 120s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "before41"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[82s, 123s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "before42"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[84s, 126s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "before43"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[86s, 129s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "before44"
when
	$tc1 : TransactionCreatedEvent(description == "after_before") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "after_before", this before[88s, 132s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "coincides0"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "coincides1"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[2s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "coincides2"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[4s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "coincides3"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "coincides4"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[8s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "coincides5"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[10s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "coincides6"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "coincides7"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[14s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "coincides8"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[16s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "coincides9"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "coincides10"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[20s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "coincides11"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[22s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "coincides12"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "coincides13"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[26s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "coincides14"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[28s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "coincides15"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "coincides16"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[32s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "coincides17"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[34s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "coincides18"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "coincides19"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[38s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "coincides20"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[40s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "coincides21"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "coincides22"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[44s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "coincides23"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[46s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "coincides24"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "coincides25"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[50s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "coincides26"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[52s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "coincides27"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "coincides28"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[56s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "coincides29"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[58s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "coincides30"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "coincides31"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[62s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "coincides32"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[64s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "coincides33"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "coincides34"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[68s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "coincides35"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[70s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "coincides36"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "coincides37"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[74s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "coincides38"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[76s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "coincides39"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "coincides40"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[80s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "coincides41"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[82s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "coincides42"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "coincides43"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[86s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "coincides44"
when
	$tc1 : TransactionCreatedEvent(description == "coincides_during") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "coincides_during", this != $tc1, this coincides[88s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "during0"
when
	$nc1 : NewCustomerEvent(description == "0") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "0", this != $nc1, this during[0s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during1"
when
	$nc1 : NewCustomerEvent(description == "2") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "3", this != $nc1, this during[2s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during2"
when
	$nc1 : NewCustomerEvent(description == "4") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "6", this != $nc1, this during[4s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during3"
when
	$nc1 : NewCustomerEvent(description == "6") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "9", this != $nc1, this during[6s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during4"
when
	$nc1 : NewCustomerEvent(description == "8") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "12", this != $nc1, this during[8s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during5"
when
	$nc1 : NewCustomerEvent(description == "10") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "15", this != $nc1, this during[10s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during6"
when
	$nc1 : NewCustomerEvent(description == "12") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "18", this != $nc1, this during[12s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during7"
when
	$nc1 : NewCustomerEvent(description == "14") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "21", this != $nc1, this during[14s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during8"
when
	$nc1 : NewCustomerEvent(description == "16") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "24", this != $nc1, this during[16s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during9"
when
	$nc1 : NewCustomerEvent(description == "18") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "27", this != $nc1, this during[18s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during10"
when
	$nc1 : NewCustomerEvent(description == "20") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "30", this != $nc1, this during[20s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during11"
when
	$nc1 : NewCustomerEvent(description == "22") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "33", this != $nc1, this during[22s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during12"
when
	$nc1 : NewCustomerEvent(description == "24") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "36", this != $nc1, this during[24s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during13"
when
	$nc1 : NewCustomerEvent(description == "26") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "39", this != $nc1, this during[26s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during14"
when
	$nc1 : NewCustomerEvent(description == "28") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "42", this != $nc1, this during[28s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during15"
when
	$nc1 : NewCustomerEvent(description == "30") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "45", this != $nc1, this during[30s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during16"
when
	$nc1 : NewCustomerEvent(description == "32") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "48", this != $nc1, this during[32s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during17"
when
	$nc1 : NewCustomerEvent(description == "34") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "51", this != $nc1, this during[34s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during18"
when
	$nc1 : NewCustomerEvent(description == "36") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "54", this != $nc1, this during[36s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during19"
when
	$nc1 : NewCustomerEvent(description == "38") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "57", this != $nc1, this during[38s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during20"
when
	$nc1 : NewCustomerEvent(description == "40") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "60", this != $nc1, this during[40s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during21"
when
	$nc1 : NewCustomerEvent(description == "42") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "63", this != $nc1, this during[42s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during22"
when
	$nc1 : NewCustomerEvent(description == "44") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "66", this != $nc1, this during[44s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during23"
when
	$nc1 : NewCustomerEvent(description == "46") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "69", this != $nc1, this during[46s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during24"
when
	$nc1 : NewCustomerEvent(description == "48") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "72", this != $nc1, this during[48s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during25"
when
	$nc1 : NewCustomerEvent(description == "50") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "75", this != $nc1, this during[50s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during26"
when
	$nc1 : NewCustomerEvent(description == "52") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "78", this != $nc1, this during[52s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during27"
when
	$nc1 : NewCustomerEvent(description == "54") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "81", this != $nc1, this during[54s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during28"
when
	$nc1 : NewCustomerEvent(description == "56") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "84", this != $nc1, this during[56s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during29"
when
	$nc1 : NewCustomerEvent(description == "58") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "87", this != $nc1, this during[58s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during30"
when
	$nc1 : NewCustomerEvent(description == "60") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "90", this != $nc1, this during[60s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during31"
when
	$nc1 : NewCustomerEvent(description == "62") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "93", this != $nc1, this during[62s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during32"
when
	$nc1 : NewCustomerEvent(description == "64") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "96", this != $nc1, this during[64s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during33"
when
	$nc1 : NewCustomerEvent(description == "66") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "99", this != $nc1, this during[66s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during34"
when
	$nc1 : NewCustomerEvent(description == "68") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "102", this != $nc1, this during[68s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during35"
when
	$nc1 : NewCustomerEvent(description == "70") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "105", this != $nc1, this during[70s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during36"
when
	$nc1 : NewCustomerEvent(description == "72") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "108", this != $nc1, this during[72s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during37"
when
	$nc1 : NewCustomerEvent(description == "74") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "111", this != $nc1, this during[74s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during38"
when
	$nc1 : NewCustomerEvent(description == "76") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "114", this != $nc1, this during[76s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during39"
when
	$nc1 : NewCustomerEvent(description == "78") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "117", this != $nc1, this during[78s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during40"
when
	$nc1 : NewCustomerEvent(description == "80") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "120", this != $nc1, this during[80s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during41"
when
	$nc1 : NewCustomerEvent(description == "82") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "123", this != $nc1, this during[82s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during42"
when
	$nc1 : NewCustomerEvent(description == "84") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "126", this != $nc1, this during[84s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during43"
when
	$nc1 : NewCustomerEvent(description == "86") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "129", this != $nc1, this during[86s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "during44"
when
	$nc1 : NewCustomerEvent(description == "88") from entry-point "Master Stream"
	$nc2 : NewCustomerEvent(description == "132", this != $nc1, this during[88s] $nc1) from entry-point "Master Stream"
then
	list.add(drools.getRule().getName());
end

rule "finishes0"
when
	$tc1 : TransactionCreatedEvent(description == "0") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "0", this != $tc1, this finishes[0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "finishes1"
when
	$tc1 : TransactionCreatedEvent(description == "2") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "3", this != $tc1, this finishes[2s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "finishes2"
when
	$tc1 : TransactionCreatedEvent(description == "4") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "6", this != $tc1, this finishes[4s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "finishes3"
when
	$tc1 : TransactionCreatedEvent(description == "6") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "9", this != $tc1, this finishes[6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "finishes4"
when
	$tc1 : TransactionCreatedEvent(description == "8") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "12", this != $tc1, this finishes[8s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "finishes5"
when
	$tc1 : TransactionCreatedEvent(description == "10") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "15", this != $tc1, this finishes[10s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "finishes6"
when
	$tc1 : TransactionCreatedEvent(description == "12") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "18", this != $tc1, this finishes[12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "finishes7"
when
	$tc1 : TransactionCreatedEvent(description == "14") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "21", this != $tc1, this finishes[14s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "finishes8"
when
	$tc1 : TransactionCreatedEvent(description == "16") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "24", this != $tc1, this finishes[16s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "finishes9"
when
	$tc1 : TransactionCreatedEvent(description == "18") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "27", this != $tc1, this finishes[18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "finishes10"
when
	$tc1 : TransactionCreatedEvent(description == "20") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "30", this != $tc1, this finishes[20s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "finishes11"
when
	$tc1 : TransactionCreatedEvent(description == "22") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "33", this != $tc1, this finishes[22s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "finishes12"
when
	$tc1 : TransactionCreatedEvent(description == "24") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "36", this != $tc1, this finishes[24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "finishes13"
when
	$tc1 : TransactionCreatedEvent(description == "26") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "39", this != $tc1, this finishes[26s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "finishes14"
when
	$tc1 : TransactionCreatedEvent(description == "28") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "42", this != $tc1, this finishes[28s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "finishes15"
when
	$tc1 : TransactionCreatedEvent(description == "30") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "45", this != $tc1, this finishes[30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "finishes16"
when
	$tc1 : TransactionCreatedEvent(description == "32") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "48", this != $tc1, this finishes[32s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "finishes17"
when
	$tc1 : TransactionCreatedEvent(description == "34") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "51", this != $tc1, this finishes[34s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "finishes18"
when
	$tc1 : TransactionCreatedEvent(description == "36") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "54", this != $tc1, this finishes[36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "finishes19"
when
	$tc1 : TransactionCreatedEvent(description == "38") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "57", this != $tc1, this finishes[38s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "finishes20"
when
	$tc1 : TransactionCreatedEvent(description == "40") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "60", this != $tc1, this finishes[40s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "finishes21"
when
	$tc1 : TransactionCreatedEvent(description == "42") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "63", this != $tc1, this finishes[42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "finishes22"
when
	$tc1 : TransactionCreatedEvent(description == "44") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "66", this != $tc1, this finishes[44s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "finishes23"
when
	$tc1 : TransactionCreatedEvent(description == "46") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "69", this != $tc1, this finishes[46s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "finishes24"
when
	$tc1 : TransactionCreatedEvent(description == "48") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "72", this != $tc1, this finishes[48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "finishes25"
when
	$tc1 : TransactionCreatedEvent(description == "50") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "75", this != $tc1, this finishes[50s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "finishes26"
when
	$tc1 : TransactionCreatedEvent(description == "52") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "78", this != $tc1, this finishes[52s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "finishes27"
when
	$tc1 : TransactionCreatedEvent(description == "54") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "81", this != $tc1, this finishes[54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "finishes28"
when
	$tc1 : TransactionCreatedEvent(description == "56") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "84", this != $tc1, this finishes[56s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "finishes29"
when
	$tc1 : TransactionCreatedEvent(description == "58") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "87", this != $tc1, this finishes[58s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "finishes30"
when
	$tc1 : TransactionCreatedEvent(description == "60") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "90", this != $tc1, this finishes[60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "finishes31"
when
	$tc1 : TransactionCreatedEvent(description == "62") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "93", this != $tc1, this finishes[62s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "finishes32"
when
	$tc1 : TransactionCreatedEvent(description == "64") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "96", this != $tc1, this finishes[64s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "finishes33"
when
	$tc1 : TransactionCreatedEvent(description == "66") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "99", this != $tc1, this finishes[66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "finishes34"
when
	$tc1 : TransactionCreatedEvent(description == "68") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "102", this != $tc1, this finishes[68s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "finishes35"
when
	$tc1 : TransactionCreatedEvent(description == "70") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "105", this != $tc1, this finishes[70s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "finishes36"
when
	$tc1 : TransactionCreatedEvent(description == "72") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "108", this != $tc1, this finishes[72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "finishes37"
when
	$tc1 : TransactionCreatedEvent(description == "74") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "111", this != $tc1, this finishes[74s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "finishes38"
when
	$tc1 : TransactionCreatedEvent(description == "76") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "114", this != $tc1, this finishes[76s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "finishes39"
when
	$tc1 : TransactionCreatedEvent(description == "78") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "117", this != $tc1, this finishes[78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "finishes40"
when
	$tc1 : TransactionCreatedEvent(description == "80") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "120", this != $tc1, this finishes[80s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "finishes41"
when
	$tc1 : TransactionCreatedEvent(description == "82") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "123", this != $tc1, this finishes[82s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "finishes42"
when
	$tc1 : TransactionCreatedEvent(description == "84") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "126", this != $tc1, this finishes[84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "finishes43"
when
	$tc1 : TransactionCreatedEvent(description == "86") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "129", this != $tc1, this finishes[86s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "finishes44"
when
	$tc1 : TransactionCreatedEvent(description == "88") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "132", this != $tc1, this finishes[88s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "finishedby0"
when
	$tc1 : TransactionCreatedEvent(description == "0") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "0", this != $tc1, this finishedby[0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "finishedby1"
when
	$tc1 : TransactionCreatedEvent(description == "2") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "3", this != $tc1, this finishedby[2s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "finishedby2"
when
	$tc1 : TransactionCreatedEvent(description == "4") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "6", this != $tc1, this finishedby[4s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "finishedby3"
when
	$tc1 : TransactionCreatedEvent(description == "6") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "9", this != $tc1, this finishedby[6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "finishedby4"
when
	$tc1 : TransactionCreatedEvent(description == "8") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "12", this != $tc1, this finishedby[8s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "finishedby5"
when
	$tc1 : TransactionCreatedEvent(description == "10") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "15", this != $tc1, this finishedby[10s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "finishedby6"
when
	$tc1 : TransactionCreatedEvent(description == "12") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "18", this != $tc1, this finishedby[12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "finishedby7"
when
	$tc1 : TransactionCreatedEvent(description == "14") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "21", this != $tc1, this finishedby[14s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "finishedby8"
when
	$tc1 : TransactionCreatedEvent(description == "16") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "24", this != $tc1, this finishedby[16s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "finishedby9"
when
	$tc1 : TransactionCreatedEvent(description == "18") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "27", this != $tc1, this finishedby[18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "finishedby10"
when
	$tc1 : TransactionCreatedEvent(description == "20") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "30", this != $tc1, this finishedby[20s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "finishedby11"
when
	$tc1 : TransactionCreatedEvent(description == "22") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "33", this != $tc1, this finishedby[22s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "finishedby12"
when
	$tc1 : TransactionCreatedEvent(description == "24") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "36", this != $tc1, this finishedby[24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "finishedby13"
when
	$tc1 : TransactionCreatedEvent(description == "26") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "39", this != $tc1, this finishedby[26s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "finishedby14"
when
	$tc1 : TransactionCreatedEvent(description == "28") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "42", this != $tc1, this finishedby[28s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "finishedby15"
when
	$tc1 : TransactionCreatedEvent(description == "30") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "45", this != $tc1, this finishedby[30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "finishedby16"
when
	$tc1 : TransactionCreatedEvent(description == "32") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "48", this != $tc1, this finishedby[32s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "finishedby17"
when
	$tc1 : TransactionCreatedEvent(description == "34") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "51", this != $tc1, this finishedby[34s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "finishedby18"
when
	$tc1 : TransactionCreatedEvent(description == "36") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "54", this != $tc1, this finishedby[36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "finishedby19"
when
	$tc1 : TransactionCreatedEvent(description == "38") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "57", this != $tc1, this finishedby[38s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "finishedby20"
when
	$tc1 : TransactionCreatedEvent(description == "40") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "60", this != $tc1, this finishedby[40s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "finishedby21"
when
	$tc1 : TransactionCreatedEvent(description == "42") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "63", this != $tc1, this finishedby[42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "finishedby22"
when
	$tc1 : TransactionCreatedEvent(description == "44") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "66", this != $tc1, this finishedby[44s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "finishedby23"
when
	$tc1 : TransactionCreatedEvent(description == "46") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "69", this != $tc1, this finishedby[46s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "finishedby24"
when
	$tc1 : TransactionCreatedEvent(description == "48") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "72", this != $tc1, this finishedby[48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "finishedby25"
when
	$tc1 : TransactionCreatedEvent(description == "50") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "75", this != $tc1, this finishedby[50s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "finishedby26"
when
	$tc1 : TransactionCreatedEvent(description == "52") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "78", this != $tc1, this finishedby[52s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "finishedby27"
when
	$tc1 : TransactionCreatedEvent(description == "54") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "81", this != $tc1, this finishedby[54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "finishedby28"
when
	$tc1 : TransactionCreatedEvent(description == "56") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "84", this != $tc1, this finishedby[56s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "finishedby29"
when
	$tc1 : TransactionCreatedEvent(description == "58") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "87", this != $tc1, this finishedby[58s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "finishedby30"
when
	$tc1 : TransactionCreatedEvent(description == "60") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "90", this != $tc1, this finishedby[60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "finishedby31"
when
	$tc1 : TransactionCreatedEvent(description == "62") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "93", this != $tc1, this finishedby[62s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "finishedby32"
when
	$tc1 : TransactionCreatedEvent(description == "64") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "96", this != $tc1, this finishedby[64s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "finishedby33"
when
	$tc1 : TransactionCreatedEvent(description == "66") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "99", this != $tc1, this finishedby[66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "finishedby34"
when
	$tc1 : TransactionCreatedEvent(description == "68") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "102", this != $tc1, this finishedby[68s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "finishedby35"
when
	$tc1 : TransactionCreatedEvent(description == "70") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "105", this != $tc1, this finishedby[70s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "finishedby36"
when
	$tc1 : TransactionCreatedEvent(description == "72") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "108", this != $tc1, this finishedby[72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "finishedby37"
when
	$tc1 : TransactionCreatedEvent(description == "74") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "111", this != $tc1, this finishedby[74s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "finishedby38"
when
	$tc1 : TransactionCreatedEvent(description == "76") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "114", this != $tc1, this finishedby[76s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "finishedby39"
when
	$tc1 : TransactionCreatedEvent(description == "78") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "117", this != $tc1, this finishedby[78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "finishedby40"
when
	$tc1 : TransactionCreatedEvent(description == "80") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "120", this != $tc1, this finishedby[80s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "finishedby41"
when
	$tc1 : TransactionCreatedEvent(description == "82") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "123", this != $tc1, this finishedby[82s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "finishedby42"
when
	$tc1 : TransactionCreatedEvent(description == "84") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "126", this != $tc1, this finishedby[84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "finishedby43"
when
	$tc1 : TransactionCreatedEvent(description == "86") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "129", this != $tc1, this finishedby[86s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "finishedby44"
when
	$tc1 : TransactionCreatedEvent(description == "88") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "132", this != $tc1, this finishedby[88s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "meets0"
when
	$tc1 : TransactionCreatedEvent(description == "0") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "0", this != $tc1, this meets[0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "meets1"
when
	$tc1 : TransactionCreatedEvent(description == "2") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "3", this != $tc1, this meets[2s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "meets2"
when
	$tc1 : TransactionCreatedEvent(description == "4") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "6", this != $tc1, this meets[4s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "meets3"
when
	$tc1 : TransactionCreatedEvent(description == "6") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "9", this != $tc1, this meets[6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "meets4"
when
	$tc1 : TransactionCreatedEvent(description == "8") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "12", this != $tc1, this meets[8s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "meets5"
when
	$tc1 : TransactionCreatedEvent(description == "10") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "15", this != $tc1, this meets[10s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "meets6"
when
	$tc1 : TransactionCreatedEvent(description == "12") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "18", this != $tc1, this meets[12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "meets7"
when
	$tc1 : TransactionCreatedEvent(description == "14") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "21", this != $tc1, this meets[14s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "meets8"
when
	$tc1 : TransactionCreatedEvent(description == "16") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "24", this != $tc1, this meets[16s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "meets9"
when
	$tc1 : TransactionCreatedEvent(description == "18") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "27", this != $tc1, this meets[18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "meets10"
when
	$tc1 : TransactionCreatedEvent(description == "20") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "30", this != $tc1, this meets[20s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "meets11"
when
	$tc1 : TransactionCreatedEvent(description == "22") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "33", this != $tc1, this meets[22s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "meets12"
when
	$tc1 : TransactionCreatedEvent(description == "24") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "36", this != $tc1, this meets[24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "meets13"
when
	$tc1 : TransactionCreatedEvent(description == "26") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "39", this != $tc1, this meets[26s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "meets14"
when
	$tc1 : TransactionCreatedEvent(description == "28") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "42", this != $tc1, this meets[28s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "meets15"
when
	$tc1 : TransactionCreatedEvent(description == "30") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "45", this != $tc1, this meets[30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "meets16"
when
	$tc1 : TransactionCreatedEvent(description == "32") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "48", this != $tc1, this meets[32s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "meets17"
when
	$tc1 : TransactionCreatedEvent(description == "34") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "51", this != $tc1, this meets[34s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "meets18"
when
	$tc1 : TransactionCreatedEvent(description == "36") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "54", this != $tc1, this meets[36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "meets19"
when
	$tc1 : TransactionCreatedEvent(description == "38") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "57", this != $tc1, this meets[38s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "meets20"
when
	$tc1 : TransactionCreatedEvent(description == "40") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "60", this != $tc1, this meets[40s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "meets21"
when
	$tc1 : TransactionCreatedEvent(description == "42") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "63", this != $tc1, this meets[42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "meets22"
when
	$tc1 : TransactionCreatedEvent(description == "44") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "66", this != $tc1, this meets[44s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "meets23"
when
	$tc1 : TransactionCreatedEvent(description == "46") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "69", this != $tc1, this meets[46s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "meets24"
when
	$tc1 : TransactionCreatedEvent(description == "48") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "72", this != $tc1, this meets[48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "meets25"
when
	$tc1 : TransactionCreatedEvent(description == "50") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "75", this != $tc1, this meets[50s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "meets26"
when
	$tc1 : TransactionCreatedEvent(description == "52") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "78", this != $tc1, this meets[52s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "meets27"
when
	$tc1 : TransactionCreatedEvent(description == "54") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "81", this != $tc1, this meets[54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "meets28"
when
	$tc1 : TransactionCreatedEvent(description == "56") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "84", this != $tc1, this meets[56s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "meets29"
when
	$tc1 : TransactionCreatedEvent(description == "58") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "87", this != $tc1, this meets[58s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "meets30"
when
	$tc1 : TransactionCreatedEvent(description == "60") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "90", this != $tc1, this meets[60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "meets31"
when
	$tc1 : TransactionCreatedEvent(description == "62") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "93", this != $tc1, this meets[62s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "meets32"
when
	$tc1 : TransactionCreatedEvent(description == "64") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "96", this != $tc1, this meets[64s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "meets33"
when
	$tc1 : TransactionCreatedEvent(description == "66") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "99", this != $tc1, this meets[66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "meets34"
when
	$tc1 : TransactionCreatedEvent(description == "68") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "102", this != $tc1, this meets[68s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "meets35"
when
	$tc1 : TransactionCreatedEvent(description == "70") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "105", this != $tc1, this meets[70s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "meets36"
when
	$tc1 : TransactionCreatedEvent(description == "72") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "108", this != $tc1, this meets[72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "meets37"
when
	$tc1 : TransactionCreatedEvent(description == "74") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "111", this != $tc1, this meets[74s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "meets38"
when
	$tc1 : TransactionCreatedEvent(description == "76") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "114", this != $tc1, this meets[76s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "meets39"
when
	$tc1 : TransactionCreatedEvent(description == "78") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "117", this != $tc1, this meets[78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "meets40"
when
	$tc1 : TransactionCreatedEvent(description == "80") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "120", this != $tc1, this meets[80s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "meets41"
when
	$tc1 : TransactionCreatedEvent(description == "82") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "123", this != $tc1, this meets[82s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "meets42"
when
	$tc1 : TransactionCreatedEvent(description == "84") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "126", this != $tc1, this meets[84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "meets43"
when
	$tc1 : TransactionCreatedEvent(description == "86") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "129", this != $tc1, this meets[86s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "meets44"
when
	$tc1 : TransactionCreatedEvent(description == "88") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "132", this != $tc1, this meets[88s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "metby0"
when
	$tc1 : TransactionCreatedEvent(description == "0") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "0", this != $tc1, this metby[0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "metby1"
when
	$tc1 : TransactionCreatedEvent(description == "2") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "3", this != $tc1, this metby[2s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "metby2"
when
	$tc1 : TransactionCreatedEvent(description == "4") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "6", this != $tc1, this metby[4s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "metby3"
when
	$tc1 : TransactionCreatedEvent(description == "6") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "9", this != $tc1, this metby[6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "metby4"
when
	$tc1 : TransactionCreatedEvent(description == "8") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "12", this != $tc1, this metby[8s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "metby5"
when
	$tc1 : TransactionCreatedEvent(description == "10") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "15", this != $tc1, this metby[10s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "metby6"
when
	$tc1 : TransactionCreatedEvent(description == "12") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "18", this != $tc1, this metby[12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "metby7"
when
	$tc1 : TransactionCreatedEvent(description == "14") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "21", this != $tc1, this metby[14s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "metby8"
when
	$tc1 : TransactionCreatedEvent(description == "16") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "24", this != $tc1, this metby[16s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "metby9"
when
	$tc1 : TransactionCreatedEvent(description == "18") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "27", this != $tc1, this metby[18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "metby10"
when
	$tc1 : TransactionCreatedEvent(description == "20") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "30", this != $tc1, this metby[20s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "metby11"
when
	$tc1 : TransactionCreatedEvent(description == "22") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "33", this != $tc1, this metby[22s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "metby12"
when
	$tc1 : TransactionCreatedEvent(description == "24") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "36", this != $tc1, this metby[24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "metby13"
when
	$tc1 : TransactionCreatedEvent(description == "26") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "39", this != $tc1, this metby[26s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "metby14"
when
	$tc1 : TransactionCreatedEvent(description == "28") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "42", this != $tc1, this metby[28s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "metby15"
when
	$tc1 : TransactionCreatedEvent(description == "30") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "45", this != $tc1, this metby[30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "metby16"
when
	$tc1 : TransactionCreatedEvent(description == "32") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "48", this != $tc1, this metby[32s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "metby17"
when
	$tc1 : TransactionCreatedEvent(description == "34") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "51", this != $tc1, this metby[34s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "metby18"
when
	$tc1 : TransactionCreatedEvent(description == "36") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "54", this != $tc1, this metby[36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "metby19"
when
	$tc1 : TransactionCreatedEvent(description == "38") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "57", this != $tc1, this metby[38s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "metby20"
when
	$tc1 : TransactionCreatedEvent(description == "40") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "60", this != $tc1, this metby[40s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "metby21"
when
	$tc1 : TransactionCreatedEvent(description == "42") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "63", this != $tc1, this metby[42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "metby22"
when
	$tc1 : TransactionCreatedEvent(description == "44") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "66", this != $tc1, this metby[44s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "metby23"
when
	$tc1 : TransactionCreatedEvent(description == "46") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "69", this != $tc1, this metby[46s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "metby24"
when
	$tc1 : TransactionCreatedEvent(description == "48") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "72", this != $tc1, this metby[48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "metby25"
when
	$tc1 : TransactionCreatedEvent(description == "50") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "75", this != $tc1, this metby[50s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "metby26"
when
	$tc1 : TransactionCreatedEvent(description == "52") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "78", this != $tc1, this metby[52s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "metby27"
when
	$tc1 : TransactionCreatedEvent(description == "54") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "81", this != $tc1, this metby[54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "metby28"
when
	$tc1 : TransactionCreatedEvent(description == "56") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "84", this != $tc1, this metby[56s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "metby29"
when
	$tc1 : TransactionCreatedEvent(description == "58") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "87", this != $tc1, this metby[58s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "metby30"
when
	$tc1 : TransactionCreatedEvent(description == "60") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "90", this != $tc1, this metby[60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "metby31"
when
	$tc1 : TransactionCreatedEvent(description == "62") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "93", this != $tc1, this metby[62s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "metby32"
when
	$tc1 : TransactionCreatedEvent(description == "64") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "96", this != $tc1, this metby[64s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "metby33"
when
	$tc1 : TransactionCreatedEvent(description == "66") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "99", this != $tc1, this metby[66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "metby34"
when
	$tc1 : TransactionCreatedEvent(description == "68") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "102", this != $tc1, this metby[68s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "metby35"
when
	$tc1 : TransactionCreatedEvent(description == "70") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "105", this != $tc1, this metby[70s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "metby36"
when
	$tc1 : TransactionCreatedEvent(description == "72") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "108", this != $tc1, this metby[72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "metby37"
when
	$tc1 : TransactionCreatedEvent(description == "74") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "111", this != $tc1, this metby[74s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "metby38"
when
	$tc1 : TransactionCreatedEvent(description == "76") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "114", this != $tc1, this metby[76s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "metby39"
when
	$tc1 : TransactionCreatedEvent(description == "78") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "117", this != $tc1, this metby[78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "metby40"
when
	$tc1 : TransactionCreatedEvent(description == "80") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "120", this != $tc1, this metby[80s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "metby41"
when
	$tc1 : TransactionCreatedEvent(description == "82") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "123", this != $tc1, this metby[82s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "metby42"
when
	$tc1 : TransactionCreatedEvent(description == "84") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "126", this != $tc1, this metby[84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "metby43"
when
	$tc1 : TransactionCreatedEvent(description == "86") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "129", this != $tc1, this metby[86s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "metby44"
when
	$tc1 : TransactionCreatedEvent(description == "88") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "132", this != $tc1, this metby[88s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "overlaps0"
when
	$tc1 : TransactionCreatedEvent(description == "0") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "0", this != $tc1, this overlaps[0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "overlaps1"
when
	$tc1 : TransactionCreatedEvent(description == "2") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "3", this != $tc1, this overlaps[2s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "overlaps2"
when
	$tc1 : TransactionCreatedEvent(description == "4") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "6", this != $tc1, this overlaps[4s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "overlaps3"
when
	$tc1 : TransactionCreatedEvent(description == "6") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "9", this != $tc1, this overlaps[6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "overlaps4"
when
	$tc1 : TransactionCreatedEvent(description == "8") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "12", this != $tc1, this overlaps[8s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "overlaps5"
when
	$tc1 : TransactionCreatedEvent(description == "10") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "15", this != $tc1, this overlaps[10s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "overlaps6"
when
	$tc1 : TransactionCreatedEvent(description == "12") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "18", this != $tc1, this overlaps[12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "overlaps7"
when
	$tc1 : TransactionCreatedEvent(description == "14") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "21", this != $tc1, this overlaps[14s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "overlaps8"
when
	$tc1 : TransactionCreatedEvent(description == "16") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "24", this != $tc1, this overlaps[16s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "overlaps9"
when
	$tc1 : TransactionCreatedEvent(description == "18") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "27", this != $tc1, this overlaps[18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "overlaps10"
when
	$tc1 : TransactionCreatedEvent(description == "20") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "30", this != $tc1, this overlaps[20s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "overlaps11"
when
	$tc1 : TransactionCreatedEvent(description == "22") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "33", this != $tc1, this overlaps[22s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "overlaps12"
when
	$tc1 : TransactionCreatedEvent(description == "24") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "36", this != $tc1, this overlaps[24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "overlaps13"
when
	$tc1 : TransactionCreatedEvent(description == "26") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "39", this != $tc1, this overlaps[26s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "overlaps14"
when
	$tc1 : TransactionCreatedEvent(description == "28") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "42", this != $tc1, this overlaps[28s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "overlaps15"
when
	$tc1 : TransactionCreatedEvent(description == "30") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "45", this != $tc1, this overlaps[30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "overlaps16"
when
	$tc1 : TransactionCreatedEvent(description == "32") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "48", this != $tc1, this overlaps[32s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "overlaps17"
when
	$tc1 : TransactionCreatedEvent(description == "34") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "51", this != $tc1, this overlaps[34s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "overlaps18"
when
	$tc1 : TransactionCreatedEvent(description == "36") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "54", this != $tc1, this overlaps[36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "overlaps19"
when
	$tc1 : TransactionCreatedEvent(description == "38") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "57", this != $tc1, this overlaps[38s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "overlaps20"
when
	$tc1 : TransactionCreatedEvent(description == "40") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "60", this != $tc1, this overlaps[40s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "overlaps21"
when
	$tc1 : TransactionCreatedEvent(description == "42") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "63", this != $tc1, this overlaps[42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "overlaps22"
when
	$tc1 : TransactionCreatedEvent(description == "44") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "66", this != $tc1, this overlaps[44s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "overlaps23"
when
	$tc1 : TransactionCreatedEvent(description == "46") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "69", this != $tc1, this overlaps[46s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "overlaps24"
when
	$tc1 : TransactionCreatedEvent(description == "48") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "72", this != $tc1, this overlaps[48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "overlaps25"
when
	$tc1 : TransactionCreatedEvent(description == "50") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "75", this != $tc1, this overlaps[50s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "overlaps26"
when
	$tc1 : TransactionCreatedEvent(description == "52") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "78", this != $tc1, this overlaps[52s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "overlaps27"
when
	$tc1 : TransactionCreatedEvent(description == "54") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "81", this != $tc1, this overlaps[54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "overlaps28"
when
	$tc1 : TransactionCreatedEvent(description == "56") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "84", this != $tc1, this overlaps[56s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "overlaps29"
when
	$tc1 : TransactionCreatedEvent(description == "58") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "87", this != $tc1, this overlaps[58s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "overlaps30"
when
	$tc1 : TransactionCreatedEvent(description == "60") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "90", this != $tc1, this overlaps[60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "overlaps31"
when
	$tc1 : TransactionCreatedEvent(description == "62") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "93", this != $tc1, this overlaps[62s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "overlaps32"
when
	$tc1 : TransactionCreatedEvent(description == "64") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "96", this != $tc1, this overlaps[64s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "overlaps33"
when
	$tc1 : TransactionCreatedEvent(description == "66") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "99", this != $tc1, this overlaps[66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "overlaps34"
when
	$tc1 : TransactionCreatedEvent(description == "68") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "102", this != $tc1, this overlaps[68s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "overlaps35"
when
	$tc1 : TransactionCreatedEvent(description == "70") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "105", this != $tc1, this overlaps[70s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "overlaps36"
when
	$tc1 : TransactionCreatedEvent(description == "72") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "108", this != $tc1, this overlaps[72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "overlaps37"
when
	$tc1 : TransactionCreatedEvent(description == "74") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "111", this != $tc1, this overlaps[74s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "overlaps38"
when
	$tc1 : TransactionCreatedEvent(description == "76") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "114", this != $tc1, this overlaps[76s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "overlaps39"
when
	$tc1 : TransactionCreatedEvent(description == "78") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "117", this != $tc1, this overlaps[78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "overlaps40"
when
	$tc1 : TransactionCreatedEvent(description == "80") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "120", this != $tc1, this overlaps[80s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "overlaps41"
when
	$tc1 : TransactionCreatedEvent(description == "82") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "123", this != $tc1, this overlaps[82s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "overlaps42"
when
	$tc1 : TransactionCreatedEvent(description == "84") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "126", this != $tc1, this overlaps[84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "overlaps43"
when
	$tc1 : TransactionCreatedEvent(description == "86") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "129", this != $tc1, this overlaps[86s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "overlaps44"
when
	$tc1 : TransactionCreatedEvent(description == "88") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "132", this != $tc1, this overlaps[88s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby0"
when
	$tc1 : TransactionCreatedEvent(description == "0") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "0", this != $tc1, this overlappedby[0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby1"
when
	$tc1 : TransactionCreatedEvent(description == "2") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "3", this != $tc1, this overlappedby[2s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby2"
when
	$tc1 : TransactionCreatedEvent(description == "4") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "6", this != $tc1, this overlappedby[4s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby3"
when
	$tc1 : TransactionCreatedEvent(description == "6") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "9", this != $tc1, this overlappedby[6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby4"
when
	$tc1 : TransactionCreatedEvent(description == "8") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "12", this != $tc1, this overlappedby[8s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby5"
when
	$tc1 : TransactionCreatedEvent(description == "10") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "15", this != $tc1, this overlappedby[10s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby6"
when
	$tc1 : TransactionCreatedEvent(description == "12") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "18", this != $tc1, this overlappedby[12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby7"
when
	$tc1 : TransactionCreatedEvent(description == "14") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "21", this != $tc1, this overlappedby[14s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby8"
when
	$tc1 : TransactionCreatedEvent(description == "16") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "24", this != $tc1, this overlappedby[16s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby9"
when
	$tc1 : TransactionCreatedEvent(description == "18") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "27", this != $tc1, this overlappedby[18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby10"
when
	$tc1 : TransactionCreatedEvent(description == "20") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "30", this != $tc1, this overlappedby[20s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby11"
when
	$tc1 : TransactionCreatedEvent(description == "22") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "33", this != $tc1, this overlappedby[22s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby12"
when
	$tc1 : TransactionCreatedEvent(description == "24") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "36", this != $tc1, this overlappedby[24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby13"
when
	$tc1 : TransactionCreatedEvent(description == "26") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "39", this != $tc1, this overlappedby[26s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby14"
when
	$tc1 : TransactionCreatedEvent(description == "28") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "42", this != $tc1, this overlappedby[28s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby15"
when
	$tc1 : TransactionCreatedEvent(description == "30") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "45", this != $tc1, this overlappedby[30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby16"
when
	$tc1 : TransactionCreatedEvent(description == "32") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "48", this != $tc1, this overlappedby[32s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby17"
when
	$tc1 : TransactionCreatedEvent(description == "34") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "51", this != $tc1, this overlappedby[34s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby18"
when
	$tc1 : TransactionCreatedEvent(description == "36") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "54", this != $tc1, this overlappedby[36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby19"
when
	$tc1 : TransactionCreatedEvent(description == "38") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "57", this != $tc1, this overlappedby[38s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby20"
when
	$tc1 : TransactionCreatedEvent(description == "40") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "60", this != $tc1, this overlappedby[40s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby21"
when
	$tc1 : TransactionCreatedEvent(description == "42") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "63", this != $tc1, this overlappedby[42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby22"
when
	$tc1 : TransactionCreatedEvent(description == "44") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "66", this != $tc1, this overlappedby[44s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby23"
when
	$tc1 : TransactionCreatedEvent(description == "46") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "69", this != $tc1, this overlappedby[46s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby24"
when
	$tc1 : TransactionCreatedEvent(description == "48") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "72", this != $tc1, this overlappedby[48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby25"
when
	$tc1 : TransactionCreatedEvent(description == "50") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "75", this != $tc1, this overlappedby[50s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby26"
when
	$tc1 : TransactionCreatedEvent(description == "52") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "78", this != $tc1, this overlappedby[52s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby27"
when
	$tc1 : TransactionCreatedEvent(description == "54") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "81", this != $tc1, this overlappedby[54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby28"
when
	$tc1 : TransactionCreatedEvent(description == "56") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "84", this != $tc1, this overlappedby[56s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby29"
when
	$tc1 : TransactionCreatedEvent(description == "58") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "87", this != $tc1, this overlappedby[58s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby30"
when
	$tc1 : TransactionCreatedEvent(description == "60") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "90", this != $tc1, this overlappedby[60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby31"
when
	$tc1 : TransactionCreatedEvent(description == "62") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "93", this != $tc1, this overlappedby[62s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby32"
when
	$tc1 : TransactionCreatedEvent(description == "64") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "96", this != $tc1, this overlappedby[64s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby33"
when
	$tc1 : TransactionCreatedEvent(description == "66") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "99", this != $tc1, this overlappedby[66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby34"
when
	$tc1 : TransactionCreatedEvent(description == "68") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "102", this != $tc1, this overlappedby[68s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby35"
when
	$tc1 : TransactionCreatedEvent(description == "70") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "105", this != $tc1, this overlappedby[70s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby36"
when
	$tc1 : TransactionCreatedEvent(description == "72") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "108", this != $tc1, this overlappedby[72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby37"
when
	$tc1 : TransactionCreatedEvent(description == "74") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "111", this != $tc1, this overlappedby[74s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby38"
when
	$tc1 : TransactionCreatedEvent(description == "76") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "114", this != $tc1, this overlappedby[76s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby39"
when
	$tc1 : TransactionCreatedEvent(description == "78") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "117", this != $tc1, this overlappedby[78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby40"
when
	$tc1 : TransactionCreatedEvent(description == "80") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "120", this != $tc1, this overlappedby[80s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby41"
when
	$tc1 : TransactionCreatedEvent(description == "82") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "123", this != $tc1, this overlappedby[82s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby42"
when
	$tc1 : TransactionCreatedEvent(description == "84") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "126", this != $tc1, this overlappedby[84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby43"
when
	$tc1 : TransactionCreatedEvent(description == "86") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "129", this != $tc1, this overlappedby[86s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "overlappedby44"
when
	$tc1 : TransactionCreatedEvent(description == "88") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "132", this != $tc1, this overlappedby[88s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "starts0"
when
	$tc1 : TransactionCreatedEvent(description == "0") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "0", this != $tc1, this starts[0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end

rule "starts1"
when
	$tc1 : TransactionCreatedEvent(description == "2") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "3", this != $tc1, this starts[2s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end

rule "starts2"
when
	$tc1 : TransactionCreatedEvent(description == "4") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "6", this != $tc1, this starts[4s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end

rule "starts3"
when
	$tc1 : TransactionCreatedEvent(description == "6") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "9", this != $tc1, this starts[6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end

rule "starts4"
when
	$tc1 : TransactionCreatedEvent(description == "8") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "12", this != $tc1, this starts[8s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end

rule "starts5"
when
	$tc1 : TransactionCreatedEvent(description == "10") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "15", this != $tc1, this starts[10s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end

rule "starts6"
when
	$tc1 : TransactionCreatedEvent(description == "12") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "18", this != $tc1, this starts[12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end

rule "starts7"
when
	$tc1 : TransactionCreatedEvent(description == "14") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "21", this != $tc1, this starts[14s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end

rule "starts8"
when
	$tc1 : TransactionCreatedEvent(description == "16") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "24", this != $tc1, this starts[16s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end

rule "starts9"
when
	$tc1 : TransactionCreatedEvent(description == "18") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "27", this != $tc1, this starts[18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end

rule "starts10"
when
	$tc1 : TransactionCreatedEvent(description == "20") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "30", this != $tc1, this starts[20s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end

rule "starts11"
when
	$tc1 : TransactionCreatedEvent(description == "22") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "33", this != $tc1, this starts[22s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end

rule "starts12"
when
	$tc1 : TransactionCreatedEvent(description == "24") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "36", this != $tc1, this starts[24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end

rule "starts13"
when
	$tc1 : TransactionCreatedEvent(description == "26") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "39", this != $tc1, this starts[26s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end

rule "starts14"
when
	$tc1 : TransactionCreatedEvent(description == "28") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "42", this != $tc1, this starts[28s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end

rule "starts15"
when
	$tc1 : TransactionCreatedEvent(description == "30") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "45", this != $tc1, this starts[30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end

rule "starts16"
when
	$tc1 : TransactionCreatedEvent(description == "32") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "48", this != $tc1, this starts[32s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end

rule "starts17"
when
	$tc1 : TransactionCreatedEvent(description == "34") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "51", this != $tc1, this starts[34s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end

rule "starts18"
when
	$tc1 : TransactionCreatedEvent(description == "36") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "54", this != $tc1, this starts[36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end

rule "starts19"
when
	$tc1 : TransactionCreatedEvent(description == "38") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "57", this != $tc1, this starts[38s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end

rule "starts20"
when
	$tc1 : TransactionCreatedEvent(description == "40") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "60", this != $tc1, this starts[40s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end

rule "starts21"
when
	$tc1 : TransactionCreatedEvent(description == "42") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "63", this != $tc1, this starts[42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end

rule "starts22"
when
	$tc1 : TransactionCreatedEvent(description == "44") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "66", this != $tc1, this starts[44s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end

rule "starts23"
when
	$tc1 : TransactionCreatedEvent(description == "46") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "69", this != $tc1, this starts[46s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end

rule "starts24"
when
	$tc1 : TransactionCreatedEvent(description == "48") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "72", this != $tc1, this starts[48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end

rule "starts25"
when
	$tc1 : TransactionCreatedEvent(description == "50") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "75", this != $tc1, this starts[50s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end

rule "starts26"
when
	$tc1 : TransactionCreatedEvent(description == "52") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "78", this != $tc1, this starts[52s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end

rule "starts27"
when
	$tc1 : TransactionCreatedEvent(description == "54") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "81", this != $tc1, this starts[54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end

rule "starts28"
when
	$tc1 : TransactionCreatedEvent(description == "56") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "84", this != $tc1, this starts[56s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end

rule "starts29"
when
	$tc1 : TransactionCreatedEvent(description == "58") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "87", this != $tc1, this starts[58s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end

rule "starts30"
when
	$tc1 : TransactionCreatedEvent(description == "60") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "90", this != $tc1, this starts[60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end

rule "starts31"
when
	$tc1 : TransactionCreatedEvent(description == "62") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "93", this != $tc1, this starts[62s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end

rule "starts32"
when
	$tc1 : TransactionCreatedEvent(description == "64") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "96", this != $tc1, this starts[64s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end

rule "starts33"
when
	$tc1 : TransactionCreatedEvent(description == "66") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "99", this != $tc1, this starts[66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end

rule "starts34"
when
	$tc1 : TransactionCreatedEvent(description == "68") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "102", this != $tc1, this starts[68s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end

rule "starts35"
when
	$tc1 : TransactionCreatedEvent(description == "70") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "105", this != $tc1, this starts[70s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end

rule "starts36"
when
	$tc1 : TransactionCreatedEvent(description == "72") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "108", this != $tc1, this starts[72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end

rule "starts37"
when
	$tc1 : TransactionCreatedEvent(description == "74") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "111", this != $tc1, this starts[74s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end

rule "starts38"
when
	$tc1 : TransactionCreatedEvent(description == "76") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "114", this != $tc1, this starts[76s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end

rule "starts39"
when
	$tc1 : TransactionCreatedEvent(description == "78") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "117", this != $tc1, this starts[78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end

rule "starts40"
when
	$tc1 : TransactionCreatedEvent(description == "80") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "120", this != $tc1, this starts[80s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end

rule "starts41"
when
	$tc1 : TransactionCreatedEvent(description == "82") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "123", this != $tc1, this starts[82s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end

rule "starts42"
when
	$tc1 : TransactionCreatedEvent(description == "84") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "126", this != $tc1, this starts[84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end

rule "starts43"
when
	$tc1 : TransactionCreatedEvent(description == "86") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "129", this != $tc1, this starts[86s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end

rule "starts44"
when
	$tc1 : TransactionCreatedEvent(description == "88") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "132", this != $tc1, this starts[88s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end

rule "startedby0"
when
	$tc1 : TransactionCreatedEvent(description == "0") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "0", this != $tc1, this startedby[0s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(0)) };
	list.add(drools.getRule().getName());
end
rule "startedby1"
when
	$tc1 : TransactionCreatedEvent(description == "2") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "3", this != $tc1, this startedby[2s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(2)) };
	list.add(drools.getRule().getName());
end
rule "startedby2"
when
	$tc1 : TransactionCreatedEvent(description == "4") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "6", this != $tc1, this startedby[4s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(4)) };
	list.add(drools.getRule().getName());
end
rule "startedby3"
when
	$tc1 : TransactionCreatedEvent(description == "6") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "9", this != $tc1, this startedby[6s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(6)) };
	list.add(drools.getRule().getName());
end
rule "startedby4"
when
	$tc1 : TransactionCreatedEvent(description == "8") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "12", this != $tc1, this startedby[8s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(8)) };
	list.add(drools.getRule().getName());
end
rule "startedby5"
when
	$tc1 : TransactionCreatedEvent(description == "10") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "15", this != $tc1, this startedby[10s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(10)) };
	list.add(drools.getRule().getName());
end
rule "startedby6"
when
	$tc1 : TransactionCreatedEvent(description == "12") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "18", this != $tc1, this startedby[12s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(12)) };
	list.add(drools.getRule().getName());
end
rule "startedby7"
when
	$tc1 : TransactionCreatedEvent(description == "14") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "21", this != $tc1, this startedby[14s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(14)) };
	list.add(drools.getRule().getName());
end
rule "startedby8"
when
	$tc1 : TransactionCreatedEvent(description == "16") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "24", this != $tc1, this startedby[16s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(16)) };
	list.add(drools.getRule().getName());
end
rule "startedby9"
when
	$tc1 : TransactionCreatedEvent(description == "18") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "27", this != $tc1, this startedby[18s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(18)) };
	list.add(drools.getRule().getName());
end
rule "startedby10"
when
	$tc1 : TransactionCreatedEvent(description == "20") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "30", this != $tc1, this startedby[20s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(20)) };
	list.add(drools.getRule().getName());
end
rule "startedby11"
when
	$tc1 : TransactionCreatedEvent(description == "22") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "33", this != $tc1, this startedby[22s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(22)) };
	list.add(drools.getRule().getName());
end
rule "startedby12"
when
	$tc1 : TransactionCreatedEvent(description == "24") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "36", this != $tc1, this startedby[24s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(24)) };
	list.add(drools.getRule().getName());
end
rule "startedby13"
when
	$tc1 : TransactionCreatedEvent(description == "26") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "39", this != $tc1, this startedby[26s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(26)) };
	list.add(drools.getRule().getName());
end
rule "startedby14"
when
	$tc1 : TransactionCreatedEvent(description == "28") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "42", this != $tc1, this startedby[28s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(28)) };
	list.add(drools.getRule().getName());
end
rule "startedby15"
when
	$tc1 : TransactionCreatedEvent(description == "30") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "45", this != $tc1, this startedby[30s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(30)) };
	list.add(drools.getRule().getName());
end
rule "startedby16"
when
	$tc1 : TransactionCreatedEvent(description == "32") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "48", this != $tc1, this startedby[32s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(32)) };
	list.add(drools.getRule().getName());
end
rule "startedby17"
when
	$tc1 : TransactionCreatedEvent(description == "34") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "51", this != $tc1, this startedby[34s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(34)) };
	list.add(drools.getRule().getName());
end
rule "startedby18"
when
	$tc1 : TransactionCreatedEvent(description == "36") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "54", this != $tc1, this startedby[36s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(36)) };
	list.add(drools.getRule().getName());
end
rule "startedby19"
when
	$tc1 : TransactionCreatedEvent(description == "38") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "57", this != $tc1, this startedby[38s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(38)) };
	list.add(drools.getRule().getName());
end
rule "startedby20"
when
	$tc1 : TransactionCreatedEvent(description == "40") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "60", this != $tc1, this startedby[40s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(40)) };
	list.add(drools.getRule().getName());
end
rule "startedby21"
when
	$tc1 : TransactionCreatedEvent(description == "42") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "63", this != $tc1, this startedby[42s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(42)) };
	list.add(drools.getRule().getName());
end
rule "startedby22"
when
	$tc1 : TransactionCreatedEvent(description == "44") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "66", this != $tc1, this startedby[44s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(44)) };
	list.add(drools.getRule().getName());
end
rule "startedby23"
when
	$tc1 : TransactionCreatedEvent(description == "46") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "69", this != $tc1, this startedby[46s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(46)) };
	list.add(drools.getRule().getName());
end
rule "startedby24"
when
	$tc1 : TransactionCreatedEvent(description == "48") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "72", this != $tc1, this startedby[48s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(48)) };
	list.add(drools.getRule().getName());
end
rule "startedby25"
when
	$tc1 : TransactionCreatedEvent(description == "50") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "75", this != $tc1, this startedby[50s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(50)) };
	list.add(drools.getRule().getName());
end
rule "startedby26"
when
	$tc1 : TransactionCreatedEvent(description == "52") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "78", this != $tc1, this startedby[52s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(52)) };
	list.add(drools.getRule().getName());
end
rule "startedby27"
when
	$tc1 : TransactionCreatedEvent(description == "54") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "81", this != $tc1, this startedby[54s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(54)) };
	list.add(drools.getRule().getName());
end
rule "startedby28"
when
	$tc1 : TransactionCreatedEvent(description == "56") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "84", this != $tc1, this startedby[56s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(56)) };
	list.add(drools.getRule().getName());
end
rule "startedby29"
when
	$tc1 : TransactionCreatedEvent(description == "58") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "87", this != $tc1, this startedby[58s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(58)) };
	list.add(drools.getRule().getName());
end
rule "startedby30"
when
	$tc1 : TransactionCreatedEvent(description == "60") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "90", this != $tc1, this startedby[60s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(60)) };
	list.add(drools.getRule().getName());
end
rule "startedby31"
when
	$tc1 : TransactionCreatedEvent(description == "62") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "93", this != $tc1, this startedby[62s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(62)) };
	list.add(drools.getRule().getName());
end
rule "startedby32"
when
	$tc1 : TransactionCreatedEvent(description == "64") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "96", this != $tc1, this startedby[64s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(64)) };
	list.add(drools.getRule().getName());
end
rule "startedby33"
when
	$tc1 : TransactionCreatedEvent(description == "66") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "99", this != $tc1, this startedby[66s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(66)) };
	list.add(drools.getRule().getName());
end
rule "startedby34"
when
	$tc1 : TransactionCreatedEvent(description == "68") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "102", this != $tc1, this startedby[68s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(68)) };
	list.add(drools.getRule().getName());
end
rule "startedby35"
when
	$tc1 : TransactionCreatedEvent(description == "70") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "105", this != $tc1, this startedby[70s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(70)) };
	list.add(drools.getRule().getName());
end
rule "startedby36"
when
	$tc1 : TransactionCreatedEvent(description == "72") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "108", this != $tc1, this startedby[72s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(72)) };
	list.add(drools.getRule().getName());
end
rule "startedby37"
when
	$tc1 : TransactionCreatedEvent(description == "74") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "111", this != $tc1, this startedby[74s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(74)) };
	list.add(drools.getRule().getName());
end
rule "startedby38"
when
	$tc1 : TransactionCreatedEvent(description == "76") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "114", this != $tc1, this startedby[76s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(76)) };
	list.add(drools.getRule().getName());
end
rule "startedby39"
when
	$tc1 : TransactionCreatedEvent(description == "78") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "117", this != $tc1, this startedby[78s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(78)) };
	list.add(drools.getRule().getName());
end
rule "startedby40"
when
	$tc1 : TransactionCreatedEvent(description == "80") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "120", this != $tc1, this startedby[80s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(80)) };
	list.add(drools.getRule().getName());
end
rule "startedby41"
when
	$tc1 : TransactionCreatedEvent(description == "82") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "123", this != $tc1, this startedby[82s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(82)) };
	list.add(drools.getRule().getName());
end
rule "startedby42"
when
	$tc1 : TransactionCreatedEvent(description == "84") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "126", this != $tc1, this startedby[84s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(84)) };
	list.add(drools.getRule().getName());
end
rule "startedby43"
when
	$tc1 : TransactionCreatedEvent(description == "86") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "129", this != $tc1, this startedby[86s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(86)) };
	list.add(drools.getRule().getName());
end
rule "startedby44"
when
	$tc1 : TransactionCreatedEvent(description == "88") from entry-point "Master Stream"
	$tc2 : TransactionCreatedEvent(description == "132", this != $tc1, this startedby[88s] $tc1) from entry-point "Master Stream"
then
	modify ($tc1) { setCreationDate(new Date(88)) };
	list.add(drools.getRule().getName());
end
