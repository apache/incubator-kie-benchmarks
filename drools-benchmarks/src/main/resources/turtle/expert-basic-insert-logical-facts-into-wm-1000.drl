package org.drools.benchmarks.bre;
import org.drools.benchmarks.model.*;
declare LogicalFact
    desc : String @key
end
dialect "mvel"

rule "Insert logical facts for each Customer_100"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_100")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 100 + i));
    }
end
rule "Set address for each Customer_100"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_100")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_100"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_100")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 100 + i));
    }
end
rule "Set city for each Address_100"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_100")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_100"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_100")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 100 + i));
    }
end
rule "Set account type for each Account_100"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_100")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_100"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_100")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 100 + i));
    }
end
rule "Set receiving account for each Transaction_100"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_100")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_100"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_100")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 100 + i));
    }
end
rule "Set owner for each Credit Card_100"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_100")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_99"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_99")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 99 + i));
    }
end
rule "Set address for each Customer_99"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_99")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_99"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_99")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 99 + i));
    }
end
rule "Set city for each Address_99"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_99")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_99"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_99")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 99 + i));
    }
end
rule "Set account type for each Account_99"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_99")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_99"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_99")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 99 + i));
    }
end
rule "Set receiving account for each Transaction_99"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_99")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_99"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_99")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 99 + i));
    }
end
rule "Set owner for each Credit Card_99"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_99")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_98"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_98")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 98 + i));
    }
end
rule "Set address for each Customer_98"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_98")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_98"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_98")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 98 + i));
    }
end
rule "Set city for each Address_98"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_98")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_98"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_98")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 98 + i));
    }
end
rule "Set account type for each Account_98"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_98")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_98"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_98")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 98 + i));
    }
end
rule "Set receiving account for each Transaction_98"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_98")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_98"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_98")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 98 + i));
    }
end
rule "Set owner for each Credit Card_98"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_98")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_97"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_97")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 97 + i));
    }
end
rule "Set address for each Customer_97"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_97")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_97"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_97")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 97 + i));
    }
end
rule "Set city for each Address_97"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_97")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_97"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_97")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 97 + i));
    }
end
rule "Set account type for each Account_97"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_97")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_97"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_97")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 97 + i));
    }
end
rule "Set receiving account for each Transaction_97"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_97")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_97"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_97")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 97 + i));
    }
end
rule "Set owner for each Credit Card_97"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_97")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_96"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_96")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 96 + i));
    }
end
rule "Set address for each Customer_96"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_96")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_96"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_96")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 96 + i));
    }
end
rule "Set city for each Address_96"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_96")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_96"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_96")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 96 + i));
    }
end
rule "Set account type for each Account_96"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_96")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_96"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_96")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 96 + i));
    }
end
rule "Set receiving account for each Transaction_96"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_96")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_96"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_96")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 96 + i));
    }
end
rule "Set owner for each Credit Card_96"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_96")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_95"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_95")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 95 + i));
    }
end
rule "Set address for each Customer_95"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_95")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_95"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_95")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 95 + i));
    }
end
rule "Set city for each Address_95"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_95")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_95"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_95")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 95 + i));
    }
end
rule "Set account type for each Account_95"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_95")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_95"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_95")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 95 + i));
    }
end
rule "Set receiving account for each Transaction_95"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_95")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_95"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_95")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 95 + i));
    }
end
rule "Set owner for each Credit Card_95"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_95")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_94"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_94")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 94 + i));
    }
end
rule "Set address for each Customer_94"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_94")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_94"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_94")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 94 + i));
    }
end
rule "Set city for each Address_94"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_94")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_94"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_94")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 94 + i));
    }
end
rule "Set account type for each Account_94"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_94")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_94"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_94")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 94 + i));
    }
end
rule "Set receiving account for each Transaction_94"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_94")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_94"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_94")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 94 + i));
    }
end
rule "Set owner for each Credit Card_94"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_94")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_93"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_93")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 93 + i));
    }
end
rule "Set address for each Customer_93"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_93")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_93"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_93")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 93 + i));
    }
end
rule "Set city for each Address_93"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_93")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_93"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_93")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 93 + i));
    }
end
rule "Set account type for each Account_93"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_93")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_93"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_93")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 93 + i));
    }
end
rule "Set receiving account for each Transaction_93"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_93")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_93"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_93")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 93 + i));
    }
end
rule "Set owner for each Credit Card_93"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_93")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_92"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_92")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 92 + i));
    }
end
rule "Set address for each Customer_92"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_92")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_92"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_92")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 92 + i));
    }
end
rule "Set city for each Address_92"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_92")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_92"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_92")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 92 + i));
    }
end
rule "Set account type for each Account_92"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_92")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_92"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_92")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 92 + i));
    }
end
rule "Set receiving account for each Transaction_92"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_92")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_92"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_92")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 92 + i));
    }
end
rule "Set owner for each Credit Card_92"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_92")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_91"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_91")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 91 + i));
    }
end
rule "Set address for each Customer_91"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_91")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_91"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_91")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 91 + i));
    }
end
rule "Set city for each Address_91"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_91")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_91"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_91")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 91 + i));
    }
end
rule "Set account type for each Account_91"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_91")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_91"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_91")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 91 + i));
    }
end
rule "Set receiving account for each Transaction_91"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_91")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_91"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_91")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 91 + i));
    }
end
rule "Set owner for each Credit Card_91"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_91")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_90"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_90")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 90 + i));
    }
end
rule "Set address for each Customer_90"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_90")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_90"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_90")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 90 + i));
    }
end
rule "Set city for each Address_90"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_90")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_90"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_90")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 90 + i));
    }
end
rule "Set account type for each Account_90"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_90")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_90"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_90")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 90 + i));
    }
end
rule "Set receiving account for each Transaction_90"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_90")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_90"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_90")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 90 + i));
    }
end
rule "Set owner for each Credit Card_90"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_90")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_89"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_89")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 89 + i));
    }
end
rule "Set address for each Customer_89"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_89")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_89"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_89")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 89 + i));
    }
end
rule "Set city for each Address_89"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_89")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_89"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_89")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 89 + i));
    }
end
rule "Set account type for each Account_89"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_89")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_89"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_89")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 89 + i));
    }
end
rule "Set receiving account for each Transaction_89"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_89")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_89"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_89")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 89 + i));
    }
end
rule "Set owner for each Credit Card_89"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_89")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_88"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_88")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 88 + i));
    }
end
rule "Set address for each Customer_88"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_88")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_88"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_88")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 88 + i));
    }
end
rule "Set city for each Address_88"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_88")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_88"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_88")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 88 + i));
    }
end
rule "Set account type for each Account_88"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_88")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_88"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_88")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 88 + i));
    }
end
rule "Set receiving account for each Transaction_88"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_88")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_88"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_88")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 88 + i));
    }
end
rule "Set owner for each Credit Card_88"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_88")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_87"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_87")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 87 + i));
    }
end
rule "Set address for each Customer_87"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_87")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_87"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_87")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 87 + i));
    }
end
rule "Set city for each Address_87"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_87")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_87"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_87")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 87 + i));
    }
end
rule "Set account type for each Account_87"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_87")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_87"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_87")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 87 + i));
    }
end
rule "Set receiving account for each Transaction_87"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_87")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_87"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_87")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 87 + i));
    }
end
rule "Set owner for each Credit Card_87"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_87")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_86"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_86")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 86 + i));
    }
end
rule "Set address for each Customer_86"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_86")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_86"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_86")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 86 + i));
    }
end
rule "Set city for each Address_86"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_86")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_86"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_86")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 86 + i));
    }
end
rule "Set account type for each Account_86"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_86")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_86"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_86")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 86 + i));
    }
end
rule "Set receiving account for each Transaction_86"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_86")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_86"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_86")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 86 + i));
    }
end
rule "Set owner for each Credit Card_86"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_86")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_85"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_85")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 85 + i));
    }
end
rule "Set address for each Customer_85"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_85")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_85"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_85")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 85 + i));
    }
end
rule "Set city for each Address_85"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_85")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_85"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_85")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 85 + i));
    }
end
rule "Set account type for each Account_85"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_85")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_85"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_85")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 85 + i));
    }
end
rule "Set receiving account for each Transaction_85"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_85")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_85"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_85")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 85 + i));
    }
end
rule "Set owner for each Credit Card_85"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_85")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_84"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_84")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 84 + i));
    }
end
rule "Set address for each Customer_84"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_84")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_84"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_84")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 84 + i));
    }
end
rule "Set city for each Address_84"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_84")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_84"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_84")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 84 + i));
    }
end
rule "Set account type for each Account_84"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_84")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_84"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_84")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 84 + i));
    }
end
rule "Set receiving account for each Transaction_84"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_84")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_84"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_84")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 84 + i));
    }
end
rule "Set owner for each Credit Card_84"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_84")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_83"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_83")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 83 + i));
    }
end
rule "Set address for each Customer_83"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_83")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_83"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_83")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 83 + i));
    }
end
rule "Set city for each Address_83"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_83")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_83"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_83")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 83 + i));
    }
end
rule "Set account type for each Account_83"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_83")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_83"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_83")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 83 + i));
    }
end
rule "Set receiving account for each Transaction_83"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_83")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_83"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_83")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 83 + i));
    }
end
rule "Set owner for each Credit Card_83"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_83")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_82"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_82")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 82 + i));
    }
end
rule "Set address for each Customer_82"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_82")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_82"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_82")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 82 + i));
    }
end
rule "Set city for each Address_82"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_82")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_82"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_82")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 82 + i));
    }
end
rule "Set account type for each Account_82"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_82")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_82"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_82")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 82 + i));
    }
end
rule "Set receiving account for each Transaction_82"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_82")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_82"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_82")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 82 + i));
    }
end
rule "Set owner for each Credit Card_82"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_82")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_81"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_81")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 81 + i));
    }
end
rule "Set address for each Customer_81"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_81")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_81"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_81")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 81 + i));
    }
end
rule "Set city for each Address_81"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_81")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_81"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_81")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 81 + i));
    }
end
rule "Set account type for each Account_81"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_81")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_81"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_81")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 81 + i));
    }
end
rule "Set receiving account for each Transaction_81"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_81")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_81"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_81")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 81 + i));
    }
end
rule "Set owner for each Credit Card_81"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_81")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_80"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_80")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 80 + i));
    }
end
rule "Set address for each Customer_80"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_80")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_80"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_80")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 80 + i));
    }
end
rule "Set city for each Address_80"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_80")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_80"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_80")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 80 + i));
    }
end
rule "Set account type for each Account_80"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_80")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_80"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_80")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 80 + i));
    }
end
rule "Set receiving account for each Transaction_80"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_80")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_80"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_80")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 80 + i));
    }
end
rule "Set owner for each Credit Card_80"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_80")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_79"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_79")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 79 + i));
    }
end
rule "Set address for each Customer_79"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_79")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_79"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_79")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 79 + i));
    }
end
rule "Set city for each Address_79"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_79")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_79"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_79")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 79 + i));
    }
end
rule "Set account type for each Account_79"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_79")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_79"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_79")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 79 + i));
    }
end
rule "Set receiving account for each Transaction_79"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_79")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_79"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_79")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 79 + i));
    }
end
rule "Set owner for each Credit Card_79"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_79")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_78"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_78")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 78 + i));
    }
end
rule "Set address for each Customer_78"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_78")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_78"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_78")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 78 + i));
    }
end
rule "Set city for each Address_78"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_78")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_78"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_78")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 78 + i));
    }
end
rule "Set account type for each Account_78"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_78")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_78"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_78")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 78 + i));
    }
end
rule "Set receiving account for each Transaction_78"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_78")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_78"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_78")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 78 + i));
    }
end
rule "Set owner for each Credit Card_78"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_78")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_77"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_77")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 77 + i));
    }
end
rule "Set address for each Customer_77"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_77")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_77"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_77")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 77 + i));
    }
end
rule "Set city for each Address_77"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_77")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_77"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_77")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 77 + i));
    }
end
rule "Set account type for each Account_77"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_77")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_77"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_77")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 77 + i));
    }
end
rule "Set receiving account for each Transaction_77"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_77")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_77"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_77")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 77 + i));
    }
end
rule "Set owner for each Credit Card_77"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_77")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_76"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_76")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 76 + i));
    }
end
rule "Set address for each Customer_76"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_76")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_76"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_76")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 76 + i));
    }
end
rule "Set city for each Address_76"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_76")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_76"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_76")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 76 + i));
    }
end
rule "Set account type for each Account_76"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_76")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_76"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_76")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 76 + i));
    }
end
rule "Set receiving account for each Transaction_76"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_76")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_76"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_76")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 76 + i));
    }
end
rule "Set owner for each Credit Card_76"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_76")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_75"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_75")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 75 + i));
    }
end
rule "Set address for each Customer_75"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_75")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_75"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_75")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 75 + i));
    }
end
rule "Set city for each Address_75"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_75")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_75"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_75")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 75 + i));
    }
end
rule "Set account type for each Account_75"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_75")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_75"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_75")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 75 + i));
    }
end
rule "Set receiving account for each Transaction_75"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_75")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_75"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_75")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 75 + i));
    }
end
rule "Set owner for each Credit Card_75"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_75")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_74"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_74")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 74 + i));
    }
end
rule "Set address for each Customer_74"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_74")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_74"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_74")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 74 + i));
    }
end
rule "Set city for each Address_74"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_74")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_74"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_74")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 74 + i));
    }
end
rule "Set account type for each Account_74"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_74")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_74"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_74")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 74 + i));
    }
end
rule "Set receiving account for each Transaction_74"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_74")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_74"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_74")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 74 + i));
    }
end
rule "Set owner for each Credit Card_74"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_74")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_73"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_73")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 73 + i));
    }
end
rule "Set address for each Customer_73"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_73")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_73"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_73")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 73 + i));
    }
end
rule "Set city for each Address_73"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_73")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_73"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_73")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 73 + i));
    }
end
rule "Set account type for each Account_73"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_73")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_73"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_73")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 73 + i));
    }
end
rule "Set receiving account for each Transaction_73"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_73")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_73"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_73")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 73 + i));
    }
end
rule "Set owner for each Credit Card_73"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_73")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_72"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_72")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 72 + i));
    }
end
rule "Set address for each Customer_72"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_72")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_72"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_72")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 72 + i));
    }
end
rule "Set city for each Address_72"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_72")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_72"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_72")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 72 + i));
    }
end
rule "Set account type for each Account_72"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_72")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_72"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_72")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 72 + i));
    }
end
rule "Set receiving account for each Transaction_72"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_72")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_72"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_72")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 72 + i));
    }
end
rule "Set owner for each Credit Card_72"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_72")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_71"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_71")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 71 + i));
    }
end
rule "Set address for each Customer_71"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_71")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_71"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_71")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 71 + i));
    }
end
rule "Set city for each Address_71"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_71")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_71"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_71")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 71 + i));
    }
end
rule "Set account type for each Account_71"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_71")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_71"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_71")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 71 + i));
    }
end
rule "Set receiving account for each Transaction_71"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_71")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_71"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_71")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 71 + i));
    }
end
rule "Set owner for each Credit Card_71"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_71")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_70"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_70")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 70 + i));
    }
end
rule "Set address for each Customer_70"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_70")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_70"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_70")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 70 + i));
    }
end
rule "Set city for each Address_70"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_70")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_70"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_70")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 70 + i));
    }
end
rule "Set account type for each Account_70"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_70")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_70"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_70")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 70 + i));
    }
end
rule "Set receiving account for each Transaction_70"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_70")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_70"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_70")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 70 + i));
    }
end
rule "Set owner for each Credit Card_70"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_70")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_69"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_69")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 69 + i));
    }
end
rule "Set address for each Customer_69"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_69")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_69"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_69")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 69 + i));
    }
end
rule "Set city for each Address_69"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_69")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_69"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_69")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 69 + i));
    }
end
rule "Set account type for each Account_69"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_69")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_69"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_69")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 69 + i));
    }
end
rule "Set receiving account for each Transaction_69"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_69")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_69"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_69")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 69 + i));
    }
end
rule "Set owner for each Credit Card_69"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_69")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_68"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_68")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 68 + i));
    }
end
rule "Set address for each Customer_68"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_68")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_68"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_68")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 68 + i));
    }
end
rule "Set city for each Address_68"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_68")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_68"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_68")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 68 + i));
    }
end
rule "Set account type for each Account_68"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_68")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_68"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_68")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 68 + i));
    }
end
rule "Set receiving account for each Transaction_68"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_68")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_68"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_68")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 68 + i));
    }
end
rule "Set owner for each Credit Card_68"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_68")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_67"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_67")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 67 + i));
    }
end
rule "Set address for each Customer_67"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_67")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_67"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_67")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 67 + i));
    }
end
rule "Set city for each Address_67"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_67")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_67"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_67")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 67 + i));
    }
end
rule "Set account type for each Account_67"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_67")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_67"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_67")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 67 + i));
    }
end
rule "Set receiving account for each Transaction_67"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_67")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_67"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_67")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 67 + i));
    }
end
rule "Set owner for each Credit Card_67"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_67")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_66"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_66")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 66 + i));
    }
end
rule "Set address for each Customer_66"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_66")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_66"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_66")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 66 + i));
    }
end
rule "Set city for each Address_66"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_66")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_66"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_66")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 66 + i));
    }
end
rule "Set account type for each Account_66"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_66")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_66"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_66")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 66 + i));
    }
end
rule "Set receiving account for each Transaction_66"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_66")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_66"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_66")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 66 + i));
    }
end
rule "Set owner for each Credit Card_66"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_66")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_65"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_65")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 65 + i));
    }
end
rule "Set address for each Customer_65"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_65")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_65"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_65")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 65 + i));
    }
end
rule "Set city for each Address_65"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_65")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_65"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_65")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 65 + i));
    }
end
rule "Set account type for each Account_65"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_65")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_65"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_65")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 65 + i));
    }
end
rule "Set receiving account for each Transaction_65"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_65")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_65"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_65")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 65 + i));
    }
end
rule "Set owner for each Credit Card_65"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_65")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_64"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_64")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 64 + i));
    }
end
rule "Set address for each Customer_64"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_64")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_64"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_64")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 64 + i));
    }
end
rule "Set city for each Address_64"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_64")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_64"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_64")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 64 + i));
    }
end
rule "Set account type for each Account_64"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_64")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_64"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_64")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 64 + i));
    }
end
rule "Set receiving account for each Transaction_64"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_64")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_64"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_64")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 64 + i));
    }
end
rule "Set owner for each Credit Card_64"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_64")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_63"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_63")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 63 + i));
    }
end
rule "Set address for each Customer_63"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_63")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_63"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_63")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 63 + i));
    }
end
rule "Set city for each Address_63"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_63")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_63"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_63")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 63 + i));
    }
end
rule "Set account type for each Account_63"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_63")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_63"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_63")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 63 + i));
    }
end
rule "Set receiving account for each Transaction_63"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_63")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_63"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_63")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 63 + i));
    }
end
rule "Set owner for each Credit Card_63"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_63")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_62"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_62")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 62 + i));
    }
end
rule "Set address for each Customer_62"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_62")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_62"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_62")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 62 + i));
    }
end
rule "Set city for each Address_62"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_62")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_62"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_62")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 62 + i));
    }
end
rule "Set account type for each Account_62"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_62")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_62"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_62")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 62 + i));
    }
end
rule "Set receiving account for each Transaction_62"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_62")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_62"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_62")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 62 + i));
    }
end
rule "Set owner for each Credit Card_62"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_62")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_61"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_61")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 61 + i));
    }
end
rule "Set address for each Customer_61"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_61")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_61"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_61")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 61 + i));
    }
end
rule "Set city for each Address_61"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_61")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_61"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_61")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 61 + i));
    }
end
rule "Set account type for each Account_61"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_61")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_61"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_61")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 61 + i));
    }
end
rule "Set receiving account for each Transaction_61"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_61")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_61"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_61")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 61 + i));
    }
end
rule "Set owner for each Credit Card_61"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_61")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_60"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_60")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 60 + i));
    }
end
rule "Set address for each Customer_60"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_60")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_60"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_60")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 60 + i));
    }
end
rule "Set city for each Address_60"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_60")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_60"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_60")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 60 + i));
    }
end
rule "Set account type for each Account_60"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_60")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_60"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_60")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 60 + i));
    }
end
rule "Set receiving account for each Transaction_60"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_60")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_60"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_60")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 60 + i));
    }
end
rule "Set owner for each Credit Card_60"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_60")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_59"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_59")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 59 + i));
    }
end
rule "Set address for each Customer_59"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_59")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_59"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_59")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 59 + i));
    }
end
rule "Set city for each Address_59"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_59")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_59"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_59")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 59 + i));
    }
end
rule "Set account type for each Account_59"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_59")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_59"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_59")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 59 + i));
    }
end
rule "Set receiving account for each Transaction_59"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_59")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_59"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_59")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 59 + i));
    }
end
rule "Set owner for each Credit Card_59"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_59")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_58"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_58")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 58 + i));
    }
end
rule "Set address for each Customer_58"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_58")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_58"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_58")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 58 + i));
    }
end
rule "Set city for each Address_58"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_58")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_58"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_58")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 58 + i));
    }
end
rule "Set account type for each Account_58"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_58")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_58"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_58")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 58 + i));
    }
end
rule "Set receiving account for each Transaction_58"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_58")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_58"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_58")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 58 + i));
    }
end
rule "Set owner for each Credit Card_58"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_58")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_57"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_57")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 57 + i));
    }
end
rule "Set address for each Customer_57"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_57")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_57"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_57")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 57 + i));
    }
end
rule "Set city for each Address_57"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_57")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_57"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_57")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 57 + i));
    }
end
rule "Set account type for each Account_57"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_57")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_57"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_57")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 57 + i));
    }
end
rule "Set receiving account for each Transaction_57"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_57")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_57"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_57")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 57 + i));
    }
end
rule "Set owner for each Credit Card_57"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_57")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_56"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_56")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 56 + i));
    }
end
rule "Set address for each Customer_56"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_56")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_56"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_56")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 56 + i));
    }
end
rule "Set city for each Address_56"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_56")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_56"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_56")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 56 + i));
    }
end
rule "Set account type for each Account_56"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_56")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_56"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_56")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 56 + i));
    }
end
rule "Set receiving account for each Transaction_56"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_56")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_56"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_56")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 56 + i));
    }
end
rule "Set owner for each Credit Card_56"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_56")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_55"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_55")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 55 + i));
    }
end
rule "Set address for each Customer_55"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_55")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_55"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_55")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 55 + i));
    }
end
rule "Set city for each Address_55"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_55")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_55"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_55")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 55 + i));
    }
end
rule "Set account type for each Account_55"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_55")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_55"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_55")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 55 + i));
    }
end
rule "Set receiving account for each Transaction_55"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_55")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_55"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_55")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 55 + i));
    }
end
rule "Set owner for each Credit Card_55"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_55")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_54"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_54")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 54 + i));
    }
end
rule "Set address for each Customer_54"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_54")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_54"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_54")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 54 + i));
    }
end
rule "Set city for each Address_54"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_54")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_54"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_54")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 54 + i));
    }
end
rule "Set account type for each Account_54"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_54")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_54"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_54")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 54 + i));
    }
end
rule "Set receiving account for each Transaction_54"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_54")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_54"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_54")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 54 + i));
    }
end
rule "Set owner for each Credit Card_54"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_54")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_53"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_53")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 53 + i));
    }
end
rule "Set address for each Customer_53"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_53")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_53"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_53")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 53 + i));
    }
end
rule "Set city for each Address_53"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_53")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_53"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_53")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 53 + i));
    }
end
rule "Set account type for each Account_53"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_53")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_53"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_53")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 53 + i));
    }
end
rule "Set receiving account for each Transaction_53"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_53")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_53"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_53")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 53 + i));
    }
end
rule "Set owner for each Credit Card_53"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_53")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_52"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_52")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 52 + i));
    }
end
rule "Set address for each Customer_52"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_52")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_52"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_52")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 52 + i));
    }
end
rule "Set city for each Address_52"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_52")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_52"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_52")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 52 + i));
    }
end
rule "Set account type for each Account_52"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_52")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_52"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_52")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 52 + i));
    }
end
rule "Set receiving account for each Transaction_52"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_52")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_52"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_52")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 52 + i));
    }
end
rule "Set owner for each Credit Card_52"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_52")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_51"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_51")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 51 + i));
    }
end
rule "Set address for each Customer_51"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_51")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_51"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_51")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 51 + i));
    }
end
rule "Set city for each Address_51"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_51")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_51"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_51")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 51 + i));
    }
end
rule "Set account type for each Account_51"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_51")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_51"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_51")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 51 + i));
    }
end
rule "Set receiving account for each Transaction_51"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_51")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_51"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_51")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 51 + i));
    }
end
rule "Set owner for each Credit Card_51"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_51")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_50"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_50")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 50 + i));
    }
end
rule "Set address for each Customer_50"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_50")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_50"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_50")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 50 + i));
    }
end
rule "Set city for each Address_50"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_50")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_50"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_50")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 50 + i));
    }
end
rule "Set account type for each Account_50"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_50")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_50"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_50")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 50 + i));
    }
end
rule "Set receiving account for each Transaction_50"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_50")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_50"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_50")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 50 + i));
    }
end
rule "Set owner for each Credit Card_50"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_50")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_49"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_49")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 49 + i));
    }
end
rule "Set address for each Customer_49"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_49")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_49"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_49")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 49 + i));
    }
end
rule "Set city for each Address_49"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_49")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_49"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_49")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 49 + i));
    }
end
rule "Set account type for each Account_49"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_49")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_49"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_49")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 49 + i));
    }
end
rule "Set receiving account for each Transaction_49"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_49")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_49"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_49")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 49 + i));
    }
end
rule "Set owner for each Credit Card_49"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_49")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_48"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_48")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 48 + i));
    }
end
rule "Set address for each Customer_48"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_48")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_48"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_48")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 48 + i));
    }
end
rule "Set city for each Address_48"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_48")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_48"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_48")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 48 + i));
    }
end
rule "Set account type for each Account_48"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_48")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_48"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_48")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 48 + i));
    }
end
rule "Set receiving account for each Transaction_48"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_48")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_48"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_48")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 48 + i));
    }
end
rule "Set owner for each Credit Card_48"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_48")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_47"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_47")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 47 + i));
    }
end
rule "Set address for each Customer_47"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_47")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_47"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_47")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 47 + i));
    }
end
rule "Set city for each Address_47"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_47")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_47"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_47")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 47 + i));
    }
end
rule "Set account type for each Account_47"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_47")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_47"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_47")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 47 + i));
    }
end
rule "Set receiving account for each Transaction_47"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_47")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_47"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_47")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 47 + i));
    }
end
rule "Set owner for each Credit Card_47"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_47")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_46"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_46")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 46 + i));
    }
end
rule "Set address for each Customer_46"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_46")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_46"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_46")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 46 + i));
    }
end
rule "Set city for each Address_46"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_46")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_46"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_46")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 46 + i));
    }
end
rule "Set account type for each Account_46"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_46")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_46"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_46")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 46 + i));
    }
end
rule "Set receiving account for each Transaction_46"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_46")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_46"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_46")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 46 + i));
    }
end
rule "Set owner for each Credit Card_46"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_46")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_45"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_45")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 45 + i));
    }
end
rule "Set address for each Customer_45"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_45")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_45"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_45")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 45 + i));
    }
end
rule "Set city for each Address_45"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_45")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_45"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_45")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 45 + i));
    }
end
rule "Set account type for each Account_45"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_45")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_45"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_45")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 45 + i));
    }
end
rule "Set receiving account for each Transaction_45"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_45")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_45"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_45")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 45 + i));
    }
end
rule "Set owner for each Credit Card_45"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_45")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_44"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_44")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 44 + i));
    }
end
rule "Set address for each Customer_44"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_44")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_44"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_44")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 44 + i));
    }
end
rule "Set city for each Address_44"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_44")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_44"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_44")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 44 + i));
    }
end
rule "Set account type for each Account_44"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_44")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_44"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_44")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 44 + i));
    }
end
rule "Set receiving account for each Transaction_44"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_44")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_44"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_44")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 44 + i));
    }
end
rule "Set owner for each Credit Card_44"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_44")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_43"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_43")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 43 + i));
    }
end
rule "Set address for each Customer_43"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_43")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_43"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_43")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 43 + i));
    }
end
rule "Set city for each Address_43"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_43")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_43"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_43")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 43 + i));
    }
end
rule "Set account type for each Account_43"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_43")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_43"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_43")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 43 + i));
    }
end
rule "Set receiving account for each Transaction_43"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_43")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_43"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_43")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 43 + i));
    }
end
rule "Set owner for each Credit Card_43"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_43")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_42"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_42")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 42 + i));
    }
end
rule "Set address for each Customer_42"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_42")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_42"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_42")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 42 + i));
    }
end
rule "Set city for each Address_42"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_42")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_42"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_42")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 42 + i));
    }
end
rule "Set account type for each Account_42"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_42")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_42"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_42")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 42 + i));
    }
end
rule "Set receiving account for each Transaction_42"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_42")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_42"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_42")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 42 + i));
    }
end
rule "Set owner for each Credit Card_42"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_42")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_41"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_41")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 41 + i));
    }
end
rule "Set address for each Customer_41"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_41")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_41"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_41")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 41 + i));
    }
end
rule "Set city for each Address_41"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_41")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_41"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_41")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 41 + i));
    }
end
rule "Set account type for each Account_41"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_41")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_41"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_41")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 41 + i));
    }
end
rule "Set receiving account for each Transaction_41"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_41")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_41"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_41")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 41 + i));
    }
end
rule "Set owner for each Credit Card_41"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_41")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_40"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_40")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 40 + i));
    }
end
rule "Set address for each Customer_40"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_40")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_40"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_40")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 40 + i));
    }
end
rule "Set city for each Address_40"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_40")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_40"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_40")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 40 + i));
    }
end
rule "Set account type for each Account_40"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_40")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_40"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_40")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 40 + i));
    }
end
rule "Set receiving account for each Transaction_40"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_40")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_40"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_40")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 40 + i));
    }
end
rule "Set owner for each Credit Card_40"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_40")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_39"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_39")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 39 + i));
    }
end
rule "Set address for each Customer_39"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_39")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_39"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_39")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 39 + i));
    }
end
rule "Set city for each Address_39"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_39")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_39"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_39")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 39 + i));
    }
end
rule "Set account type for each Account_39"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_39")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_39"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_39")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 39 + i));
    }
end
rule "Set receiving account for each Transaction_39"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_39")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_39"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_39")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 39 + i));
    }
end
rule "Set owner for each Credit Card_39"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_39")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_38"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_38")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 38 + i));
    }
end
rule "Set address for each Customer_38"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_38")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_38"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_38")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 38 + i));
    }
end
rule "Set city for each Address_38"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_38")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_38"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_38")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 38 + i));
    }
end
rule "Set account type for each Account_38"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_38")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_38"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_38")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 38 + i));
    }
end
rule "Set receiving account for each Transaction_38"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_38")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_38"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_38")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 38 + i));
    }
end
rule "Set owner for each Credit Card_38"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_38")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_37"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_37")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 37 + i));
    }
end
rule "Set address for each Customer_37"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_37")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_37"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_37")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 37 + i));
    }
end
rule "Set city for each Address_37"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_37")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_37"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_37")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 37 + i));
    }
end
rule "Set account type for each Account_37"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_37")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_37"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_37")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 37 + i));
    }
end
rule "Set receiving account for each Transaction_37"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_37")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_37"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_37")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 37 + i));
    }
end
rule "Set owner for each Credit Card_37"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_37")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_36"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_36")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 36 + i));
    }
end
rule "Set address for each Customer_36"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_36")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_36"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_36")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 36 + i));
    }
end
rule "Set city for each Address_36"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_36")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_36"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_36")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 36 + i));
    }
end
rule "Set account type for each Account_36"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_36")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_36"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_36")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 36 + i));
    }
end
rule "Set receiving account for each Transaction_36"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_36")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_36"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_36")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 36 + i));
    }
end
rule "Set owner for each Credit Card_36"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_36")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_35"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_35")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 35 + i));
    }
end
rule "Set address for each Customer_35"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_35")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_35"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_35")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 35 + i));
    }
end
rule "Set city for each Address_35"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_35")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_35"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_35")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 35 + i));
    }
end
rule "Set account type for each Account_35"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_35")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_35"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_35")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 35 + i));
    }
end
rule "Set receiving account for each Transaction_35"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_35")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_35"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_35")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 35 + i));
    }
end
rule "Set owner for each Credit Card_35"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_35")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_34"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_34")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 34 + i));
    }
end
rule "Set address for each Customer_34"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_34")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_34"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_34")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 34 + i));
    }
end
rule "Set city for each Address_34"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_34")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_34"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_34")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 34 + i));
    }
end
rule "Set account type for each Account_34"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_34")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_34"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_34")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 34 + i));
    }
end
rule "Set receiving account for each Transaction_34"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_34")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_34"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_34")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 34 + i));
    }
end
rule "Set owner for each Credit Card_34"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_34")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_33"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_33")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 33 + i));
    }
end
rule "Set address for each Customer_33"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_33")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_33"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_33")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 33 + i));
    }
end
rule "Set city for each Address_33"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_33")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_33"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_33")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 33 + i));
    }
end
rule "Set account type for each Account_33"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_33")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_33"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_33")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 33 + i));
    }
end
rule "Set receiving account for each Transaction_33"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_33")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_33"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_33")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 33 + i));
    }
end
rule "Set owner for each Credit Card_33"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_33")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_32"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_32")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 32 + i));
    }
end
rule "Set address for each Customer_32"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_32")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_32"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_32")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 32 + i));
    }
end
rule "Set city for each Address_32"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_32")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_32"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_32")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 32 + i));
    }
end
rule "Set account type for each Account_32"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_32")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_32"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_32")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 32 + i));
    }
end
rule "Set receiving account for each Transaction_32"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_32")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_32"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_32")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 32 + i));
    }
end
rule "Set owner for each Credit Card_32"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_32")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_31"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_31")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 31 + i));
    }
end
rule "Set address for each Customer_31"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_31")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_31"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_31")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 31 + i));
    }
end
rule "Set city for each Address_31"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_31")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_31"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_31")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 31 + i));
    }
end
rule "Set account type for each Account_31"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_31")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_31"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_31")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 31 + i));
    }
end
rule "Set receiving account for each Transaction_31"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_31")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_31"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_31")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 31 + i));
    }
end
rule "Set owner for each Credit Card_31"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_31")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_30"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_30")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 30 + i));
    }
end
rule "Set address for each Customer_30"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_30")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_30"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_30")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 30 + i));
    }
end
rule "Set city for each Address_30"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_30")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_30"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_30")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 30 + i));
    }
end
rule "Set account type for each Account_30"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_30")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_30"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_30")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 30 + i));
    }
end
rule "Set receiving account for each Transaction_30"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_30")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_30"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_30")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 30 + i));
    }
end
rule "Set owner for each Credit Card_30"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_30")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_29"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_29")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 29 + i));
    }
end
rule "Set address for each Customer_29"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_29")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_29"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_29")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 29 + i));
    }
end
rule "Set city for each Address_29"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_29")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_29"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_29")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 29 + i));
    }
end
rule "Set account type for each Account_29"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_29")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_29"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_29")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 29 + i));
    }
end
rule "Set receiving account for each Transaction_29"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_29")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_29"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_29")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 29 + i));
    }
end
rule "Set owner for each Credit Card_29"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_29")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_28"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_28")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 28 + i));
    }
end
rule "Set address for each Customer_28"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_28")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_28"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_28")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 28 + i));
    }
end
rule "Set city for each Address_28"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_28")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_28"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_28")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 28 + i));
    }
end
rule "Set account type for each Account_28"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_28")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_28"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_28")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 28 + i));
    }
end
rule "Set receiving account for each Transaction_28"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_28")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_28"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_28")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 28 + i));
    }
end
rule "Set owner for each Credit Card_28"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_28")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_27"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_27")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 27 + i));
    }
end
rule "Set address for each Customer_27"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_27")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_27"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_27")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 27 + i));
    }
end
rule "Set city for each Address_27"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_27")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_27"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_27")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 27 + i));
    }
end
rule "Set account type for each Account_27"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_27")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_27"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_27")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 27 + i));
    }
end
rule "Set receiving account for each Transaction_27"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_27")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_27"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_27")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 27 + i));
    }
end
rule "Set owner for each Credit Card_27"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_27")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_26"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_26")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 26 + i));
    }
end
rule "Set address for each Customer_26"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_26")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_26"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_26")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 26 + i));
    }
end
rule "Set city for each Address_26"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_26")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_26"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_26")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 26 + i));
    }
end
rule "Set account type for each Account_26"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_26")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_26"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_26")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 26 + i));
    }
end
rule "Set receiving account for each Transaction_26"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_26")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_26"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_26")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 26 + i));
    }
end
rule "Set owner for each Credit Card_26"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_26")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_25"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_25")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 25 + i));
    }
end
rule "Set address for each Customer_25"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_25")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_25"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_25")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 25 + i));
    }
end
rule "Set city for each Address_25"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_25")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_25"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_25")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 25 + i));
    }
end
rule "Set account type for each Account_25"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_25")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_25"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_25")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 25 + i));
    }
end
rule "Set receiving account for each Transaction_25"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_25")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_25"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_25")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 25 + i));
    }
end
rule "Set owner for each Credit Card_25"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_25")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_24"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_24")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 24 + i));
    }
end
rule "Set address for each Customer_24"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_24")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_24"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_24")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 24 + i));
    }
end
rule "Set city for each Address_24"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_24")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_24"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_24")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 24 + i));
    }
end
rule "Set account type for each Account_24"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_24")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_24"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_24")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 24 + i));
    }
end
rule "Set receiving account for each Transaction_24"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_24")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_24"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_24")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 24 + i));
    }
end
rule "Set owner for each Credit Card_24"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_24")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_23"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_23")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 23 + i));
    }
end
rule "Set address for each Customer_23"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_23")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_23"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_23")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 23 + i));
    }
end
rule "Set city for each Address_23"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_23")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_23"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_23")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 23 + i));
    }
end
rule "Set account type for each Account_23"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_23")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_23"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_23")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 23 + i));
    }
end
rule "Set receiving account for each Transaction_23"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_23")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_23"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_23")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 23 + i));
    }
end
rule "Set owner for each Credit Card_23"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_23")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_22"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_22")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 22 + i));
    }
end
rule "Set address for each Customer_22"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_22")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_22"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_22")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 22 + i));
    }
end
rule "Set city for each Address_22"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_22")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_22"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_22")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 22 + i));
    }
end
rule "Set account type for each Account_22"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_22")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_22"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_22")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 22 + i));
    }
end
rule "Set receiving account for each Transaction_22"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_22")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_22"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_22")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 22 + i));
    }
end
rule "Set owner for each Credit Card_22"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_22")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_21"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_21")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 21 + i));
    }
end
rule "Set address for each Customer_21"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_21")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_21"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_21")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 21 + i));
    }
end
rule "Set city for each Address_21"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_21")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_21"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_21")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 21 + i));
    }
end
rule "Set account type for each Account_21"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_21")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_21"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_21")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 21 + i));
    }
end
rule "Set receiving account for each Transaction_21"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_21")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_21"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_21")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 21 + i));
    }
end
rule "Set owner for each Credit Card_21"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_21")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_20"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_20")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 20 + i));
    }
end
rule "Set address for each Customer_20"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_20")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_20"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_20")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 20 + i));
    }
end
rule "Set city for each Address_20"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_20")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_20"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_20")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 20 + i));
    }
end
rule "Set account type for each Account_20"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_20")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_20"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_20")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 20 + i));
    }
end
rule "Set receiving account for each Transaction_20"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_20")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_20"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_20")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 20 + i));
    }
end
rule "Set owner for each Credit Card_20"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_20")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_19"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_19")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 19 + i));
    }
end
rule "Set address for each Customer_19"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_19")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_19"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_19")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 19 + i));
    }
end
rule "Set city for each Address_19"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_19")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_19"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_19")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 19 + i));
    }
end
rule "Set account type for each Account_19"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_19")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_19"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_19")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 19 + i));
    }
end
rule "Set receiving account for each Transaction_19"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_19")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_19"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_19")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 19 + i));
    }
end
rule "Set owner for each Credit Card_19"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_19")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_18"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_18")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 18 + i));
    }
end
rule "Set address for each Customer_18"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_18")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_18"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_18")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 18 + i));
    }
end
rule "Set city for each Address_18"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_18")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_18"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_18")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 18 + i));
    }
end
rule "Set account type for each Account_18"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_18")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_18"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_18")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 18 + i));
    }
end
rule "Set receiving account for each Transaction_18"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_18")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_18"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_18")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 18 + i));
    }
end
rule "Set owner for each Credit Card_18"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_18")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_17"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_17")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 17 + i));
    }
end
rule "Set address for each Customer_17"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_17")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_17"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_17")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 17 + i));
    }
end
rule "Set city for each Address_17"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_17")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_17"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_17")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 17 + i));
    }
end
rule "Set account type for each Account_17"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_17")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_17"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_17")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 17 + i));
    }
end
rule "Set receiving account for each Transaction_17"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_17")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_17"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_17")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 17 + i));
    }
end
rule "Set owner for each Credit Card_17"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_17")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_16"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_16")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 16 + i));
    }
end
rule "Set address for each Customer_16"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_16")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_16"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_16")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 16 + i));
    }
end
rule "Set city for each Address_16"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_16")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_16"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_16")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 16 + i));
    }
end
rule "Set account type for each Account_16"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_16")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_16"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_16")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 16 + i));
    }
end
rule "Set receiving account for each Transaction_16"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_16")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_16"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_16")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 16 + i));
    }
end
rule "Set owner for each Credit Card_16"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_16")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_15"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_15")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 15 + i));
    }
end
rule "Set address for each Customer_15"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_15")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_15"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_15")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 15 + i));
    }
end
rule "Set city for each Address_15"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_15")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_15"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_15")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 15 + i));
    }
end
rule "Set account type for each Account_15"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_15")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_15"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_15")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 15 + i));
    }
end
rule "Set receiving account for each Transaction_15"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_15")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_15"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_15")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 15 + i));
    }
end
rule "Set owner for each Credit Card_15"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_15")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_14"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_14")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 14 + i));
    }
end
rule "Set address for each Customer_14"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_14")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_14"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_14")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 14 + i));
    }
end
rule "Set city for each Address_14"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_14")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_14"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_14")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 14 + i));
    }
end
rule "Set account type for each Account_14"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_14")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_14"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_14")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 14 + i));
    }
end
rule "Set receiving account for each Transaction_14"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_14")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_14"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_14")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 14 + i));
    }
end
rule "Set owner for each Credit Card_14"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_14")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_13"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_13")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 13 + i));
    }
end
rule "Set address for each Customer_13"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_13")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_13"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_13")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 13 + i));
    }
end
rule "Set city for each Address_13"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_13")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_13"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_13")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 13 + i));
    }
end
rule "Set account type for each Account_13"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_13")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_13"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_13")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 13 + i));
    }
end
rule "Set receiving account for each Transaction_13"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_13")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_13"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_13")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 13 + i));
    }
end
rule "Set owner for each Credit Card_13"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_13")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_12"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_12")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 12 + i));
    }
end
rule "Set address for each Customer_12"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_12")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_12"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_12")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 12 + i));
    }
end
rule "Set city for each Address_12"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_12")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_12"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_12")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 12 + i));
    }
end
rule "Set account type for each Account_12"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_12")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_12"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_12")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 12 + i));
    }
end
rule "Set receiving account for each Transaction_12"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_12")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_12"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_12")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 12 + i));
    }
end
rule "Set owner for each Credit Card_12"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_12")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_11"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_11")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 11 + i));
    }
end
rule "Set address for each Customer_11"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_11")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_11"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_11")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 11 + i));
    }
end
rule "Set city for each Address_11"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_11")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_11"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_11")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 11 + i));
    }
end
rule "Set account type for each Account_11"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_11")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_11"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_11")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 11 + i));
    }
end
rule "Set receiving account for each Transaction_11"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_11")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_11"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_11")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 11 + i));
    }
end
rule "Set owner for each Credit Card_11"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_11")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_10"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_10")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 10 + i));
    }
end
rule "Set address for each Customer_10"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_10")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_10"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_10")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 10 + i));
    }
end
rule "Set city for each Address_10"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_10")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_10"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_10")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 10 + i));
    }
end
rule "Set account type for each Account_10"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_10")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_10"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_10")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 10 + i));
    }
end
rule "Set receiving account for each Transaction_10"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_10")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_10"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_10")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 10 + i));
    }
end
rule "Set owner for each Credit Card_10"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_10")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_9"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_9")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 9 + i));
    }
end
rule "Set address for each Customer_9"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_9")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_9"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_9")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 9 + i));
    }
end
rule "Set city for each Address_9"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_9")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_9"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_9")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 9 + i));
    }
end
rule "Set account type for each Account_9"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_9")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_9"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_9")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 9 + i));
    }
end
rule "Set receiving account for each Transaction_9"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_9")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_9"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_9")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 9 + i));
    }
end
rule "Set owner for each Credit Card_9"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_9")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_8"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_8")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 8 + i));
    }
end
rule "Set address for each Customer_8"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_8")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_8"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_8")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 8 + i));
    }
end
rule "Set city for each Address_8"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_8")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_8"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_8")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 8 + i));
    }
end
rule "Set account type for each Account_8"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_8")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_8"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_8")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 8 + i));
    }
end
rule "Set receiving account for each Transaction_8"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_8")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_8"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_8")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 8 + i));
    }
end
rule "Set owner for each Credit Card_8"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_8")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_7"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_7")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 7 + i));
    }
end
rule "Set address for each Customer_7"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_7")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_7"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_7")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 7 + i));
    }
end
rule "Set city for each Address_7"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_7")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_7"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_7")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 7 + i));
    }
end
rule "Set account type for each Account_7"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_7")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_7"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_7")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 7 + i));
    }
end
rule "Set receiving account for each Transaction_7"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_7")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_7"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_7")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 7 + i));
    }
end
rule "Set owner for each Credit Card_7"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_7")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_6"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_6")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 6 + i));
    }
end
rule "Set address for each Customer_6"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_6")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_6"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_6")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 6 + i));
    }
end
rule "Set city for each Address_6"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_6")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_6"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_6")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 6 + i));
    }
end
rule "Set account type for each Account_6"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_6")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_6"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_6")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 6 + i));
    }
end
rule "Set receiving account for each Transaction_6"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_6")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_6"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_6")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 6 + i));
    }
end
rule "Set owner for each Credit Card_6"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_6")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_5"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_5")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 5 + i));
    }
end
rule "Set address for each Customer_5"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_5")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_5"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_5")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 5 + i));
    }
end
rule "Set city for each Address_5"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_5")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_5"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_5")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 5 + i));
    }
end
rule "Set account type for each Account_5"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_5")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_5"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_5")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 5 + i));
    }
end
rule "Set receiving account for each Transaction_5"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_5")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_5"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_5")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 5 + i));
    }
end
rule "Set owner for each Credit Card_5"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_5")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_4"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_4")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 4 + i));
    }
end
rule "Set address for each Customer_4"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_4")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_4"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_4")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 4 + i));
    }
end
rule "Set city for each Address_4"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_4")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_4"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_4")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 4 + i));
    }
end
rule "Set account type for each Account_4"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_4")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_4"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_4")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 4 + i));
    }
end
rule "Set receiving account for each Transaction_4"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_4")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_4"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_4")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 4 + i));
    }
end
rule "Set owner for each Credit Card_4"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_4")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_3"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_3")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 3 + i));
    }
end
rule "Set address for each Customer_3"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_3")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_3"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_3")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 3 + i));
    }
end
rule "Set city for each Address_3"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_3")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_3"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_3")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 3 + i));
    }
end
rule "Set account type for each Account_3"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_3")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_3"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_3")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 3 + i));
    }
end
rule "Set receiving account for each Transaction_3"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_3")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_3"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_3")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 3 + i));
    }
end
rule "Set owner for each Credit Card_3"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_3")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_2"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_2")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 2 + i));
    }
end
rule "Set address for each Customer_2"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_2")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_2"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_2")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 2 + i));
    }
end
rule "Set city for each Address_2"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_2")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_2"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_2")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 2 + i));
    }
end
rule "Set account type for each Account_2"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_2")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_2"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_2")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 2 + i));
    }
end
rule "Set receiving account for each Transaction_2"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_2")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_2"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_2")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 2 + i));
    }
end
rule "Set owner for each Credit Card_2"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_2")
then
    $card.owner = new Customer();
    update($card);
end

rule "Insert logical facts for each Customer_1"
no-loop
salience 10
when
    Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_1")
then
    insertLogical(new LogicalFact("someLogicalFactCustomer"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCustomer" + i + 1 + i));
    }
end
rule "Set address for each Customer_1"
when
    $cust : Customer(address == null, uuid == "insertLogicalFactsForEachCustomer_1")
then
    $cust.address = new Address();
    update($cust);
end
rule "Insert logical facts for each Address_1"
no-loop
salience 10
when
    Address(city == null, uuid == "insertLogicalFactsForEachAddress_1")
then
    insertLogical(new LogicalFact("someLogicalFactAddress"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAddress" + i + 1 + i));
    }
end
rule "Set city for each Address_1"
when
    $addr : Address(city == null, uuid == "insertLogicalFactsForEachAddress_1")
then
    $addr.city = "BrnoCity";
    update($addr);
end
rule "Insert logical facts for each Account_1"
no-loop
salience 10
when
    Account(type == null, uuid == "insertLogicalFactsForEachAccount_1")
then
    insertLogical(new LogicalFact("someLogicalFactAccount"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactAccount" + i + 1 + i));
    }
end
rule "Set account type for each Account_1"
when
    $acc : Account(type == null, uuid == "insertLogicalFactsForEachAccount_1")
then
    $acc.type = Account.AccountType.SAVINGS;
    update($acc);
end
rule "Insert logical facts for each Transaction_1"
no-loop
salience 10
when
    Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_1")
then
    insertLogical(new LogicalFact("someLogicalFactTransaction"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactTransaction" + i + 1 + i));
    }
end
rule "Set receiving account for each Transaction_1"
when
    $trans : Transaction(accountTo == null, uuid == "insertLogicalFactsForEachTransaction_1")
then
    $trans.accountTo = new Account();
    update($trans);
end
rule "Insert logical facts for each Credit Card_1"
no-loop
salience 10
when
    CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_1")
then
    insertLogical(new LogicalFact("someLogicalFactCreditCard"));
    for(int i = 0; i < 300; i++) {
        insertLogical(new LogicalFact("someLogicalFactCreditCard" + i + 1 + i));
    }
end
rule "Set owner for each Credit Card_1"
when
    $card : CreditCard(owner == null, uuid == "insertLogicalFactsForEachCreditCard_1")
then
    $card.owner = new Customer();
    update($card);
end


