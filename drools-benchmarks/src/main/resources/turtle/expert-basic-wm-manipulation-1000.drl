package org.drools.benchmarks.bre;
import java.util.Date;
import org.drools.benchmarks.domain.*;
declare SimpleFact
    desc: String @key
end
declare LogicalFact
    desc : String @key
end
dialect "mvel"
// rules are using insert, insertLogical, retract and update

rule "Insert all accounts for each Customer_167"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_167")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_167"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_167")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 167));
    }
end
rule "Retract all non valid Accounts_167"
when
    $acc : Account(owner == null, uuid == "WmManipulation_167")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_167"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_167")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_167"))
    }
end
rule "Update all Credit Cards_167"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_167")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_167"
when
    $fact : SimpleFact(desc == "WmManipulation_167")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_166"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_166")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_166"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_166")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 166));
    }
end
rule "Retract all non valid Accounts_166"
when
    $acc : Account(owner == null, uuid == "WmManipulation_166")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_166"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_166")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_166"))
    }
end
rule "Update all Credit Cards_166"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_166")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_166"
when
    $fact : SimpleFact(desc == "WmManipulation_166")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_165"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_165")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_165"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_165")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 165));
    }
end
rule "Retract all non valid Accounts_165"
when
    $acc : Account(owner == null, uuid == "WmManipulation_165")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_165"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_165")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_165"))
    }
end
rule "Update all Credit Cards_165"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_165")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_165"
when
    $fact : SimpleFact(desc == "WmManipulation_165")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_164"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_164")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_164"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_164")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 164));
    }
end
rule "Retract all non valid Accounts_164"
when
    $acc : Account(owner == null, uuid == "WmManipulation_164")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_164"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_164")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_164"))
    }
end
rule "Update all Credit Cards_164"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_164")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_164"
when
    $fact : SimpleFact(desc == "WmManipulation_164")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_163"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_163")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_163"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_163")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 163));
    }
end
rule "Retract all non valid Accounts_163"
when
    $acc : Account(owner == null, uuid == "WmManipulation_163")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_163"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_163")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_163"))
    }
end
rule "Update all Credit Cards_163"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_163")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_163"
when
    $fact : SimpleFact(desc == "WmManipulation_163")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_162"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_162")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_162"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_162")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 162));
    }
end
rule "Retract all non valid Accounts_162"
when
    $acc : Account(owner == null, uuid == "WmManipulation_162")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_162"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_162")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_162"))
    }
end
rule "Update all Credit Cards_162"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_162")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_162"
when
    $fact : SimpleFact(desc == "WmManipulation_162")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_161"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_161")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_161"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_161")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 161));
    }
end
rule "Retract all non valid Accounts_161"
when
    $acc : Account(owner == null, uuid == "WmManipulation_161")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_161"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_161")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_161"))
    }
end
rule "Update all Credit Cards_161"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_161")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_161"
when
    $fact : SimpleFact(desc == "WmManipulation_161")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_160"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_160")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_160"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_160")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 160));
    }
end
rule "Retract all non valid Accounts_160"
when
    $acc : Account(owner == null, uuid == "WmManipulation_160")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_160"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_160")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_160"))
    }
end
rule "Update all Credit Cards_160"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_160")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_160"
when
    $fact : SimpleFact(desc == "WmManipulation_160")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_159"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_159")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_159"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_159")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 159));
    }
end
rule "Retract all non valid Accounts_159"
when
    $acc : Account(owner == null, uuid == "WmManipulation_159")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_159"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_159")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_159"))
    }
end
rule "Update all Credit Cards_159"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_159")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_159"
when
    $fact : SimpleFact(desc == "WmManipulation_159")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_158"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_158")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_158"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_158")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 158));
    }
end
rule "Retract all non valid Accounts_158"
when
    $acc : Account(owner == null, uuid == "WmManipulation_158")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_158"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_158")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_158"))
    }
end
rule "Update all Credit Cards_158"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_158")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_158"
when
    $fact : SimpleFact(desc == "WmManipulation_158")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_157"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_157")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_157"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_157")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 157));
    }
end
rule "Retract all non valid Accounts_157"
when
    $acc : Account(owner == null, uuid == "WmManipulation_157")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_157"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_157")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_157"))
    }
end
rule "Update all Credit Cards_157"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_157")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_157"
when
    $fact : SimpleFact(desc == "WmManipulation_157")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_156"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_156")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_156"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_156")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 156));
    }
end
rule "Retract all non valid Accounts_156"
when
    $acc : Account(owner == null, uuid == "WmManipulation_156")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_156"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_156")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_156"))
    }
end
rule "Update all Credit Cards_156"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_156")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_156"
when
    $fact : SimpleFact(desc == "WmManipulation_156")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_155"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_155")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_155"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_155")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 155));
    }
end
rule "Retract all non valid Accounts_155"
when
    $acc : Account(owner == null, uuid == "WmManipulation_155")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_155"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_155")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_155"))
    }
end
rule "Update all Credit Cards_155"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_155")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_155"
when
    $fact : SimpleFact(desc == "WmManipulation_155")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_154"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_154")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_154"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_154")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 154));
    }
end
rule "Retract all non valid Accounts_154"
when
    $acc : Account(owner == null, uuid == "WmManipulation_154")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_154"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_154")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_154"))
    }
end
rule "Update all Credit Cards_154"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_154")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_154"
when
    $fact : SimpleFact(desc == "WmManipulation_154")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_153"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_153")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_153"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_153")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 153));
    }
end
rule "Retract all non valid Accounts_153"
when
    $acc : Account(owner == null, uuid == "WmManipulation_153")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_153"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_153")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_153"))
    }
end
rule "Update all Credit Cards_153"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_153")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_153"
when
    $fact : SimpleFact(desc == "WmManipulation_153")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_152"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_152")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_152"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_152")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 152));
    }
end
rule "Retract all non valid Accounts_152"
when
    $acc : Account(owner == null, uuid == "WmManipulation_152")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_152"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_152")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_152"))
    }
end
rule "Update all Credit Cards_152"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_152")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_152"
when
    $fact : SimpleFact(desc == "WmManipulation_152")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_151"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_151")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_151"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_151")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 151));
    }
end
rule "Retract all non valid Accounts_151"
when
    $acc : Account(owner == null, uuid == "WmManipulation_151")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_151"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_151")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_151"))
    }
end
rule "Update all Credit Cards_151"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_151")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_151"
when
    $fact : SimpleFact(desc == "WmManipulation_151")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_150"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_150")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_150"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_150")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 150));
    }
end
rule "Retract all non valid Accounts_150"
when
    $acc : Account(owner == null, uuid == "WmManipulation_150")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_150"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_150")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_150"))
    }
end
rule "Update all Credit Cards_150"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_150")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_150"
when
    $fact : SimpleFact(desc == "WmManipulation_150")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_149"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_149")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_149"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_149")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 149));
    }
end
rule "Retract all non valid Accounts_149"
when
    $acc : Account(owner == null, uuid == "WmManipulation_149")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_149"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_149")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_149"))
    }
end
rule "Update all Credit Cards_149"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_149")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_149"
when
    $fact : SimpleFact(desc == "WmManipulation_149")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_148"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_148")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_148"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_148")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 148));
    }
end
rule "Retract all non valid Accounts_148"
when
    $acc : Account(owner == null, uuid == "WmManipulation_148")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_148"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_148")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_148"))
    }
end
rule "Update all Credit Cards_148"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_148")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_148"
when
    $fact : SimpleFact(desc == "WmManipulation_148")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_147"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_147")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_147"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_147")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 147));
    }
end
rule "Retract all non valid Accounts_147"
when
    $acc : Account(owner == null, uuid == "WmManipulation_147")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_147"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_147")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_147"))
    }
end
rule "Update all Credit Cards_147"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_147")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_147"
when
    $fact : SimpleFact(desc == "WmManipulation_147")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_146"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_146")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_146"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_146")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 146));
    }
end
rule "Retract all non valid Accounts_146"
when
    $acc : Account(owner == null, uuid == "WmManipulation_146")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_146"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_146")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_146"))
    }
end
rule "Update all Credit Cards_146"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_146")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_146"
when
    $fact : SimpleFact(desc == "WmManipulation_146")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_145"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_145")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_145"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_145")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 145));
    }
end
rule "Retract all non valid Accounts_145"
when
    $acc : Account(owner == null, uuid == "WmManipulation_145")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_145"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_145")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_145"))
    }
end
rule "Update all Credit Cards_145"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_145")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_145"
when
    $fact : SimpleFact(desc == "WmManipulation_145")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_144"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_144")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_144"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_144")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 144));
    }
end
rule "Retract all non valid Accounts_144"
when
    $acc : Account(owner == null, uuid == "WmManipulation_144")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_144"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_144")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_144"))
    }
end
rule "Update all Credit Cards_144"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_144")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_144"
when
    $fact : SimpleFact(desc == "WmManipulation_144")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_143"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_143")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_143"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_143")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 143));
    }
end
rule "Retract all non valid Accounts_143"
when
    $acc : Account(owner == null, uuid == "WmManipulation_143")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_143"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_143")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_143"))
    }
end
rule "Update all Credit Cards_143"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_143")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_143"
when
    $fact : SimpleFact(desc == "WmManipulation_143")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_142"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_142")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_142"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_142")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 142));
    }
end
rule "Retract all non valid Accounts_142"
when
    $acc : Account(owner == null, uuid == "WmManipulation_142")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_142"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_142")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_142"))
    }
end
rule "Update all Credit Cards_142"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_142")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_142"
when
    $fact : SimpleFact(desc == "WmManipulation_142")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_141"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_141")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_141"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_141")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 141));
    }
end
rule "Retract all non valid Accounts_141"
when
    $acc : Account(owner == null, uuid == "WmManipulation_141")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_141"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_141")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_141"))
    }
end
rule "Update all Credit Cards_141"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_141")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_141"
when
    $fact : SimpleFact(desc == "WmManipulation_141")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_140"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_140")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_140"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_140")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 140));
    }
end
rule "Retract all non valid Accounts_140"
when
    $acc : Account(owner == null, uuid == "WmManipulation_140")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_140"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_140")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_140"))
    }
end
rule "Update all Credit Cards_140"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_140")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_140"
when
    $fact : SimpleFact(desc == "WmManipulation_140")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_139"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_139")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_139"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_139")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 139));
    }
end
rule "Retract all non valid Accounts_139"
when
    $acc : Account(owner == null, uuid == "WmManipulation_139")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_139"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_139")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_139"))
    }
end
rule "Update all Credit Cards_139"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_139")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_139"
when
    $fact : SimpleFact(desc == "WmManipulation_139")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_138"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_138")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_138"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_138")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 138));
    }
end
rule "Retract all non valid Accounts_138"
when
    $acc : Account(owner == null, uuid == "WmManipulation_138")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_138"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_138")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_138"))
    }
end
rule "Update all Credit Cards_138"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_138")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_138"
when
    $fact : SimpleFact(desc == "WmManipulation_138")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_137"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_137")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_137"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_137")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 137));
    }
end
rule "Retract all non valid Accounts_137"
when
    $acc : Account(owner == null, uuid == "WmManipulation_137")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_137"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_137")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_137"))
    }
end
rule "Update all Credit Cards_137"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_137")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_137"
when
    $fact : SimpleFact(desc == "WmManipulation_137")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_136"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_136")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_136"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_136")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 136));
    }
end
rule "Retract all non valid Accounts_136"
when
    $acc : Account(owner == null, uuid == "WmManipulation_136")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_136"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_136")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_136"))
    }
end
rule "Update all Credit Cards_136"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_136")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_136"
when
    $fact : SimpleFact(desc == "WmManipulation_136")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_135"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_135")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_135"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_135")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 135));
    }
end
rule "Retract all non valid Accounts_135"
when
    $acc : Account(owner == null, uuid == "WmManipulation_135")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_135"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_135")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_135"))
    }
end
rule "Update all Credit Cards_135"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_135")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_135"
when
    $fact : SimpleFact(desc == "WmManipulation_135")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_134"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_134")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_134"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_134")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 134));
    }
end
rule "Retract all non valid Accounts_134"
when
    $acc : Account(owner == null, uuid == "WmManipulation_134")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_134"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_134")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_134"))
    }
end
rule "Update all Credit Cards_134"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_134")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_134"
when
    $fact : SimpleFact(desc == "WmManipulation_134")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_133"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_133")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_133"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_133")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 133));
    }
end
rule "Retract all non valid Accounts_133"
when
    $acc : Account(owner == null, uuid == "WmManipulation_133")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_133"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_133")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_133"))
    }
end
rule "Update all Credit Cards_133"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_133")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_133"
when
    $fact : SimpleFact(desc == "WmManipulation_133")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_132"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_132")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_132"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_132")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 132));
    }
end
rule "Retract all non valid Accounts_132"
when
    $acc : Account(owner == null, uuid == "WmManipulation_132")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_132"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_132")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_132"))
    }
end
rule "Update all Credit Cards_132"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_132")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_132"
when
    $fact : SimpleFact(desc == "WmManipulation_132")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_131"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_131")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_131"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_131")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 131));
    }
end
rule "Retract all non valid Accounts_131"
when
    $acc : Account(owner == null, uuid == "WmManipulation_131")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_131"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_131")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_131"))
    }
end
rule "Update all Credit Cards_131"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_131")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_131"
when
    $fact : SimpleFact(desc == "WmManipulation_131")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_130"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_130")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_130"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_130")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 130));
    }
end
rule "Retract all non valid Accounts_130"
when
    $acc : Account(owner == null, uuid == "WmManipulation_130")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_130"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_130")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_130"))
    }
end
rule "Update all Credit Cards_130"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_130")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_130"
when
    $fact : SimpleFact(desc == "WmManipulation_130")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_129"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_129")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_129"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_129")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 129));
    }
end
rule "Retract all non valid Accounts_129"
when
    $acc : Account(owner == null, uuid == "WmManipulation_129")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_129"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_129")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_129"))
    }
end
rule "Update all Credit Cards_129"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_129")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_129"
when
    $fact : SimpleFact(desc == "WmManipulation_129")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_128"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_128")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_128"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_128")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 128));
    }
end
rule "Retract all non valid Accounts_128"
when
    $acc : Account(owner == null, uuid == "WmManipulation_128")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_128"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_128")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_128"))
    }
end
rule "Update all Credit Cards_128"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_128")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_128"
when
    $fact : SimpleFact(desc == "WmManipulation_128")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_127"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_127")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_127"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_127")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 127));
    }
end
rule "Retract all non valid Accounts_127"
when
    $acc : Account(owner == null, uuid == "WmManipulation_127")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_127"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_127")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_127"))
    }
end
rule "Update all Credit Cards_127"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_127")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_127"
when
    $fact : SimpleFact(desc == "WmManipulation_127")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_126"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_126")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_126"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_126")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 126));
    }
end
rule "Retract all non valid Accounts_126"
when
    $acc : Account(owner == null, uuid == "WmManipulation_126")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_126"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_126")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_126"))
    }
end
rule "Update all Credit Cards_126"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_126")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_126"
when
    $fact : SimpleFact(desc == "WmManipulation_126")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_125"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_125")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_125"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_125")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 125));
    }
end
rule "Retract all non valid Accounts_125"
when
    $acc : Account(owner == null, uuid == "WmManipulation_125")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_125"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_125")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_125"))
    }
end
rule "Update all Credit Cards_125"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_125")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_125"
when
    $fact : SimpleFact(desc == "WmManipulation_125")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_124"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_124")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_124"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_124")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 124));
    }
end
rule "Retract all non valid Accounts_124"
when
    $acc : Account(owner == null, uuid == "WmManipulation_124")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_124"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_124")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_124"))
    }
end
rule "Update all Credit Cards_124"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_124")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_124"
when
    $fact : SimpleFact(desc == "WmManipulation_124")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_123"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_123")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_123"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_123")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 123));
    }
end
rule "Retract all non valid Accounts_123"
when
    $acc : Account(owner == null, uuid == "WmManipulation_123")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_123"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_123")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_123"))
    }
end
rule "Update all Credit Cards_123"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_123")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_123"
when
    $fact : SimpleFact(desc == "WmManipulation_123")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_122"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_122")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_122"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_122")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 122));
    }
end
rule "Retract all non valid Accounts_122"
when
    $acc : Account(owner == null, uuid == "WmManipulation_122")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_122"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_122")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_122"))
    }
end
rule "Update all Credit Cards_122"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_122")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_122"
when
    $fact : SimpleFact(desc == "WmManipulation_122")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_121"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_121")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_121"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_121")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 121));
    }
end
rule "Retract all non valid Accounts_121"
when
    $acc : Account(owner == null, uuid == "WmManipulation_121")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_121"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_121")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_121"))
    }
end
rule "Update all Credit Cards_121"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_121")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_121"
when
    $fact : SimpleFact(desc == "WmManipulation_121")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_120"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_120")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_120"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_120")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 120));
    }
end
rule "Retract all non valid Accounts_120"
when
    $acc : Account(owner == null, uuid == "WmManipulation_120")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_120"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_120")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_120"))
    }
end
rule "Update all Credit Cards_120"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_120")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_120"
when
    $fact : SimpleFact(desc == "WmManipulation_120")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_119"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_119")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_119"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_119")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 119));
    }
end
rule "Retract all non valid Accounts_119"
when
    $acc : Account(owner == null, uuid == "WmManipulation_119")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_119"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_119")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_119"))
    }
end
rule "Update all Credit Cards_119"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_119")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_119"
when
    $fact : SimpleFact(desc == "WmManipulation_119")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_118"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_118")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_118"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_118")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 118));
    }
end
rule "Retract all non valid Accounts_118"
when
    $acc : Account(owner == null, uuid == "WmManipulation_118")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_118"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_118")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_118"))
    }
end
rule "Update all Credit Cards_118"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_118")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_118"
when
    $fact : SimpleFact(desc == "WmManipulation_118")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_117"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_117")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_117"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_117")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 117));
    }
end
rule "Retract all non valid Accounts_117"
when
    $acc : Account(owner == null, uuid == "WmManipulation_117")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_117"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_117")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_117"))
    }
end
rule "Update all Credit Cards_117"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_117")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_117"
when
    $fact : SimpleFact(desc == "WmManipulation_117")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_116"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_116")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_116"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_116")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 116));
    }
end
rule "Retract all non valid Accounts_116"
when
    $acc : Account(owner == null, uuid == "WmManipulation_116")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_116"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_116")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_116"))
    }
end
rule "Update all Credit Cards_116"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_116")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_116"
when
    $fact : SimpleFact(desc == "WmManipulation_116")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_115"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_115")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_115"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_115")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 115));
    }
end
rule "Retract all non valid Accounts_115"
when
    $acc : Account(owner == null, uuid == "WmManipulation_115")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_115"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_115")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_115"))
    }
end
rule "Update all Credit Cards_115"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_115")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_115"
when
    $fact : SimpleFact(desc == "WmManipulation_115")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_114"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_114")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_114"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_114")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 114));
    }
end
rule "Retract all non valid Accounts_114"
when
    $acc : Account(owner == null, uuid == "WmManipulation_114")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_114"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_114")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_114"))
    }
end
rule "Update all Credit Cards_114"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_114")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_114"
when
    $fact : SimpleFact(desc == "WmManipulation_114")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_113"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_113")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_113"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_113")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 113));
    }
end
rule "Retract all non valid Accounts_113"
when
    $acc : Account(owner == null, uuid == "WmManipulation_113")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_113"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_113")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_113"))
    }
end
rule "Update all Credit Cards_113"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_113")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_113"
when
    $fact : SimpleFact(desc == "WmManipulation_113")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_112"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_112")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_112"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_112")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 112));
    }
end
rule "Retract all non valid Accounts_112"
when
    $acc : Account(owner == null, uuid == "WmManipulation_112")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_112"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_112")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_112"))
    }
end
rule "Update all Credit Cards_112"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_112")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_112"
when
    $fact : SimpleFact(desc == "WmManipulation_112")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_111"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_111")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_111"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_111")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 111));
    }
end
rule "Retract all non valid Accounts_111"
when
    $acc : Account(owner == null, uuid == "WmManipulation_111")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_111"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_111")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_111"))
    }
end
rule "Update all Credit Cards_111"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_111")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_111"
when
    $fact : SimpleFact(desc == "WmManipulation_111")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_110"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_110")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_110"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_110")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 110));
    }
end
rule "Retract all non valid Accounts_110"
when
    $acc : Account(owner == null, uuid == "WmManipulation_110")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_110"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_110")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_110"))
    }
end
rule "Update all Credit Cards_110"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_110")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_110"
when
    $fact : SimpleFact(desc == "WmManipulation_110")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_109"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_109")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_109"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_109")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 109));
    }
end
rule "Retract all non valid Accounts_109"
when
    $acc : Account(owner == null, uuid == "WmManipulation_109")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_109"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_109")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_109"))
    }
end
rule "Update all Credit Cards_109"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_109")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_109"
when
    $fact : SimpleFact(desc == "WmManipulation_109")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_108"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_108")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_108"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_108")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 108));
    }
end
rule "Retract all non valid Accounts_108"
when
    $acc : Account(owner == null, uuid == "WmManipulation_108")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_108"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_108")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_108"))
    }
end
rule "Update all Credit Cards_108"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_108")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_108"
when
    $fact : SimpleFact(desc == "WmManipulation_108")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_107"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_107")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_107"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_107")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 107));
    }
end
rule "Retract all non valid Accounts_107"
when
    $acc : Account(owner == null, uuid == "WmManipulation_107")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_107"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_107")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_107"))
    }
end
rule "Update all Credit Cards_107"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_107")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_107"
when
    $fact : SimpleFact(desc == "WmManipulation_107")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_106"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_106")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_106"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_106")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 106));
    }
end
rule "Retract all non valid Accounts_106"
when
    $acc : Account(owner == null, uuid == "WmManipulation_106")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_106"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_106")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_106"))
    }
end
rule "Update all Credit Cards_106"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_106")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_106"
when
    $fact : SimpleFact(desc == "WmManipulation_106")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_105"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_105")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_105"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_105")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 105));
    }
end
rule "Retract all non valid Accounts_105"
when
    $acc : Account(owner == null, uuid == "WmManipulation_105")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_105"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_105")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_105"))
    }
end
rule "Update all Credit Cards_105"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_105")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_105"
when
    $fact : SimpleFact(desc == "WmManipulation_105")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_104"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_104")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_104"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_104")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 104));
    }
end
rule "Retract all non valid Accounts_104"
when
    $acc : Account(owner == null, uuid == "WmManipulation_104")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_104"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_104")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_104"))
    }
end
rule "Update all Credit Cards_104"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_104")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_104"
when
    $fact : SimpleFact(desc == "WmManipulation_104")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_103"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_103")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_103"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_103")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 103));
    }
end
rule "Retract all non valid Accounts_103"
when
    $acc : Account(owner == null, uuid == "WmManipulation_103")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_103"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_103")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_103"))
    }
end
rule "Update all Credit Cards_103"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_103")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_103"
when
    $fact : SimpleFact(desc == "WmManipulation_103")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_102"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_102")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_102"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_102")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 102));
    }
end
rule "Retract all non valid Accounts_102"
when
    $acc : Account(owner == null, uuid == "WmManipulation_102")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_102"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_102")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_102"))
    }
end
rule "Update all Credit Cards_102"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_102")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_102"
when
    $fact : SimpleFact(desc == "WmManipulation_102")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_101"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_101")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_101"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_101")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 101));
    }
end
rule "Retract all non valid Accounts_101"
when
    $acc : Account(owner == null, uuid == "WmManipulation_101")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_101"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_101")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_101"))
    }
end
rule "Update all Credit Cards_101"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_101")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_101"
when
    $fact : SimpleFact(desc == "WmManipulation_101")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_100"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_100")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_100"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_100")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 100));
    }
end
rule "Retract all non valid Accounts_100"
when
    $acc : Account(owner == null, uuid == "WmManipulation_100")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_100"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_100")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_100"))
    }
end
rule "Update all Credit Cards_100"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_100")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_100"
when
    $fact : SimpleFact(desc == "WmManipulation_100")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_99"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_99")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_99"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_99")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 99));
    }
end
rule "Retract all non valid Accounts_99"
when
    $acc : Account(owner == null, uuid == "WmManipulation_99")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_99"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_99")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_99"))
    }
end
rule "Update all Credit Cards_99"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_99")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_99"
when
    $fact : SimpleFact(desc == "WmManipulation_99")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_98"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_98")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_98"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_98")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 98));
    }
end
rule "Retract all non valid Accounts_98"
when
    $acc : Account(owner == null, uuid == "WmManipulation_98")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_98"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_98")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_98"))
    }
end
rule "Update all Credit Cards_98"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_98")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_98"
when
    $fact : SimpleFact(desc == "WmManipulation_98")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_97"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_97")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_97"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_97")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 97));
    }
end
rule "Retract all non valid Accounts_97"
when
    $acc : Account(owner == null, uuid == "WmManipulation_97")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_97"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_97")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_97"))
    }
end
rule "Update all Credit Cards_97"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_97")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_97"
when
    $fact : SimpleFact(desc == "WmManipulation_97")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_96"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_96")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_96"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_96")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 96));
    }
end
rule "Retract all non valid Accounts_96"
when
    $acc : Account(owner == null, uuid == "WmManipulation_96")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_96"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_96")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_96"))
    }
end
rule "Update all Credit Cards_96"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_96")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_96"
when
    $fact : SimpleFact(desc == "WmManipulation_96")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_95"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_95")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_95"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_95")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 95));
    }
end
rule "Retract all non valid Accounts_95"
when
    $acc : Account(owner == null, uuid == "WmManipulation_95")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_95"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_95")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_95"))
    }
end
rule "Update all Credit Cards_95"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_95")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_95"
when
    $fact : SimpleFact(desc == "WmManipulation_95")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_94"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_94")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_94"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_94")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 94));
    }
end
rule "Retract all non valid Accounts_94"
when
    $acc : Account(owner == null, uuid == "WmManipulation_94")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_94"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_94")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_94"))
    }
end
rule "Update all Credit Cards_94"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_94")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_94"
when
    $fact : SimpleFact(desc == "WmManipulation_94")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_93"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_93")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_93"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_93")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 93));
    }
end
rule "Retract all non valid Accounts_93"
when
    $acc : Account(owner == null, uuid == "WmManipulation_93")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_93"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_93")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_93"))
    }
end
rule "Update all Credit Cards_93"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_93")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_93"
when
    $fact : SimpleFact(desc == "WmManipulation_93")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_92"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_92")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_92"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_92")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 92));
    }
end
rule "Retract all non valid Accounts_92"
when
    $acc : Account(owner == null, uuid == "WmManipulation_92")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_92"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_92")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_92"))
    }
end
rule "Update all Credit Cards_92"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_92")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_92"
when
    $fact : SimpleFact(desc == "WmManipulation_92")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_91"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_91")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_91"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_91")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 91));
    }
end
rule "Retract all non valid Accounts_91"
when
    $acc : Account(owner == null, uuid == "WmManipulation_91")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_91"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_91")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_91"))
    }
end
rule "Update all Credit Cards_91"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_91")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_91"
when
    $fact : SimpleFact(desc == "WmManipulation_91")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_90"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_90")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_90"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_90")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 90));
    }
end
rule "Retract all non valid Accounts_90"
when
    $acc : Account(owner == null, uuid == "WmManipulation_90")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_90"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_90")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_90"))
    }
end
rule "Update all Credit Cards_90"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_90")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_90"
when
    $fact : SimpleFact(desc == "WmManipulation_90")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_89"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_89")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_89"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_89")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 89));
    }
end
rule "Retract all non valid Accounts_89"
when
    $acc : Account(owner == null, uuid == "WmManipulation_89")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_89"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_89")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_89"))
    }
end
rule "Update all Credit Cards_89"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_89")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_89"
when
    $fact : SimpleFact(desc == "WmManipulation_89")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_88"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_88")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_88"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_88")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 88));
    }
end
rule "Retract all non valid Accounts_88"
when
    $acc : Account(owner == null, uuid == "WmManipulation_88")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_88"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_88")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_88"))
    }
end
rule "Update all Credit Cards_88"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_88")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_88"
when
    $fact : SimpleFact(desc == "WmManipulation_88")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_87"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_87")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_87"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_87")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 87));
    }
end
rule "Retract all non valid Accounts_87"
when
    $acc : Account(owner == null, uuid == "WmManipulation_87")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_87"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_87")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_87"))
    }
end
rule "Update all Credit Cards_87"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_87")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_87"
when
    $fact : SimpleFact(desc == "WmManipulation_87")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_86"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_86")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_86"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_86")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 86));
    }
end
rule "Retract all non valid Accounts_86"
when
    $acc : Account(owner == null, uuid == "WmManipulation_86")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_86"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_86")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_86"))
    }
end
rule "Update all Credit Cards_86"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_86")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_86"
when
    $fact : SimpleFact(desc == "WmManipulation_86")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_85"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_85")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_85"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_85")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 85));
    }
end
rule "Retract all non valid Accounts_85"
when
    $acc : Account(owner == null, uuid == "WmManipulation_85")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_85"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_85")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_85"))
    }
end
rule "Update all Credit Cards_85"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_85")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_85"
when
    $fact : SimpleFact(desc == "WmManipulation_85")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_84"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_84")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_84"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_84")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 84));
    }
end
rule "Retract all non valid Accounts_84"
when
    $acc : Account(owner == null, uuid == "WmManipulation_84")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_84"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_84")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_84"))
    }
end
rule "Update all Credit Cards_84"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_84")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_84"
when
    $fact : SimpleFact(desc == "WmManipulation_84")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_83"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_83")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_83"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_83")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 83));
    }
end
rule "Retract all non valid Accounts_83"
when
    $acc : Account(owner == null, uuid == "WmManipulation_83")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_83"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_83")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_83"))
    }
end
rule "Update all Credit Cards_83"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_83")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_83"
when
    $fact : SimpleFact(desc == "WmManipulation_83")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_82"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_82")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_82"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_82")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 82));
    }
end
rule "Retract all non valid Accounts_82"
when
    $acc : Account(owner == null, uuid == "WmManipulation_82")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_82"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_82")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_82"))
    }
end
rule "Update all Credit Cards_82"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_82")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_82"
when
    $fact : SimpleFact(desc == "WmManipulation_82")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_81"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_81")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_81"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_81")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 81));
    }
end
rule "Retract all non valid Accounts_81"
when
    $acc : Account(owner == null, uuid == "WmManipulation_81")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_81"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_81")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_81"))
    }
end
rule "Update all Credit Cards_81"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_81")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_81"
when
    $fact : SimpleFact(desc == "WmManipulation_81")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_80"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_80")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_80"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_80")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 80));
    }
end
rule "Retract all non valid Accounts_80"
when
    $acc : Account(owner == null, uuid == "WmManipulation_80")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_80"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_80")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_80"))
    }
end
rule "Update all Credit Cards_80"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_80")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_80"
when
    $fact : SimpleFact(desc == "WmManipulation_80")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_79"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_79")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_79"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_79")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 79));
    }
end
rule "Retract all non valid Accounts_79"
when
    $acc : Account(owner == null, uuid == "WmManipulation_79")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_79"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_79")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_79"))
    }
end
rule "Update all Credit Cards_79"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_79")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_79"
when
    $fact : SimpleFact(desc == "WmManipulation_79")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_78"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_78")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_78"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_78")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 78));
    }
end
rule "Retract all non valid Accounts_78"
when
    $acc : Account(owner == null, uuid == "WmManipulation_78")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_78"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_78")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_78"))
    }
end
rule "Update all Credit Cards_78"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_78")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_78"
when
    $fact : SimpleFact(desc == "WmManipulation_78")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_77"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_77")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_77"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_77")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 77));
    }
end
rule "Retract all non valid Accounts_77"
when
    $acc : Account(owner == null, uuid == "WmManipulation_77")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_77"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_77")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_77"))
    }
end
rule "Update all Credit Cards_77"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_77")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_77"
when
    $fact : SimpleFact(desc == "WmManipulation_77")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_76"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_76")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_76"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_76")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 76));
    }
end
rule "Retract all non valid Accounts_76"
when
    $acc : Account(owner == null, uuid == "WmManipulation_76")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_76"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_76")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_76"))
    }
end
rule "Update all Credit Cards_76"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_76")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_76"
when
    $fact : SimpleFact(desc == "WmManipulation_76")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_75"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_75")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_75"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_75")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 75));
    }
end
rule "Retract all non valid Accounts_75"
when
    $acc : Account(owner == null, uuid == "WmManipulation_75")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_75"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_75")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_75"))
    }
end
rule "Update all Credit Cards_75"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_75")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_75"
when
    $fact : SimpleFact(desc == "WmManipulation_75")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_74"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_74")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_74"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_74")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 74));
    }
end
rule "Retract all non valid Accounts_74"
when
    $acc : Account(owner == null, uuid == "WmManipulation_74")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_74"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_74")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_74"))
    }
end
rule "Update all Credit Cards_74"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_74")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_74"
when
    $fact : SimpleFact(desc == "WmManipulation_74")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_73"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_73")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_73"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_73")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 73));
    }
end
rule "Retract all non valid Accounts_73"
when
    $acc : Account(owner == null, uuid == "WmManipulation_73")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_73"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_73")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_73"))
    }
end
rule "Update all Credit Cards_73"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_73")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_73"
when
    $fact : SimpleFact(desc == "WmManipulation_73")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_72"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_72")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_72"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_72")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 72));
    }
end
rule "Retract all non valid Accounts_72"
when
    $acc : Account(owner == null, uuid == "WmManipulation_72")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_72"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_72")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_72"))
    }
end
rule "Update all Credit Cards_72"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_72")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_72"
when
    $fact : SimpleFact(desc == "WmManipulation_72")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_71"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_71")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_71"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_71")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 71));
    }
end
rule "Retract all non valid Accounts_71"
when
    $acc : Account(owner == null, uuid == "WmManipulation_71")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_71"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_71")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_71"))
    }
end
rule "Update all Credit Cards_71"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_71")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_71"
when
    $fact : SimpleFact(desc == "WmManipulation_71")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_70"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_70")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_70"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_70")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 70));
    }
end
rule "Retract all non valid Accounts_70"
when
    $acc : Account(owner == null, uuid == "WmManipulation_70")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_70"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_70")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_70"))
    }
end
rule "Update all Credit Cards_70"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_70")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_70"
when
    $fact : SimpleFact(desc == "WmManipulation_70")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_69"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_69")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_69"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_69")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 69));
    }
end
rule "Retract all non valid Accounts_69"
when
    $acc : Account(owner == null, uuid == "WmManipulation_69")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_69"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_69")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_69"))
    }
end
rule "Update all Credit Cards_69"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_69")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_69"
when
    $fact : SimpleFact(desc == "WmManipulation_69")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_68"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_68")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_68"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_68")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 68));
    }
end
rule "Retract all non valid Accounts_68"
when
    $acc : Account(owner == null, uuid == "WmManipulation_68")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_68"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_68")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_68"))
    }
end
rule "Update all Credit Cards_68"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_68")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_68"
when
    $fact : SimpleFact(desc == "WmManipulation_68")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_67"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_67")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_67"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_67")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 67));
    }
end
rule "Retract all non valid Accounts_67"
when
    $acc : Account(owner == null, uuid == "WmManipulation_67")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_67"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_67")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_67"))
    }
end
rule "Update all Credit Cards_67"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_67")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_67"
when
    $fact : SimpleFact(desc == "WmManipulation_67")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_66"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_66")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_66"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_66")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 66));
    }
end
rule "Retract all non valid Accounts_66"
when
    $acc : Account(owner == null, uuid == "WmManipulation_66")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_66"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_66")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_66"))
    }
end
rule "Update all Credit Cards_66"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_66")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_66"
when
    $fact : SimpleFact(desc == "WmManipulation_66")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_65"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_65")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_65"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_65")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 65));
    }
end
rule "Retract all non valid Accounts_65"
when
    $acc : Account(owner == null, uuid == "WmManipulation_65")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_65"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_65")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_65"))
    }
end
rule "Update all Credit Cards_65"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_65")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_65"
when
    $fact : SimpleFact(desc == "WmManipulation_65")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_64"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_64")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_64"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_64")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 64));
    }
end
rule "Retract all non valid Accounts_64"
when
    $acc : Account(owner == null, uuid == "WmManipulation_64")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_64"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_64")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_64"))
    }
end
rule "Update all Credit Cards_64"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_64")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_64"
when
    $fact : SimpleFact(desc == "WmManipulation_64")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_63"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_63")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_63"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_63")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 63));
    }
end
rule "Retract all non valid Accounts_63"
when
    $acc : Account(owner == null, uuid == "WmManipulation_63")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_63"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_63")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_63"))
    }
end
rule "Update all Credit Cards_63"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_63")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_63"
when
    $fact : SimpleFact(desc == "WmManipulation_63")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_62"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_62")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_62"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_62")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 62));
    }
end
rule "Retract all non valid Accounts_62"
when
    $acc : Account(owner == null, uuid == "WmManipulation_62")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_62"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_62")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_62"))
    }
end
rule "Update all Credit Cards_62"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_62")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_62"
when
    $fact : SimpleFact(desc == "WmManipulation_62")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_61"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_61")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_61"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_61")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 61));
    }
end
rule "Retract all non valid Accounts_61"
when
    $acc : Account(owner == null, uuid == "WmManipulation_61")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_61"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_61")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_61"))
    }
end
rule "Update all Credit Cards_61"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_61")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_61"
when
    $fact : SimpleFact(desc == "WmManipulation_61")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_60"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_60")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_60"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_60")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 60));
    }
end
rule "Retract all non valid Accounts_60"
when
    $acc : Account(owner == null, uuid == "WmManipulation_60")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_60"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_60")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_60"))
    }
end
rule "Update all Credit Cards_60"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_60")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_60"
when
    $fact : SimpleFact(desc == "WmManipulation_60")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_59"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_59")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_59"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_59")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 59));
    }
end
rule "Retract all non valid Accounts_59"
when
    $acc : Account(owner == null, uuid == "WmManipulation_59")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_59"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_59")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_59"))
    }
end
rule "Update all Credit Cards_59"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_59")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_59"
when
    $fact : SimpleFact(desc == "WmManipulation_59")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_58"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_58")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_58"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_58")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 58));
    }
end
rule "Retract all non valid Accounts_58"
when
    $acc : Account(owner == null, uuid == "WmManipulation_58")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_58"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_58")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_58"))
    }
end
rule "Update all Credit Cards_58"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_58")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_58"
when
    $fact : SimpleFact(desc == "WmManipulation_58")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_57"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_57")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_57"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_57")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 57));
    }
end
rule "Retract all non valid Accounts_57"
when
    $acc : Account(owner == null, uuid == "WmManipulation_57")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_57"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_57")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_57"))
    }
end
rule "Update all Credit Cards_57"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_57")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_57"
when
    $fact : SimpleFact(desc == "WmManipulation_57")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_56"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_56")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_56"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_56")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 56));
    }
end
rule "Retract all non valid Accounts_56"
when
    $acc : Account(owner == null, uuid == "WmManipulation_56")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_56"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_56")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_56"))
    }
end
rule "Update all Credit Cards_56"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_56")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_56"
when
    $fact : SimpleFact(desc == "WmManipulation_56")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_55"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_55")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_55"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_55")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 55));
    }
end
rule "Retract all non valid Accounts_55"
when
    $acc : Account(owner == null, uuid == "WmManipulation_55")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_55"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_55")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_55"))
    }
end
rule "Update all Credit Cards_55"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_55")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_55"
when
    $fact : SimpleFact(desc == "WmManipulation_55")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_54"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_54")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_54"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_54")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 54));
    }
end
rule "Retract all non valid Accounts_54"
when
    $acc : Account(owner == null, uuid == "WmManipulation_54")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_54"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_54")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_54"))
    }
end
rule "Update all Credit Cards_54"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_54")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_54"
when
    $fact : SimpleFact(desc == "WmManipulation_54")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_53"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_53")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_53"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_53")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 53));
    }
end
rule "Retract all non valid Accounts_53"
when
    $acc : Account(owner == null, uuid == "WmManipulation_53")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_53"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_53")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_53"))
    }
end
rule "Update all Credit Cards_53"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_53")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_53"
when
    $fact : SimpleFact(desc == "WmManipulation_53")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_52"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_52")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_52"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_52")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 52));
    }
end
rule "Retract all non valid Accounts_52"
when
    $acc : Account(owner == null, uuid == "WmManipulation_52")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_52"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_52")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_52"))
    }
end
rule "Update all Credit Cards_52"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_52")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_52"
when
    $fact : SimpleFact(desc == "WmManipulation_52")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_51"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_51")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_51"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_51")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 51));
    }
end
rule "Retract all non valid Accounts_51"
when
    $acc : Account(owner == null, uuid == "WmManipulation_51")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_51"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_51")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_51"))
    }
end
rule "Update all Credit Cards_51"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_51")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_51"
when
    $fact : SimpleFact(desc == "WmManipulation_51")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_50"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_50")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_50"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_50")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 50));
    }
end
rule "Retract all non valid Accounts_50"
when
    $acc : Account(owner == null, uuid == "WmManipulation_50")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_50"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_50")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_50"))
    }
end
rule "Update all Credit Cards_50"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_50")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_50"
when
    $fact : SimpleFact(desc == "WmManipulation_50")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_49"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_49")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_49"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_49")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 49));
    }
end
rule "Retract all non valid Accounts_49"
when
    $acc : Account(owner == null, uuid == "WmManipulation_49")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_49"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_49")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_49"))
    }
end
rule "Update all Credit Cards_49"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_49")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_49"
when
    $fact : SimpleFact(desc == "WmManipulation_49")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_48"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_48")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_48"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_48")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 48));
    }
end
rule "Retract all non valid Accounts_48"
when
    $acc : Account(owner == null, uuid == "WmManipulation_48")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_48"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_48")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_48"))
    }
end
rule "Update all Credit Cards_48"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_48")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_48"
when
    $fact : SimpleFact(desc == "WmManipulation_48")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_47"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_47")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_47"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_47")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 47));
    }
end
rule "Retract all non valid Accounts_47"
when
    $acc : Account(owner == null, uuid == "WmManipulation_47")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_47"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_47")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_47"))
    }
end
rule "Update all Credit Cards_47"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_47")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_47"
when
    $fact : SimpleFact(desc == "WmManipulation_47")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_46"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_46")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_46"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_46")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 46));
    }
end
rule "Retract all non valid Accounts_46"
when
    $acc : Account(owner == null, uuid == "WmManipulation_46")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_46"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_46")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_46"))
    }
end
rule "Update all Credit Cards_46"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_46")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_46"
when
    $fact : SimpleFact(desc == "WmManipulation_46")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_45"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_45")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_45"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_45")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 45));
    }
end
rule "Retract all non valid Accounts_45"
when
    $acc : Account(owner == null, uuid == "WmManipulation_45")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_45"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_45")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_45"))
    }
end
rule "Update all Credit Cards_45"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_45")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_45"
when
    $fact : SimpleFact(desc == "WmManipulation_45")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_44"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_44")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_44"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_44")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 44));
    }
end
rule "Retract all non valid Accounts_44"
when
    $acc : Account(owner == null, uuid == "WmManipulation_44")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_44"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_44")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_44"))
    }
end
rule "Update all Credit Cards_44"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_44")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_44"
when
    $fact : SimpleFact(desc == "WmManipulation_44")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_43"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_43")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_43"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_43")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 43));
    }
end
rule "Retract all non valid Accounts_43"
when
    $acc : Account(owner == null, uuid == "WmManipulation_43")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_43"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_43")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_43"))
    }
end
rule "Update all Credit Cards_43"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_43")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_43"
when
    $fact : SimpleFact(desc == "WmManipulation_43")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_42"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_42")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_42"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_42")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 42));
    }
end
rule "Retract all non valid Accounts_42"
when
    $acc : Account(owner == null, uuid == "WmManipulation_42")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_42"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_42")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_42"))
    }
end
rule "Update all Credit Cards_42"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_42")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_42"
when
    $fact : SimpleFact(desc == "WmManipulation_42")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_41"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_41")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_41"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_41")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 41));
    }
end
rule "Retract all non valid Accounts_41"
when
    $acc : Account(owner == null, uuid == "WmManipulation_41")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_41"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_41")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_41"))
    }
end
rule "Update all Credit Cards_41"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_41")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_41"
when
    $fact : SimpleFact(desc == "WmManipulation_41")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_40"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_40")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_40"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_40")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 40));
    }
end
rule "Retract all non valid Accounts_40"
when
    $acc : Account(owner == null, uuid == "WmManipulation_40")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_40"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_40")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_40"))
    }
end
rule "Update all Credit Cards_40"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_40")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_40"
when
    $fact : SimpleFact(desc == "WmManipulation_40")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_39"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_39")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_39"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_39")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 39));
    }
end
rule "Retract all non valid Accounts_39"
when
    $acc : Account(owner == null, uuid == "WmManipulation_39")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_39"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_39")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_39"))
    }
end
rule "Update all Credit Cards_39"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_39")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_39"
when
    $fact : SimpleFact(desc == "WmManipulation_39")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_38"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_38")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_38"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_38")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 38));
    }
end
rule "Retract all non valid Accounts_38"
when
    $acc : Account(owner == null, uuid == "WmManipulation_38")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_38"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_38")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_38"))
    }
end
rule "Update all Credit Cards_38"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_38")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_38"
when
    $fact : SimpleFact(desc == "WmManipulation_38")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_37"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_37")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_37"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_37")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 37));
    }
end
rule "Retract all non valid Accounts_37"
when
    $acc : Account(owner == null, uuid == "WmManipulation_37")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_37"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_37")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_37"))
    }
end
rule "Update all Credit Cards_37"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_37")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_37"
when
    $fact : SimpleFact(desc == "WmManipulation_37")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_36"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_36")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_36"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_36")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 36));
    }
end
rule "Retract all non valid Accounts_36"
when
    $acc : Account(owner == null, uuid == "WmManipulation_36")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_36"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_36")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_36"))
    }
end
rule "Update all Credit Cards_36"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_36")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_36"
when
    $fact : SimpleFact(desc == "WmManipulation_36")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_35"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_35")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_35"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_35")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 35));
    }
end
rule "Retract all non valid Accounts_35"
when
    $acc : Account(owner == null, uuid == "WmManipulation_35")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_35"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_35")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_35"))
    }
end
rule "Update all Credit Cards_35"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_35")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_35"
when
    $fact : SimpleFact(desc == "WmManipulation_35")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_34"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_34")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_34"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_34")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 34));
    }
end
rule "Retract all non valid Accounts_34"
when
    $acc : Account(owner == null, uuid == "WmManipulation_34")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_34"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_34")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_34"))
    }
end
rule "Update all Credit Cards_34"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_34")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_34"
when
    $fact : SimpleFact(desc == "WmManipulation_34")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_33"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_33")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_33"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_33")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 33));
    }
end
rule "Retract all non valid Accounts_33"
when
    $acc : Account(owner == null, uuid == "WmManipulation_33")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_33"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_33")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_33"))
    }
end
rule "Update all Credit Cards_33"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_33")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_33"
when
    $fact : SimpleFact(desc == "WmManipulation_33")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_32"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_32")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_32"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_32")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 32));
    }
end
rule "Retract all non valid Accounts_32"
when
    $acc : Account(owner == null, uuid == "WmManipulation_32")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_32"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_32")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_32"))
    }
end
rule "Update all Credit Cards_32"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_32")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_32"
when
    $fact : SimpleFact(desc == "WmManipulation_32")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_31"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_31")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_31"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_31")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 31));
    }
end
rule "Retract all non valid Accounts_31"
when
    $acc : Account(owner == null, uuid == "WmManipulation_31")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_31"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_31")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_31"))
    }
end
rule "Update all Credit Cards_31"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_31")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_31"
when
    $fact : SimpleFact(desc == "WmManipulation_31")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_30"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_30")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_30"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_30")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 30));
    }
end
rule "Retract all non valid Accounts_30"
when
    $acc : Account(owner == null, uuid == "WmManipulation_30")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_30"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_30")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_30"))
    }
end
rule "Update all Credit Cards_30"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_30")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_30"
when
    $fact : SimpleFact(desc == "WmManipulation_30")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_29"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_29")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_29"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_29")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 29));
    }
end
rule "Retract all non valid Accounts_29"
when
    $acc : Account(owner == null, uuid == "WmManipulation_29")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_29"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_29")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_29"))
    }
end
rule "Update all Credit Cards_29"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_29")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_29"
when
    $fact : SimpleFact(desc == "WmManipulation_29")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_28"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_28")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_28"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_28")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 28));
    }
end
rule "Retract all non valid Accounts_28"
when
    $acc : Account(owner == null, uuid == "WmManipulation_28")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_28"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_28")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_28"))
    }
end
rule "Update all Credit Cards_28"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_28")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_28"
when
    $fact : SimpleFact(desc == "WmManipulation_28")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_27"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_27")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_27"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_27")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 27));
    }
end
rule "Retract all non valid Accounts_27"
when
    $acc : Account(owner == null, uuid == "WmManipulation_27")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_27"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_27")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_27"))
    }
end
rule "Update all Credit Cards_27"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_27")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_27"
when
    $fact : SimpleFact(desc == "WmManipulation_27")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_26"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_26")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_26"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_26")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 26));
    }
end
rule "Retract all non valid Accounts_26"
when
    $acc : Account(owner == null, uuid == "WmManipulation_26")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_26"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_26")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_26"))
    }
end
rule "Update all Credit Cards_26"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_26")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_26"
when
    $fact : SimpleFact(desc == "WmManipulation_26")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_25"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_25")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_25"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_25")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 25));
    }
end
rule "Retract all non valid Accounts_25"
when
    $acc : Account(owner == null, uuid == "WmManipulation_25")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_25"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_25")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_25"))
    }
end
rule "Update all Credit Cards_25"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_25")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_25"
when
    $fact : SimpleFact(desc == "WmManipulation_25")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_24"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_24")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_24"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_24")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 24));
    }
end
rule "Retract all non valid Accounts_24"
when
    $acc : Account(owner == null, uuid == "WmManipulation_24")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_24"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_24")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_24"))
    }
end
rule "Update all Credit Cards_24"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_24")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_24"
when
    $fact : SimpleFact(desc == "WmManipulation_24")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_23"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_23")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_23"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_23")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 23));
    }
end
rule "Retract all non valid Accounts_23"
when
    $acc : Account(owner == null, uuid == "WmManipulation_23")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_23"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_23")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_23"))
    }
end
rule "Update all Credit Cards_23"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_23")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_23"
when
    $fact : SimpleFact(desc == "WmManipulation_23")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_22"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_22")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_22"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_22")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 22));
    }
end
rule "Retract all non valid Accounts_22"
when
    $acc : Account(owner == null, uuid == "WmManipulation_22")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_22"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_22")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_22"))
    }
end
rule "Update all Credit Cards_22"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_22")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_22"
when
    $fact : SimpleFact(desc == "WmManipulation_22")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_21"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_21")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_21"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_21")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 21));
    }
end
rule "Retract all non valid Accounts_21"
when
    $acc : Account(owner == null, uuid == "WmManipulation_21")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_21"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_21")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_21"))
    }
end
rule "Update all Credit Cards_21"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_21")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_21"
when
    $fact : SimpleFact(desc == "WmManipulation_21")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_20"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_20")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_20"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_20")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 20));
    }
end
rule "Retract all non valid Accounts_20"
when
    $acc : Account(owner == null, uuid == "WmManipulation_20")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_20"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_20")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_20"))
    }
end
rule "Update all Credit Cards_20"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_20")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_20"
when
    $fact : SimpleFact(desc == "WmManipulation_20")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_19"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_19")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_19"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_19")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 19));
    }
end
rule "Retract all non valid Accounts_19"
when
    $acc : Account(owner == null, uuid == "WmManipulation_19")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_19"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_19")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_19"))
    }
end
rule "Update all Credit Cards_19"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_19")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_19"
when
    $fact : SimpleFact(desc == "WmManipulation_19")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_18"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_18")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_18"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_18")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 18));
    }
end
rule "Retract all non valid Accounts_18"
when
    $acc : Account(owner == null, uuid == "WmManipulation_18")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_18"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_18")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_18"))
    }
end
rule "Update all Credit Cards_18"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_18")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_18"
when
    $fact : SimpleFact(desc == "WmManipulation_18")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_17"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_17")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_17"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_17")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 17));
    }
end
rule "Retract all non valid Accounts_17"
when
    $acc : Account(owner == null, uuid == "WmManipulation_17")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_17"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_17")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_17"))
    }
end
rule "Update all Credit Cards_17"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_17")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_17"
when
    $fact : SimpleFact(desc == "WmManipulation_17")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_16"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_16")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_16"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_16")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 16));
    }
end
rule "Retract all non valid Accounts_16"
when
    $acc : Account(owner == null, uuid == "WmManipulation_16")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_16"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_16")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_16"))
    }
end
rule "Update all Credit Cards_16"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_16")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_16"
when
    $fact : SimpleFact(desc == "WmManipulation_16")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_15"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_15")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_15"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_15")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 15));
    }
end
rule "Retract all non valid Accounts_15"
when
    $acc : Account(owner == null, uuid == "WmManipulation_15")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_15"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_15")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_15"))
    }
end
rule "Update all Credit Cards_15"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_15")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_15"
when
    $fact : SimpleFact(desc == "WmManipulation_15")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_14"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_14")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_14"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_14")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 14));
    }
end
rule "Retract all non valid Accounts_14"
when
    $acc : Account(owner == null, uuid == "WmManipulation_14")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_14"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_14")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_14"))
    }
end
rule "Update all Credit Cards_14"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_14")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_14"
when
    $fact : SimpleFact(desc == "WmManipulation_14")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_13"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_13")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_13"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_13")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 13));
    }
end
rule "Retract all non valid Accounts_13"
when
    $acc : Account(owner == null, uuid == "WmManipulation_13")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_13"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_13")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_13"))
    }
end
rule "Update all Credit Cards_13"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_13")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_13"
when
    $fact : SimpleFact(desc == "WmManipulation_13")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_12"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_12")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_12"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_12")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 12));
    }
end
rule "Retract all non valid Accounts_12"
when
    $acc : Account(owner == null, uuid == "WmManipulation_12")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_12"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_12")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_12"))
    }
end
rule "Update all Credit Cards_12"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_12")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_12"
when
    $fact : SimpleFact(desc == "WmManipulation_12")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_11"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_11")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_11"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_11")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 11));
    }
end
rule "Retract all non valid Accounts_11"
when
    $acc : Account(owner == null, uuid == "WmManipulation_11")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_11"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_11")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_11"))
    }
end
rule "Update all Credit Cards_11"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_11")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_11"
when
    $fact : SimpleFact(desc == "WmManipulation_11")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_10"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_10")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_10"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_10")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 10));
    }
end
rule "Retract all non valid Accounts_10"
when
    $acc : Account(owner == null, uuid == "WmManipulation_10")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_10"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_10")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_10"))
    }
end
rule "Update all Credit Cards_10"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_10")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_10"
when
    $fact : SimpleFact(desc == "WmManipulation_10")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_9"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_9")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_9"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_9")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 9));
    }
end
rule "Retract all non valid Accounts_9"
when
    $acc : Account(owner == null, uuid == "WmManipulation_9")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_9"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_9")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_9"))
    }
end
rule "Update all Credit Cards_9"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_9")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_9"
when
    $fact : SimpleFact(desc == "WmManipulation_9")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_8"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_8")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_8"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_8")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 8));
    }
end
rule "Retract all non valid Accounts_8"
when
    $acc : Account(owner == null, uuid == "WmManipulation_8")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_8"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_8")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_8"))
    }
end
rule "Update all Credit Cards_8"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_8")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_8"
when
    $fact : SimpleFact(desc == "WmManipulation_8")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_7"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_7")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_7"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_7")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 7));
    }
end
rule "Retract all non valid Accounts_7"
when
    $acc : Account(owner == null, uuid == "WmManipulation_7")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_7"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_7")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_7"))
    }
end
rule "Update all Credit Cards_7"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_7")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_7"
when
    $fact : SimpleFact(desc == "WmManipulation_7")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_6"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_6")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_6"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_6")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 6));
    }
end
rule "Retract all non valid Accounts_6"
when
    $acc : Account(owner == null, uuid == "WmManipulation_6")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_6"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_6")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_6"))
    }
end
rule "Update all Credit Cards_6"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_6")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_6"
when
    $fact : SimpleFact(desc == "WmManipulation_6")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_5"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_5")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_5"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_5")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 5));
    }
end
rule "Retract all non valid Accounts_5"
when
    $acc : Account(owner == null, uuid == "WmManipulation_5")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_5"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_5")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_5"))
    }
end
rule "Update all Credit Cards_5"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_5")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_5"
when
    $fact : SimpleFact(desc == "WmManipulation_5")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_4"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_4")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_4"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_4")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 4));
    }
end
rule "Retract all non valid Accounts_4"
when
    $acc : Account(owner == null, uuid == "WmManipulation_4")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_4"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_4")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_4"))
    }
end
rule "Update all Credit Cards_4"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_4")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_4"
when
    $fact : SimpleFact(desc == "WmManipulation_4")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_3"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_3")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_3"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_3")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 3));
    }
end
rule "Retract all non valid Accounts_3"
when
    $acc : Account(owner == null, uuid == "WmManipulation_3")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_3"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_3")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_3"))
    }
end
rule "Update all Credit Cards_3"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_3")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_3"
when
    $fact : SimpleFact(desc == "WmManipulation_3")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_2"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_2")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_2"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_2")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 2));
    }
end
rule "Retract all non valid Accounts_2"
when
    $acc : Account(owner == null, uuid == "WmManipulation_2")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_2"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_2")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_2"))
    }
end
rule "Update all Credit Cards_2"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_2")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_2"
when
    $fact : SimpleFact(desc == "WmManipulation_2")
then
    retract($fact);
end

rule "Insert all accounts for each Customer_1"
when
    $cust : Customer(firstName != null, lastName != null, uuid == "WmManipulation_1")
then
    insert(new SimpleFact());
    for (Account acc: $cust.accounts) {
        insert(acc);
    }
end
rule "Insert logical facts for each Account_1"
salience 10
when
    $acc : Account(owner == null, uuid == "WmManipulation_1")
then
    insertLogical(new LogicalFact("logicalFactDescription"))
    for (int i = 0; i < 10; i++) {
        insertLogical(new LogicalFact("logicalFactDescription" + i + 1));
    }
end
rule "Retract all non valid Accounts_1"
when
    $acc : Account(owner == null, uuid == "WmManipulation_1")
then
    // retracting these accounts will also 'invalidite' previous rule, logical facts will be retracted too
    retract($acc);
end
rule "Insert some facts for each Creadit Card_1"
salience 10
when
    $card : CreditCard(issuedDate != null, uuid == "WmManipulation_1")
then
    insert(new SimpleFact("someDescription"));
    for (int i = 0; i < 200; i++) {
        insert(new SimpleFact("WmManipulation_1"))
    }
end
rule "Update all Credit Cards_1"
when
    $card : CreditCard(issuedDate == null, uuid == "WmManipulation_1")
then
    $card.issuedDate = new Date();
    update($card);
end
rule "Retract all simple facts_1"
when
    $fact : SimpleFact(desc == "WmManipulation_1")
then
    retract($fact);
end


