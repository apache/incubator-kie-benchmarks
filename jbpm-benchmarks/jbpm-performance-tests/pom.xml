<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.jbpm</groupId>
    <artifactId>jbpm-benchmarks</artifactId>
    <version>7.52.0-SNAPSHOT</version>
  </parent>

  <groupId>org.jbpm</groupId>
  <artifactId>jbpm-performance-tests</artifactId>

  <name>jBPM Performance Tests</name>

  <properties>
    <kit.version>${version.org.kie}</kit.version>
    <metrics.version>3.1.0</metrics.version>

    <!-- >>>>>>>>>>>>>>>> Performance configuration <<<<<<<<<<<<<<<<<<<< -->

    <projectName>BPM Suite</projectName>
    <suite>LoadSuite</suite>
    <scenario></scenario>
    <startScriptLocation>./run.sh</startScriptLocation>

    <!-- Duration (in seconds), Iteration -->
    <runType>Iteration</runType>
    <duration>300</duration>
    <iterations>1</iterations>
    <expectedRate>30</expectedRate>

    <warmUp>false</warmUp>
    <warmUpCount>1</warmUpCount>
    <warmUpTime>30</warmUpTime>
    <auditLogging>true</auditLogging>

    <!-- Properties applicable for concurrent testing, when more than 1, enable 
      warmUp, see README for more details -->
    <threads>4</threads>

    <!-- Reporting - Console, CSVSingle, PerfRepo, CSV, (periodicity in seconds) -->

    <reporterType>Console</reporterType>
    <periodicity>5</periodicity>
    <reportDataLocation>reportData</reportDataLocation>

    <!-- PerfRepo configuration -->
    <perfRepo.host>localhost</perfRepo.host>
    <perfRepo.urlPath></perfRepo.urlPath>
    <perfRepo.username></perfRepo.username>
    <perfRepo.password></perfRepo.password>

    <!-- Measure - MemoryUsage,FileDescriptors,ThreadStates,CPUUsage -->
    <measure>MemoryUsage,FileDescriptors,ThreadStates,CPUUsage</measure>

    <!-- >>>>>>>>>>>>>>>> JBPM Test Configuration <<<<<<<<<<<<<<<<<<<< -->

    <!-- Strategy - Singleton, PerProcessInstance, PerRequest -->
    <jbpm.runtimeManagerStrategy>PerProcessInstance</jbpm.runtimeManagerStrategy>
    <jbpm.persistence>true</jbpm.persistence>
    <jbpm.concurrentUsersCount>2</jbpm.concurrentUsersCount>

    <!-- Pessimistic or optimistic locking -->
    <jbpm.locking>optimistic</jbpm.locking>

    <!-- Lazy loading of human tasks is disabled by default, enabling reduces 
      queries but may introduce tx risks with getTask when jbpm manages tx itself -->
    <jbpm.ht.eager>true</jbpm.ht.eager>

    <!-- Tomcat DBCP 2 pool configuration -->
    <maven.dbcp2.poolSize>16</maven.dbcp2.poolSize>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>kie-performance-kit</artifactId>
        <version>${kit.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${metrics.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-jvm</artifactId>
        <version>${metrics.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-internal</artifactId>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-performance-kit</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.hibernate.javax.persistence</groupId>
          <artifactId>hibernate-jpa-2.1-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-jvm</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-persistence-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-human-task-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-human-task-audit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-runtime-manager</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-kie-services</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-executor</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jbpm</groupId>
      <artifactId>jbpm-flow</artifactId>
    </dependency>
    <dependency>
      <groupId>org.drools</groupId>
      <artifactId>drools-workbench-models-guided-dtable</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>javax.persistence-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.narayana.jta</groupId>
      <artifactId>narayana-jta</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat</groupId>
      <artifactId>tomcat-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>simple-jndi</groupId>
      <artifactId>simple-jndi</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.kie</groupId>
      <artifactId>kie-test-util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jboss.spec.javax.transaction</groupId>
      <artifactId>jboss-transaction-api_1.2_spec</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/filtered-resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>-DprojectName=${projectName}</argument>
            <argument>-Dsuite=${suite}</argument>
            <argument>-Dscenario=${scenario}</argument>
            <argument>-DstartScriptLocation=${startScriptLocation}</argument>
            <argument>-DrunType=${runType}</argument>
            <argument>-Dduration=${duration}</argument>
            <argument>-Diterations=${iterations}</argument>
            <argument>-DexpectedRate=${expectedRate}</argument>
            <argument>-DwarmUp=${warmUp}</argument>
            <argument>-DwarmUpCount=${warmUpCount}</argument>
            <argument>-DwarmUpTime=${warmUpTime}</argument>
            <argument>-DauditLogging=${auditLogging}</argument>
            <argument>-Dthreads=${threads}</argument>
            <argument>-DreporterType=${reporterType}</argument>
            <argument>-Dperiodicity=${periodicity}</argument>
            <argument>-DreportDataLocation=${reportDataLocation}</argument>
            <argument>-Dmeasure=${measure}</argument>

            <argument>-DperfRepo.host=${perfRepo.host}</argument>
            <argument>-DperfRepo.urlPath=${perfRepo.urlPath}</argument>
            <argument>-DperfRepo.username=${perfRepo.username}</argument>
            <argument>-DperfRepo.password=${perfRepo.password}</argument>

            <argument>-DdatabaseName=${maven.jdbc.db.name}</argument>

            <argument>-Djbpm.runtimeManagerStrategy=${jbpm.runtimeManagerStrategy}</argument>
            <argument>-Djbpm.persistence=${jbpm.persistence}</argument>
            <argument>-Djbpm.concurrentUsersCount=${jbpm.concurrentUsersCount}</argument>
            <argument>-Djbpm.locking=${jbpm.locking}</argument>
            <argument>-Djbpm.ht.eager=${jbpm.ht.eager}</argument>

            <argument>-classpath</argument>
            <classpath />
            <argument>org.kie.perf.Executor</argument>
          </arguments>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>h2</id>
      <activation>
        <property>
          <name>!perfdb</name>
        </property>
      </activation>
      <!-- H2 Database configuration -->
      <properties>
        <maven.jdbc.db.name>H2</maven.jdbc.db.name>
        <maven.hibernate.hbm2ddl>create-drop</maven.hibernate.hbm2ddl>
        <maven.hibernate.dialect>org.hibernate.dialect.H2Dialect</maven.hibernate.dialect>
        <maven.datasource.classname>org.h2.jdbcx.JdbcDataSource</maven.datasource.classname>
        <maven.jdbc.driver.class>org.h2.Driver</maven.jdbc.driver.class>
        <maven.jdbc.password />
        <maven.jdbc.username>sa</maven.jdbc.username>
        <maven.jdbc.db.port />
        <maven.jdbc.db.server />
        <maven.jdbc.url>jdbc:h2:mem:test;MVCC=true</maven.jdbc.url>
      </properties>
    </profile>
  </profiles>

  <developers>
    <developer>
      <name>Ivo Bek</name>
      <email>bekivo@gmail.com</email>
    </developer>
    <developer>
      <name>Marián Macik</name>
      <email>mmacik@redhat.com</email>
    </developer>
  </developers>

</project>
